# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.digitalocean.com/dgiini-k8s
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   memory: 3Gi
  #   cpu: 500m
  # requests:
  #   memory: 2Gi
  #   cpu: 300m

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# dgiini
appName: dgiini
version: 246
environment: development

webPort: 443
apigwPort: 443

msPorts:  
  authApiPort: 80
  taskApiPort: 80
  notifyApiPort: 80
  msgApiPort: 80
  billApiPort: 80
  reviewApiPort: 80

smtp:
  host: smtp.google.com
  password: password

sendgrid:
  password: password

web:
  appName: web
  appVersion: 0.0.1
  appBuild: 0
  domain: dgiini.ca
  image: web

apigw:
  appName: apigw
  appServiceName: apigw/apigw
  appVersion: 0.0.1
  appBuild: 0
  image: apigw

auth:
  appName: auth
  appServiceName: auth-api/microservices
  appVersion: 0.0.1
  appBuild: 0
  corClientURL: https://www.dgiini.ca
  image: auth
  db:
    host: dgiinidb-mongodb-0.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017,dgiinidb-mongodb-1.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017,dgiinidb-mongodb-2.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017
    name: dg_authdb
    replicaset: dbrepl

task:
  appName: task
  appServiceName: task-api/microservices
  appVersion: 0.0.1
  appBuild: 0
  corClientURL: https://www.dgiini.ca
  image: task
  db:
    host: dgiinidb-mongodb-0.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017,dgiinidb-mongodb-1.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017,dgiinidb-mongodb-2.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017
    name: dg_taskdb
    replicaset: dbrepl

notify:
  appName: notify
  appServiceName: notify-api/microservices
  appVersion: 0.0.1
  appBuild: 0
  corClientURL: https://www.dgiini.ca
  image: notify
  db:
    host: dgiinidb-mongodb-0.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017,dgiinidb-mongodb-1.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017,dgiinidb-mongodb-2.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017
    name: dg_notifydb
    replicaset: dbrepl

review:
  appName: review
  appServiceName: review-api/microservices
  appVersion: 0.0.1
  appBuild: 0
  corClientURL: https://www.dgiini.ca
  image: review
  db:
    host: dgiinidb-mongodb-0.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017,dgiinidb-mongodb-1.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017,dgiinidb-mongodb-2.dgiinidb-mongodb-headless.dgiini.svc.cluster.local:27017
    name: dg_reviewdb
    replicaset: dbrepl
