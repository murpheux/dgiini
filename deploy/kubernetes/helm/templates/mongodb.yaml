---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: {{ .Values.appName }}
spec:
  serviceName: mongo
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels: # These labels are used by services to match with your STS make sure these selectors are unique
      app: mongo 
      component: database
  template:
    metadata:
      labels: # These labels are used by services to match with your STS make sure these selectors are unique
        app: mongo
        component: database
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: mongo:4
        args: # Feel free to add additional options there but always use the "args" do not override the entry point with "command"
          - "--replSet"
          - "dbrepl" 
          - "--bind_ip_all"
        ports:
        - name: mongo # Open POD port
          containerPort: 27017
          protocol: TCP
        volumeMounts:
        - name: mongo-pvc # Mount the PVC so that we can have the data outside the POD
          mountPath: /data/db
        env:
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credential
              key: mongo-password
        envFrom:
        - configMapRef: # Import our config map
            name: mongo-config
      - name: mongo-sidecar
        image: cvallance/mongo-k8s-sidecar
        env:
        - name: MONGO_SIDECAR_POD_LABELS # CAUTION: Change this if you change your labels !!!!
          value: "app=mongo,component=database"
        - name: KUBERNETES_MONGO_SERVICE_NAME # This tells the sidecar which service you will use to expose pods
          value: "mongo"
        - name: KUBE_NAMESPACE # CAUTION: Change this or remove this if you change the namespace
          value: "dgiini"
        - name: MONGODB_USERNAME # Import our user from the config map
          valueFrom:
            configMapKeyRef:
              name: mongo-config
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGODB_PASSWORD # Import our password
          valueFrom:
            secretKeyRef:
              name: mongo-credential
              key: password
        - name: MONGODB_DATABASE # The mongdb admin database
          value: admin
  volumeClaimTemplates: # You can customize the PVC if you need to rely on a faster storage... 
  - metadata:
      name: mongo-pvc
      labels:
        app: mongo
        component: mongo-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: do-block-storage
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}-db # The name is important as it will be part of the URL to access your mongo instance
  namespace: {{ .Values.appName }} # Change or remove me
  labels:
    name: {{ .Values.appName }}-db
    component: database-service
spec:
  ports:
    - port: {{ .Values.auth.db.port }}
      targetPort: {{ .Values.auth.db.port }}
  clusterIP: None
  selector: # If you've changed your selectors make sure to change them also here !
    role: {{ .Values.appName }}-db