# kubectl exec -ti mongo-0 mongo     
# rs.initiate()
# rs.conf()
# mongo mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo:27017/development
#
## Generate a key
# openssl rand -base64 741 > mongodb-keyfile
## Create k8s secrets
# kubectl create secret generic mongo-key --from-file=mongodb-keyfile
---
apiVersion: v1
kind: Service
metadata:
  name: dgiini-db
  namespace: dgiini
  labels:
    name: dgiini-db
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: dgiini-db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dgiini-db
  namespace: dgiini
spec:
  serviceName: "dgiini-db"
  replicas: 3
  selector:
    matchLabels:
      role: dgiini-db
  template:
    metadata:
      labels:
        role: dgiini-db
        environment: development
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        # - name: dgiini-db
        #   image: mongo:3.4
        #   command:
        #     - mongod
        #     - "--replSet"
        #     - rs0
        #     - "--bind_ip"
        #     - 0.0.0.0
        #     - "--smallfiles"
        #     - "--noprealloc"
        #   ports:
        #     - containerPort: 27017
        #   volumeMounts:
        #     - name: dgiini-volume
        #       mountPath: /data/db
        # - name: mongo-sidecar
        #   image: cvallance/mongo-k8s-sidecar
        #   env:
        #     - name: MONGO_SIDECAR_POD_LABELS
        #       value: "role=dgiini-db,environment=development"
        - name: mongodb
          image: mongo:3.4
          command:
          - /bin/sh
          - -c
          - >
            if [ -f /data/db/admin-user.lock ]; then
              mongod --replSet rs0 --clusterAuthMode keyFile --keyFile /etc/secrets-volume/mongodb-keyfile --setParameter authenticationMechanisms=SCRAM-SHA-1;
            else
              mongod --auth;
            fi;
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - >
                  if [ ! -f /data/db/admin-user.lock ]; then
                    sleep 5;
                    touch /data/db/admin-user.lock
                    if [ "$HOSTNAME" = "dgiini-db-0" ]; then
                      mongo --eval 'db = db.getSiblingDB("admin"); db.createUser({ user: "admin", pwd: "password", roles: [{ role: "root", db: "admin" }]});';
                    fi;
                    mongod --shutdown;
                  fi;
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-key
              mountPath: "/etc/secrets-volume"
              readOnly: true
            - name: dgiini-volume
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=dgiini-db,environment=development"
            - name: MONGODB_USERNAME
              value: admin
            - name: MONGODB_PASSWORD
              value: password
            - name: MONGODB_DATABASE
              value: admin
      volumes:
      - name: mongo-key
        secret:
          defaultMode: 0400
          secretName: mongo-key
  volumeClaimTemplates:
  - metadata:
      name: dgiini-volume
      annotations:
        volume.beta.kubernetes.io/storage-class: do-block-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
