version: '3.7'
services:

    web:
        image: nginx:1.17.2
        depends_on:
            - apigw
        environment:
            - NGINX_HOST=dgiini.com
            - NGINX_PORT=80
        ports:
            - "9000:80"
        volumes:
            - ../../dgiini:/usr/share/nginx/html
            - ../nginx/dgiini.template:/etc/nginx/conf.d/dgiini.template
        container_name: web
        #command: /bin/bash -c "envsubst < /etc/nginx/conf.d/dgiini.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
        networks:
            - dgnet

    apigw:
        image: node:12.6.0-stretch
        depends_on:
            - auth_api
            - task_api
            - msg_api
        environment:
            - NODE_ENV=development
            - TASK_API_PORT=80
            - MSG_API_PORT=80
            - AUTH_API_PORT=80
            - APP_NAME=apigw/apigw
            - APP_VERSION=v0.1
            - APP_BUILD=0.0.1.00237
        ports:
            - "7000:80"
        volumes:
            - ../../apigw:/usr/src/app
        container_name: apigw
        command: >
            bash -c "cd /usr/src/app
            && npm install --only=production
            && npm run start"
        networks:
            - dgnet

    auth_api:
        image: node:12.6.0-stretch
        depends_on:
            - db
        environment:
            - NODE_ENV=development
            - TASK_API_PORT=80
            - MSG_API_PORT=80
            - AUTH_API_PORT=80
            - DB_HOST=db
            - DB_PORT=27017
            - AUTH_DATABASE=dg_authdb
            - APP_NAME=auth_api/microservices
            - APP_VERSION=v0.1
            - APP_BUILD=0.0.1.00237
            - COR_CLIENT_URL=*
            - CITY_SERVICE=https://tools.keycdn.com/geo.json
        ports:
            - "8008:80"
        volumes:
            - ../../msauth:/usr/src/app
        container_name: auth_api
        command: >
            bash -c "cd /usr/src/app
            && npm install --only=production
            && node auth_api"
        networks:
            - dgnet

    task_api:
        image: node:12.6.0-stretch
        depends_on:
            - db
        environment:
            - NODE_ENV=development
            - TASK_API_PORT=80
            - MSG_API_PORT=80
            - AUTH_API_PORT=80
            - DB_HOST=db
            - DB_PORT=27017
            - TASK_DATABASE=dg_taskdb
            - APP_NAME=task_api/microservices
            - APP_VERSION=v0.1
            - APP_BUILD=0.0.1.00237
            - COR_CLIENT_URL=*
            - CITY_SERVICE=https://tools.keycdn.com/geo.json
        ports:
            - "8000:80"
        volumes:
            - ../../mstask:/usr/src/app
        container_name: task_api
        command: >
            bash -c "cd /usr/src/app
            && npm install --only=production
            && node task_api"
        networks:
            - dgnet

    msg_api:
        image: node:12.6.0-stretch
        depends_on:
            - db
        environment:
            - NODE_ENV=development
            - TASK_API_PORT=80
            - MSG_API_PORT=80
            - AUTH_API_PORT=80
            - DB_HOST=db
            - DB_PORT=27017
            - TASK_DATABASE=dg_msgdb
            - APP_NAME=msg_api/microservices
            - APP_VERSION=v0.1
            - APP_BUILD=0.0.1.00237
            - COR_CLIENT_URL=*
            - CITY_SERVICE=https://tools.keycdn.com/geo.json
        ports:
            - "8004:80"
        volumes:
            - ../../msmsg:/usr/src/app
        container_name: msg_api
        command: >
            bash -c "cd /usr/src/app
            && npm install --only=production
            && node msg_api"
        networks:
            - dgnet

    db:
        image: mongo:4.1.13-bionic
        container_name: dgmongo
        networks:
            - dgnet

networks:
    dgnet:
