version: "3"
services:

    web:
        # will build ./web/Dockerfile
        build: ./web
        environment:
            - NODE_ENV=development
        ports:
            - "9000:80"
        volumes:
            - ../../webui:/var/www/html
        container_name: qt_web
        networks:
            - webnet

    apigw:
        build: ./apigw
        environment:
            - NODE_ENV=development
        ports:
            - "8000:8000"
        volumes:
            - ../../api_gateway:/usr/src/app
            - ../../certs:/usr/src/app/certs
        container_name: qt_apigw
        command: >
            bash -c "cd /usr/src/app
            && mkdir logs
            && yarn install
            && yarn start"
        networks:
            - gwnet

    auth_service:
        build: ./service
        environment:
            - NODE_ENV=development
        ports:
            - "7000:7000"
        volumes:
            - ../../service:/usr/src/app
        container_name: qt_auth
        # links:
        #     - db
        # depends_on:
        #     - db
        command: >
            bash -c "cd /usr/src/app
            && mkdir logs
            && pip install --upgrade pip
            && pip install -r requirements.txt
            && gunicorn --certfile=certs/qtaskr.crt --keyfile=certs/private.key --workers=2 --bind 0.0.0.0:7000 auth_v1:api"
        networks:
            - svcnet

    task_service:
        build: ./service
        environment:
            - NODE_ENV=development
        ports:
            - "7000:7000"
            - "7001:7001"
        volumes:
            - ../../service:/usr/src/app
        container_name: qt_task
        # links:
        #     - db
        # depends_on:
        #     - db
        command: >
            bash -c "cd /usr/src/app
            && mkdir logs
            && pip install --upgrade pip
            && pip install -r requirements.txt
            && python ./seed.py
            && gunicorn --certfile=certs/qtaskr.crt --keyfile=certs/private.key --workers=2 --bind 0.0.0.0:7001 task_v1:api"
        networks:
            - svcnet

    db:
        image: mongo:4.1.10-bionic
        ports:
            - "27017:27017"
        container_name: qmongo
        networks:
            - dbnet

#   redis:
#     image: redis:4.0.9-alpine
#     ports:
#       - "6379:6379"
#     container_name: redii
    #networks:
    #  - dbnet
    #deploy:
    #  replicas: 2
    #  update_config:
    #    parallelism: 2
    #    delay: 10s
    #  restart_policy:
    #    condition: on-failure

    # rmq:
    #   image: rabbitmq:3.7.7
    #   ports:
    #     - "5672:5672"
    #     - "15672:15672"
    #   container_name: rabii
    #   networks:
    #           - dbnet

    rmq:
        image: rabbitmq:management
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
              - dbnet

networks:
    webnet:
    gwnet:
    svcnet:
    dbnet:

# volumes:
#     db-data:


