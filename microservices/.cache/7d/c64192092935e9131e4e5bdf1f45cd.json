{"id":"../node_modules/mongodb-core/lib/sessions.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"./connection/utils","loc":{"line":3,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/utils.js"},{"name":"events","loc":{"line":4,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/node-libs-browser/node_modules/events/events.js"},{"name":"./utils","loc":{"line":14,"column":30},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/utils.js"},{"name":"./error","loc":{"line":11,"column":39},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"././error","loc":{"line":9,"column":33},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"./transactions","loc":{"line":16,"column":37},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/transactions.js"},{"name":"./topologies/read_preference","loc":{"line":15,"column":31},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/read_preference.js"},{"name":"./topologies/shared","loc":{"line":17,"column":35},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js"}],"generated":{"js":"'use strict';\n\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst EventEmitter = require('events');\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\nconst uuidV4 = require('./utils').uuidV4;\nconst MongoError = require('./error').MongoError;\nconst isRetryableError = require('././error').isRetryableError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst MongoWriteConcernError = require('./error').MongoWriteConcernError;\nconst Transaction = require('./transactions').Transaction;\nconst TxnState = require('./transactions').TxnState;\nconst isPromiseLike = require('./utils').isPromiseLike;\nconst ReadPreference = require('./topologies/read_preference');\nconst isTransactionCommand = require('./transactions').isTransactionCommand;\nconst resolveClusterTime = require('./topologies/shared').resolveClusterTime;\n\nfunction assertAlive(session, callback) {\n  if (session.serverSession == null) {\n    const error = new MongoError('Cannot use a session that has ended');\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return false;\n    }\n\n    throw error;\n  }\n\n  return true;\n}\n\n/**\n * Options to pass when creating a Client Session\n * @typedef {Object} SessionOptions\n * @property {boolean} [causalConsistency=true] Whether causal consistency should be enabled on this session\n * @property {TransactionOptions} [defaultTransactionOptions] The default TransactionOptions to use for transactions started on this session.\n */\n\n/**\n * A BSON document reflecting the lsid of a {@link ClientSession}\n * @typedef {Object} SessionId\n */\n\n/**\n * A class representing a client session on the server\n * WARNING: not meant to be instantiated directly.\n * @class\n * @hideconstructor\n */\nclass ClientSession extends EventEmitter {\n  /**\n   * Create a client session.\n   * WARNING: not meant to be instantiated directly\n   *\n   * @param {Topology} topology The current client's topology (Internal Class)\n   * @param {ServerSessionPool} sessionPool The server session pool (Internal Class)\n   * @param {SessionOptions} [options] Optional settings\n   * @param {Object} [clientOptions] Optional settings provided when creating a client in the porcelain driver\n   */\n  constructor(topology, sessionPool, options, clientOptions) {\n    super();\n\n    if (topology == null) {\n      throw new Error('ClientSession requires a topology');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      throw new Error('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options || {};\n    this.topology = topology;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.serverSession = sessionPool.acquire();\n    this.clientOptions = clientOptions;\n\n    this.supports = {\n      causalConsistency:\n        typeof options.causalConsistency !== 'undefined' ? options.causalConsistency : true\n    };\n\n    options = options || {};\n    if (typeof options.initialClusterTime !== 'undefined') {\n      this.clusterTime = options.initialClusterTime;\n    } else {\n      this.clusterTime = null;\n    }\n\n    this.operationTime = null;\n    this.explicit = !!options.explicit;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n    this.transaction = new Transaction();\n  }\n\n  /**\n   * The server id associated with this session\n   * @type {SessionId}\n   */\n  get id() {\n    return this.serverSession.id;\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param {Object} [options] Optional settings. Currently reserved for future use\n   * @param {Function} [callback] Optional callback for completion of this operation\n   */\n  endSession(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    if (this.hasEnded) {\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    if (this.serverSession && this.inTransaction()) {\n      this.abortTransaction(); // pass in callback?\n    }\n\n    // mark the session as ended, and emit a signal\n    this.hasEnded = true;\n    this.emit('ended', this);\n\n    // release the server session back to the pool\n    this.sessionPool.release(this.serverSession);\n    this.serverSession = null;\n\n    // spec indicates that we should ignore all errors for `endSessions`\n    if (typeof callback === 'function') callback(null, null);\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param {Timestamp} operationTime the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime) {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Used to determine if this session equals another\n   * @param {ClientSession} session\n   * @return {boolean} true if the sessions are equal\n   */\n  equals(session) {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    return this.id.id.buffer.equals(session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   */\n  incrementTransactionNumber() {\n    this.serverSession.txnNumber++;\n  }\n\n  /**\n   * @returns {boolean} whether this session is currently in a transaction or not\n   */\n  inTransaction() {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param {TransactionOptions} options Options for the transaction\n   */\n  startTransaction(options) {\n    assertAlive(this);\n    if (this.inTransaction()) {\n      throw new MongoError('Transaction already in progress');\n    }\n\n    // increment txnNumber\n    this.incrementTransactionNumber();\n\n    // create transaction state\n    this.transaction = new Transaction(\n      Object.assign({}, this.clientOptions, options || this.defaultTransactionOptions)\n    );\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  commitTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'commitTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'commitTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  abortTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'abortTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'abortTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   * @ignore\n   */\n  toBSON() {\n    throw new Error('ClientSession cannot be serialized to BSON.');\n  }\n\n  /**\n   * A user provided function to be run within a transaction\n   *\n   * @callback WithTransactionCallback\n   * @param {ClientSession} session The parent session of the transaction running the operation. This should be passed into each operation within the lambda.\n   * @returns {Promise} The resulting Promise of operations run within this transaction\n   */\n\n  /**\n   * Runs a provided lambda within a transaction, retrying either the commit operation\n   * or entire transaction as needed (and when the error permits) to better ensure that\n   * the transaction can complete successfully.\n   *\n   * IMPORTANT: This method requires the user to return a Promise, all lambdas that do not\n   * return a Promise will result in undefined behavior.\n   *\n   * @param {WithTransactionCallback} fn\n   * @param {TransactionOptions} [options] Optional settings for the transaction\n   */\n  withTransaction(fn, options) {\n    const startTime = Date.now();\n    return attemptTransaction(this, startTime, fn, options);\n  }\n}\n\nconst MAX_WITH_TRANSACTION_TIMEOUT = 120000;\nconst UNSATISFIABLE_WRITE_CONCERN_CODE = 100;\nconst UNKNOWN_REPL_WRITE_CONCERN_CODE = 79;\nconst NON_DETERMINISTIC_WRITE_CONCERN_ERRORS = new Set([\n  'CannotSatisfyWriteConcern',\n  'UnknownReplWriteConcern',\n  'UnsatisfiableWriteConcern'\n]);\n\nfunction hasNotTimedOut(startTime, max) {\n  return Date.now() - startTime < max;\n}\n\nfunction isUnknownTransactionCommitResult(err) {\n  return (\n    !NON_DETERMINISTIC_WRITE_CONCERN_ERRORS.has(err.codeName) &&\n    err.code !== UNSATISFIABLE_WRITE_CONCERN_CODE &&\n    err.code !== UNKNOWN_REPL_WRITE_CONCERN_CODE\n  );\n}\n\nfunction attemptTransactionCommit(session, startTime, fn, options) {\n  return session.commitTransaction().catch(err => {\n    if (err instanceof MongoError && hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT)) {\n      if (err.hasErrorLabel('UnknownTransactionCommitResult')) {\n        return attemptTransactionCommit(session, startTime, fn, options);\n      }\n\n      if (err.hasErrorLabel('TransientTransactionError')) {\n        return attemptTransaction(session, startTime, fn, options);\n      }\n    }\n\n    throw err;\n  });\n}\n\nconst USER_EXPLICIT_TXN_END_STATES = new Set([\n  TxnState.NO_TRANSACTION,\n  TxnState.TRANSACTION_COMMITTED,\n  TxnState.TRANSACTION_ABORTED\n]);\n\nfunction userExplicitlyEndedTransaction(session) {\n  return USER_EXPLICIT_TXN_END_STATES.has(session.transaction.state);\n}\n\nfunction attemptTransaction(session, startTime, fn, options) {\n  session.startTransaction(options);\n\n  let promise;\n  try {\n    promise = fn(session);\n  } catch (err) {\n    promise = Promise.reject(err);\n  }\n\n  if (!isPromiseLike(promise)) {\n    session.abortTransaction();\n    throw new TypeError('Function provided to `withTransaction` must return a Promise');\n  }\n\n  return promise\n    .then(() => {\n      if (userExplicitlyEndedTransaction(session)) {\n        return;\n      }\n\n      return attemptTransactionCommit(session, startTime, fn, options);\n    })\n    .catch(err => {\n      function maybeRetryOrThrow(err) {\n        if (\n          err instanceof MongoError &&\n          err.hasErrorLabel('TransientTransactionError') &&\n          hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT)\n        ) {\n          return attemptTransaction(session, startTime, fn, options);\n        }\n\n        throw err;\n      }\n\n      if (session.transaction.isActive) {\n        return session.abortTransaction().then(() => maybeRetryOrThrow(err));\n      }\n\n      return maybeRetryOrThrow(err);\n    });\n}\n\nfunction endTransaction(session, commandName, callback) {\n  if (!assertAlive(session, callback)) {\n    // checking result in case callback was called\n    return;\n  }\n\n  // handle any initial problematic cases\n  let txnState = session.transaction.state;\n\n  if (txnState === TxnState.NO_TRANSACTION) {\n    callback(new MongoError('No transaction started'));\n    return;\n  }\n\n  if (commandName === 'commitTransaction') {\n    if (\n      txnState === TxnState.STARTING_TRANSACTION ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call commitTransaction after calling abortTransaction'));\n      return;\n    }\n  } else {\n    if (txnState === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call abortTransaction twice'));\n      return;\n    }\n\n    if (\n      txnState === TxnState.TRANSACTION_COMMITTED ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      callback(new MongoError('Cannot call abortTransaction after calling commitTransaction'));\n      return;\n    }\n  }\n\n  // construct and send the command\n  const command = { [commandName]: 1 };\n\n  // apply a writeConcern if specified\n  let writeConcern;\n  if (session.transaction.options.writeConcern) {\n    writeConcern = Object.assign({}, session.transaction.options.writeConcern);\n  } else if (session.clientOptions && session.clientOptions.w) {\n    writeConcern = { w: session.clientOptions.w };\n  }\n\n  if (txnState === TxnState.TRANSACTION_COMMITTED) {\n    writeConcern = Object.assign({ wtimeout: 10000 }, writeConcern, { w: 'majority' });\n  }\n\n  if (writeConcern) {\n    Object.assign(command, { writeConcern });\n  }\n\n  function commandHandler(e, r) {\n    if (commandName === 'commitTransaction') {\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n\n      if (\n        e &&\n        (e instanceof MongoNetworkError ||\n          e instanceof MongoWriteConcernError ||\n          isRetryableError(e))\n      ) {\n        if (e.errorLabels) {\n          const idx = e.errorLabels.indexOf('TransientTransactionError');\n          if (idx !== -1) {\n            e.errorLabels.splice(idx, 1);\n          }\n        } else {\n          e.errorLabels = [];\n        }\n\n        if (isUnknownTransactionCommitResult(e)) {\n          e.errorLabels.push('UnknownTransactionCommitResult');\n\n          // per txns spec, must unpin session in this case\n          session.transaction.unpinServer();\n        }\n      }\n    } else {\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n    }\n\n    callback(e, r);\n  }\n\n  // The spec indicates that we should ignore all errors on `abortTransaction`\n  function transactionError(err) {\n    return commandName === 'commitTransaction' ? err : null;\n  }\n\n  if (\n    // Assumption here that commandName is \"commitTransaction\" or \"abortTransaction\"\n    session.transaction.recoveryToken &&\n    supportsRecoveryToken(session)\n  ) {\n    command.recoveryToken = session.transaction.recoveryToken;\n  }\n\n  // send the command\n  session.topology.command('admin.$cmd', command, { session }, (err, reply) => {\n    if (err && isRetryableError(err)) {\n      // SPEC-1185: apply majority write concern when retrying commitTransaction\n      if (command.commitTransaction) {\n        // per txns spec, must unpin session in this case\n        session.transaction.unpinServer();\n\n        command.writeConcern = Object.assign({ wtimeout: 10000 }, command.writeConcern, {\n          w: 'majority'\n        });\n      }\n\n      return session.topology.command('admin.$cmd', command, { session }, (_err, _reply) =>\n        commandHandler(transactionError(_err), _reply)\n      );\n    }\n\n    commandHandler(transactionError(err), reply);\n  });\n}\n\nfunction supportsRecoveryToken(session) {\n  const topology = session.topology;\n  return !!topology.s.options.useRecoveryToken;\n}\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @ignore\n */\nclass ServerSession {\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = Date.now();\n    this.txnNumber = 0;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   * @ignore\n   * @param {Date} sessionTimeoutMinutes The server's \"logicalSessionTimeoutMinutes\"\n   * @return {boolean} true if the session has timed out.\n   */\n  hasTimedOut(sessionTimeoutMinutes) {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      (((Date.now() - this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @ignore\n */\nclass ServerSessionPool {\n  constructor(topology) {\n    if (topology == null) {\n      throw new Error('ServerSessionPool requires a topology');\n    }\n\n    this.topology = topology;\n    this.sessions = [];\n  }\n\n  /**\n   * Ends all sessions in the session pool.\n   * @ignore\n   */\n  endAllPooledSessions() {\n    if (this.sessions.length) {\n      this.topology.endSessions(this.sessions.map(session => session.id));\n      this.sessions = [];\n    }\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession\n   * is created.\n   * @ignore\n   * @returns {ServerSession}\n   */\n  acquire() {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions.shift();\n      if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n        return session;\n      }\n    }\n\n    return new ServerSession();\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   * @ignore\n   * @param {ServerSession} session The session to release to the pool\n   */\n  release(session) {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions[this.sessions.length - 1];\n      if (session.hasTimedOut(sessionTimeoutMinutes)) {\n        this.sessions.pop();\n      } else {\n        break;\n      }\n    }\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      this.sessions.unshift(session);\n    }\n  }\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param {ClientSession} session the session tracking transaction state\n * @param {Object} command the command to decorate\n * @param {Object} topology the topology for tracking the cluster time\n * @param {Object} [options] Optional settings passed to calling operation\n * @return {MongoError|null} An error, if some error condition was met\n */\nfunction applySession(session, command, options) {\n  const serverSession = session.serverSession;\n  if (serverSession == null) {\n    // TODO: merge this with `assertAlive`, did not want to throw a try/catch here\n    return new MongoError('Cannot use a session that has ended');\n  }\n\n  // mark the last use of this session, and apply the `lsid`\n  serverSession.lastUse = Date.now();\n  command.lsid = serverSession.id;\n\n  // first apply non-transaction-specific sessions data\n  const inTransaction = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = options.willRetryWrite;\n\n  if (serverSession.txnNumber && (isRetryableWrite || inTransaction)) {\n    command.txnNumber = BSON.Long.fromNumber(serverSession.txnNumber);\n  }\n\n  // now attempt to apply transaction-specific sessions data\n  if (!inTransaction) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    // TODO: the following should only be applied to read operation per spec.\n    // for causal consistency\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n\n    return;\n  }\n\n  if (options.readPreference && !options.readPreference.equals(ReadPreference.primary)) {\n    return new MongoError(\n      `Read preference in a transaction must be primary, not: ${options.readPreference.mode}`\n    );\n  }\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session.clientOptions.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n}\n\nfunction updateSessionFromResponse(session, document) {\n  if (document.$clusterTime) {\n    resolveClusterTime(session, document.$clusterTime);\n  }\n\n  if (document.operationTime && session && session.supports.causalConsistency) {\n    session.advanceOperationTime(document.operationTime);\n  }\n\n  if (document.recoveryToken && session && session.inTransaction()) {\n    session.transaction._recoveryToken = document.recoveryToken;\n  }\n}\n\nmodule.exports = {\n  ClientSession,\n  ServerSession,\n  ServerSessionPool,\n  TxnState,\n  applySession,\n  updateSessionFromResponse\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/mongodb-core/lib/sessions.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/sessions.js":"'use strict';\n\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst EventEmitter = require('events');\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\nconst uuidV4 = require('./utils').uuidV4;\nconst MongoError = require('./error').MongoError;\nconst isRetryableError = require('././error').isRetryableError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst MongoWriteConcernError = require('./error').MongoWriteConcernError;\nconst Transaction = require('./transactions').Transaction;\nconst TxnState = require('./transactions').TxnState;\nconst isPromiseLike = require('./utils').isPromiseLike;\nconst ReadPreference = require('./topologies/read_preference');\nconst isTransactionCommand = require('./transactions').isTransactionCommand;\nconst resolveClusterTime = require('./topologies/shared').resolveClusterTime;\n\nfunction assertAlive(session, callback) {\n  if (session.serverSession == null) {\n    const error = new MongoError('Cannot use a session that has ended');\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return false;\n    }\n\n    throw error;\n  }\n\n  return true;\n}\n\n/**\n * Options to pass when creating a Client Session\n * @typedef {Object} SessionOptions\n * @property {boolean} [causalConsistency=true] Whether causal consistency should be enabled on this session\n * @property {TransactionOptions} [defaultTransactionOptions] The default TransactionOptions to use for transactions started on this session.\n */\n\n/**\n * A BSON document reflecting the lsid of a {@link ClientSession}\n * @typedef {Object} SessionId\n */\n\n/**\n * A class representing a client session on the server\n * WARNING: not meant to be instantiated directly.\n * @class\n * @hideconstructor\n */\nclass ClientSession extends EventEmitter {\n  /**\n   * Create a client session.\n   * WARNING: not meant to be instantiated directly\n   *\n   * @param {Topology} topology The current client's topology (Internal Class)\n   * @param {ServerSessionPool} sessionPool The server session pool (Internal Class)\n   * @param {SessionOptions} [options] Optional settings\n   * @param {Object} [clientOptions] Optional settings provided when creating a client in the porcelain driver\n   */\n  constructor(topology, sessionPool, options, clientOptions) {\n    super();\n\n    if (topology == null) {\n      throw new Error('ClientSession requires a topology');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      throw new Error('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options || {};\n    this.topology = topology;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.serverSession = sessionPool.acquire();\n    this.clientOptions = clientOptions;\n\n    this.supports = {\n      causalConsistency:\n        typeof options.causalConsistency !== 'undefined' ? options.causalConsistency : true\n    };\n\n    options = options || {};\n    if (typeof options.initialClusterTime !== 'undefined') {\n      this.clusterTime = options.initialClusterTime;\n    } else {\n      this.clusterTime = null;\n    }\n\n    this.operationTime = null;\n    this.explicit = !!options.explicit;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n    this.transaction = new Transaction();\n  }\n\n  /**\n   * The server id associated with this session\n   * @type {SessionId}\n   */\n  get id() {\n    return this.serverSession.id;\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param {Object} [options] Optional settings. Currently reserved for future use\n   * @param {Function} [callback] Optional callback for completion of this operation\n   */\n  endSession(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    if (this.hasEnded) {\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    if (this.serverSession && this.inTransaction()) {\n      this.abortTransaction(); // pass in callback?\n    }\n\n    // mark the session as ended, and emit a signal\n    this.hasEnded = true;\n    this.emit('ended', this);\n\n    // release the server session back to the pool\n    this.sessionPool.release(this.serverSession);\n    this.serverSession = null;\n\n    // spec indicates that we should ignore all errors for `endSessions`\n    if (typeof callback === 'function') callback(null, null);\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param {Timestamp} operationTime the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime) {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Used to determine if this session equals another\n   * @param {ClientSession} session\n   * @return {boolean} true if the sessions are equal\n   */\n  equals(session) {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    return this.id.id.buffer.equals(session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   */\n  incrementTransactionNumber() {\n    this.serverSession.txnNumber++;\n  }\n\n  /**\n   * @returns {boolean} whether this session is currently in a transaction or not\n   */\n  inTransaction() {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param {TransactionOptions} options Options for the transaction\n   */\n  startTransaction(options) {\n    assertAlive(this);\n    if (this.inTransaction()) {\n      throw new MongoError('Transaction already in progress');\n    }\n\n    // increment txnNumber\n    this.incrementTransactionNumber();\n\n    // create transaction state\n    this.transaction = new Transaction(\n      Object.assign({}, this.clientOptions, options || this.defaultTransactionOptions)\n    );\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  commitTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'commitTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'commitTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  abortTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'abortTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'abortTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   * @ignore\n   */\n  toBSON() {\n    throw new Error('ClientSession cannot be serialized to BSON.');\n  }\n\n  /**\n   * A user provided function to be run within a transaction\n   *\n   * @callback WithTransactionCallback\n   * @param {ClientSession} session The parent session of the transaction running the operation. This should be passed into each operation within the lambda.\n   * @returns {Promise} The resulting Promise of operations run within this transaction\n   */\n\n  /**\n   * Runs a provided lambda within a transaction, retrying either the commit operation\n   * or entire transaction as needed (and when the error permits) to better ensure that\n   * the transaction can complete successfully.\n   *\n   * IMPORTANT: This method requires the user to return a Promise, all lambdas that do not\n   * return a Promise will result in undefined behavior.\n   *\n   * @param {WithTransactionCallback} fn\n   * @param {TransactionOptions} [options] Optional settings for the transaction\n   */\n  withTransaction(fn, options) {\n    const startTime = Date.now();\n    return attemptTransaction(this, startTime, fn, options);\n  }\n}\n\nconst MAX_WITH_TRANSACTION_TIMEOUT = 120000;\nconst UNSATISFIABLE_WRITE_CONCERN_CODE = 100;\nconst UNKNOWN_REPL_WRITE_CONCERN_CODE = 79;\nconst NON_DETERMINISTIC_WRITE_CONCERN_ERRORS = new Set([\n  'CannotSatisfyWriteConcern',\n  'UnknownReplWriteConcern',\n  'UnsatisfiableWriteConcern'\n]);\n\nfunction hasNotTimedOut(startTime, max) {\n  return Date.now() - startTime < max;\n}\n\nfunction isUnknownTransactionCommitResult(err) {\n  return (\n    !NON_DETERMINISTIC_WRITE_CONCERN_ERRORS.has(err.codeName) &&\n    err.code !== UNSATISFIABLE_WRITE_CONCERN_CODE &&\n    err.code !== UNKNOWN_REPL_WRITE_CONCERN_CODE\n  );\n}\n\nfunction attemptTransactionCommit(session, startTime, fn, options) {\n  return session.commitTransaction().catch(err => {\n    if (err instanceof MongoError && hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT)) {\n      if (err.hasErrorLabel('UnknownTransactionCommitResult')) {\n        return attemptTransactionCommit(session, startTime, fn, options);\n      }\n\n      if (err.hasErrorLabel('TransientTransactionError')) {\n        return attemptTransaction(session, startTime, fn, options);\n      }\n    }\n\n    throw err;\n  });\n}\n\nconst USER_EXPLICIT_TXN_END_STATES = new Set([\n  TxnState.NO_TRANSACTION,\n  TxnState.TRANSACTION_COMMITTED,\n  TxnState.TRANSACTION_ABORTED\n]);\n\nfunction userExplicitlyEndedTransaction(session) {\n  return USER_EXPLICIT_TXN_END_STATES.has(session.transaction.state);\n}\n\nfunction attemptTransaction(session, startTime, fn, options) {\n  session.startTransaction(options);\n\n  let promise;\n  try {\n    promise = fn(session);\n  } catch (err) {\n    promise = Promise.reject(err);\n  }\n\n  if (!isPromiseLike(promise)) {\n    session.abortTransaction();\n    throw new TypeError('Function provided to `withTransaction` must return a Promise');\n  }\n\n  return promise\n    .then(() => {\n      if (userExplicitlyEndedTransaction(session)) {\n        return;\n      }\n\n      return attemptTransactionCommit(session, startTime, fn, options);\n    })\n    .catch(err => {\n      function maybeRetryOrThrow(err) {\n        if (\n          err instanceof MongoError &&\n          err.hasErrorLabel('TransientTransactionError') &&\n          hasNotTimedOut(startTime, MAX_WITH_TRANSACTION_TIMEOUT)\n        ) {\n          return attemptTransaction(session, startTime, fn, options);\n        }\n\n        throw err;\n      }\n\n      if (session.transaction.isActive) {\n        return session.abortTransaction().then(() => maybeRetryOrThrow(err));\n      }\n\n      return maybeRetryOrThrow(err);\n    });\n}\n\nfunction endTransaction(session, commandName, callback) {\n  if (!assertAlive(session, callback)) {\n    // checking result in case callback was called\n    return;\n  }\n\n  // handle any initial problematic cases\n  let txnState = session.transaction.state;\n\n  if (txnState === TxnState.NO_TRANSACTION) {\n    callback(new MongoError('No transaction started'));\n    return;\n  }\n\n  if (commandName === 'commitTransaction') {\n    if (\n      txnState === TxnState.STARTING_TRANSACTION ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call commitTransaction after calling abortTransaction'));\n      return;\n    }\n  } else {\n    if (txnState === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call abortTransaction twice'));\n      return;\n    }\n\n    if (\n      txnState === TxnState.TRANSACTION_COMMITTED ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      callback(new MongoError('Cannot call abortTransaction after calling commitTransaction'));\n      return;\n    }\n  }\n\n  // construct and send the command\n  const command = { [commandName]: 1 };\n\n  // apply a writeConcern if specified\n  let writeConcern;\n  if (session.transaction.options.writeConcern) {\n    writeConcern = Object.assign({}, session.transaction.options.writeConcern);\n  } else if (session.clientOptions && session.clientOptions.w) {\n    writeConcern = { w: session.clientOptions.w };\n  }\n\n  if (txnState === TxnState.TRANSACTION_COMMITTED) {\n    writeConcern = Object.assign({ wtimeout: 10000 }, writeConcern, { w: 'majority' });\n  }\n\n  if (writeConcern) {\n    Object.assign(command, { writeConcern });\n  }\n\n  function commandHandler(e, r) {\n    if (commandName === 'commitTransaction') {\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n\n      if (\n        e &&\n        (e instanceof MongoNetworkError ||\n          e instanceof MongoWriteConcernError ||\n          isRetryableError(e))\n      ) {\n        if (e.errorLabels) {\n          const idx = e.errorLabels.indexOf('TransientTransactionError');\n          if (idx !== -1) {\n            e.errorLabels.splice(idx, 1);\n          }\n        } else {\n          e.errorLabels = [];\n        }\n\n        if (isUnknownTransactionCommitResult(e)) {\n          e.errorLabels.push('UnknownTransactionCommitResult');\n\n          // per txns spec, must unpin session in this case\n          session.transaction.unpinServer();\n        }\n      }\n    } else {\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n    }\n\n    callback(e, r);\n  }\n\n  // The spec indicates that we should ignore all errors on `abortTransaction`\n  function transactionError(err) {\n    return commandName === 'commitTransaction' ? err : null;\n  }\n\n  if (\n    // Assumption here that commandName is \"commitTransaction\" or \"abortTransaction\"\n    session.transaction.recoveryToken &&\n    supportsRecoveryToken(session)\n  ) {\n    command.recoveryToken = session.transaction.recoveryToken;\n  }\n\n  // send the command\n  session.topology.command('admin.$cmd', command, { session }, (err, reply) => {\n    if (err && isRetryableError(err)) {\n      // SPEC-1185: apply majority write concern when retrying commitTransaction\n      if (command.commitTransaction) {\n        // per txns spec, must unpin session in this case\n        session.transaction.unpinServer();\n\n        command.writeConcern = Object.assign({ wtimeout: 10000 }, command.writeConcern, {\n          w: 'majority'\n        });\n      }\n\n      return session.topology.command('admin.$cmd', command, { session }, (_err, _reply) =>\n        commandHandler(transactionError(_err), _reply)\n      );\n    }\n\n    commandHandler(transactionError(err), reply);\n  });\n}\n\nfunction supportsRecoveryToken(session) {\n  const topology = session.topology;\n  return !!topology.s.options.useRecoveryToken;\n}\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @ignore\n */\nclass ServerSession {\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = Date.now();\n    this.txnNumber = 0;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   * @ignore\n   * @param {Date} sessionTimeoutMinutes The server's \"logicalSessionTimeoutMinutes\"\n   * @return {boolean} true if the session has timed out.\n   */\n  hasTimedOut(sessionTimeoutMinutes) {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      (((Date.now() - this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @ignore\n */\nclass ServerSessionPool {\n  constructor(topology) {\n    if (topology == null) {\n      throw new Error('ServerSessionPool requires a topology');\n    }\n\n    this.topology = topology;\n    this.sessions = [];\n  }\n\n  /**\n   * Ends all sessions in the session pool.\n   * @ignore\n   */\n  endAllPooledSessions() {\n    if (this.sessions.length) {\n      this.topology.endSessions(this.sessions.map(session => session.id));\n      this.sessions = [];\n    }\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession\n   * is created.\n   * @ignore\n   * @returns {ServerSession}\n   */\n  acquire() {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions.shift();\n      if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n        return session;\n      }\n    }\n\n    return new ServerSession();\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   * @ignore\n   * @param {ServerSession} session The session to release to the pool\n   */\n  release(session) {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions[this.sessions.length - 1];\n      if (session.hasTimedOut(sessionTimeoutMinutes)) {\n        this.sessions.pop();\n      } else {\n        break;\n      }\n    }\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      this.sessions.unshift(session);\n    }\n  }\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param {ClientSession} session the session tracking transaction state\n * @param {Object} command the command to decorate\n * @param {Object} topology the topology for tracking the cluster time\n * @param {Object} [options] Optional settings passed to calling operation\n * @return {MongoError|null} An error, if some error condition was met\n */\nfunction applySession(session, command, options) {\n  const serverSession = session.serverSession;\n  if (serverSession == null) {\n    // TODO: merge this with `assertAlive`, did not want to throw a try/catch here\n    return new MongoError('Cannot use a session that has ended');\n  }\n\n  // mark the last use of this session, and apply the `lsid`\n  serverSession.lastUse = Date.now();\n  command.lsid = serverSession.id;\n\n  // first apply non-transaction-specific sessions data\n  const inTransaction = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = options.willRetryWrite;\n\n  if (serverSession.txnNumber && (isRetryableWrite || inTransaction)) {\n    command.txnNumber = BSON.Long.fromNumber(serverSession.txnNumber);\n  }\n\n  // now attempt to apply transaction-specific sessions data\n  if (!inTransaction) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    // TODO: the following should only be applied to read operation per spec.\n    // for causal consistency\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n\n    return;\n  }\n\n  if (options.readPreference && !options.readPreference.equals(ReadPreference.primary)) {\n    return new MongoError(\n      `Read preference in a transaction must be primary, not: ${options.readPreference.mode}`\n    );\n  }\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session.clientOptions.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n}\n\nfunction updateSessionFromResponse(session, document) {\n  if (document.$clusterTime) {\n    resolveClusterTime(session, document.$clusterTime);\n  }\n\n  if (document.operationTime && session && session.supports.causalConsistency) {\n    session.advanceOperationTime(document.operationTime);\n  }\n\n  if (document.recoveryToken && session && session.inTransaction()) {\n    session.transaction._recoveryToken = document.recoveryToken;\n  }\n}\n\nmodule.exports = {\n  ClientSession,\n  ServerSession,\n  ServerSessionPool,\n  TxnState,\n  applySession,\n  updateSessionFromResponse\n};\n"},"lineCount":703}},"error":null,"hash":"e8eb94488bbe0cffd7c87b53e5cdb46a","cacheData":{"env":{}}}