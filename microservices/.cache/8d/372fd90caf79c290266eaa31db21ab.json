{"id":"../node_modules/mongodb-core/lib/sdam/server.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"events","loc":{"line":2,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/node-libs-browser/node_modules/events/events.js"},{"name":"../error","loc":{"line":14,"column":34},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"../connection/pool","loc":{"line":4,"column":21},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/pool.js"},{"name":"../utils","loc":{"line":15,"column":38},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/utils.js"},{"name":"../wireprotocol","loc":{"line":6,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/index.js"},{"name":"../connection/utils","loc":{"line":16,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/utils.js"},{"name":"../topologies/shared","loc":{"line":8,"column":33},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js"},{"name":"../connection/logger","loc":{"line":9,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/logger.js"},{"name":"./server_description","loc":{"line":10,"column":34},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server_description.js"},{"name":"../topologies/read_preference","loc":{"line":11,"column":31},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/read_preference.js"},{"name":"./monitoring","loc":{"line":12,"column":30},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/monitoring.js"}],"generated":{"js":"'use strict';\nconst EventEmitter = require('events');\nconst MongoError = require('../error').MongoError;\nconst Pool = require('../connection/pool');\nconst relayEvents = require('../utils').relayEvents;\nconst wireProtocol = require('../wireprotocol');\nconst BSON = require('../connection/utils').retrieveBSON();\nconst createClientInfo = require('../topologies/shared').createClientInfo;\nconst Logger = require('../connection/logger');\nconst ServerDescription = require('./server_description').ServerDescription;\nconst ReadPreference = require('../topologies/read_preference');\nconst monitorServer = require('./monitoring').monitorServer;\nconst MongoParseError = require('../error').MongoParseError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst collationNotSupported = require('../utils').collationNotSupported;\nconst debugOptions = require('../connection/utils').debugOptions;\n\n// Used for filtering out fields for logging\nconst DEBUG_FIELDS = [\n  'reconnect',\n  'reconnectTries',\n  'reconnectInterval',\n  'emitError',\n  'cursorFactory',\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'checkServerIdentity',\n  'socketTimeout',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'key',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'servername'\n];\n\nconst STATE_DISCONNECTED = 0;\nconst STATE_CONNECTING = 1;\nconst STATE_CONNECTED = 2;\n\n/**\n *\n * @fires Server#serverHeartbeatStarted\n * @fires Server#serverHeartbeatSucceeded\n * @fires Server#serverHeartbeatFailed\n */\nclass Server extends EventEmitter {\n  /**\n   * Create a server\n   *\n   * @param {ServerDescription} description\n   * @param {Object} options\n   */\n  constructor(description, options, topology) {\n    super();\n\n    this.s = {\n      // the server description\n      description,\n      // a saved copy of the incoming options\n      options,\n      // the server logger\n      logger: Logger('Server', options),\n      // the bson parser\n      bson: options.bson || new BSON(),\n      // client metadata for the initial handshake\n      clientInfo: createClientInfo(options),\n      // state variable to determine if there is an active server check in progress\n      monitoring: false,\n      // the implementation of the monitoring method\n      monitorFunction: options.monitorFunction || monitorServer,\n      // the connection pool\n      pool: null,\n      // the server state\n      state: STATE_DISCONNECTED,\n      credentials: options.credentials,\n      topology\n    };\n  }\n\n  get description() {\n    return this.s.description;\n  }\n\n  get name() {\n    return this.s.description.address;\n  }\n\n  /**\n   * Initiate server connect\n   */\n  connect(options) {\n    options = options || {};\n\n    // do not allow connect to be called on anything that's not disconnected\n    if (this.s.pool && !this.s.pool.isDisconnected() && !this.s.pool.isDestroyed()) {\n      throw new MongoError(`Server instance in invalid state ${this.s.pool.state}`);\n    }\n\n    // create a pool\n    const addressParts = this.description.address.split(':');\n    const poolOptions = Object.assign(\n      { host: addressParts[0], port: parseInt(addressParts[1], 10) },\n      this.s.options,\n      options,\n      { bson: this.s.bson }\n    );\n\n    // NOTE: this should only be the case if we are connecting to a single server\n    poolOptions.reconnect = true;\n\n    this.s.pool = new Pool(this, poolOptions);\n\n    // setup listeners\n    this.s.pool.on('connect', connectEventHandler(this));\n    this.s.pool.on('close', errorEventHandler(this));\n    this.s.pool.on('error', errorEventHandler(this));\n    this.s.pool.on('parseError', parseErrorEventHandler(this));\n\n    // it is unclear whether consumers should even know about these events\n    // this.s.pool.on('timeout', timeoutEventHandler(this));\n    // this.s.pool.on('reconnect', reconnectEventHandler(this));\n    // this.s.pool.on('reconnectFailed', errorEventHandler(this));\n\n    // relay all command monitoring events\n    relayEvents(this.s.pool, this, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n    this.s.state = STATE_CONNECTING;\n\n    // If auth settings have been provided, use them\n    if (options.auth) {\n      this.s.pool.connect.apply(this.s.pool, options.auth);\n      return;\n    }\n\n    this.s.pool.connect();\n  }\n\n  /**\n   * Destroy the server connection\n   *\n   * @param {Boolean} [options.force=false] Force destroy the pool\n   */\n  destroy(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = Object.assign({}, { force: false }, options);\n\n    if (!this.s.pool) {\n      this.s.state = STATE_DISCONNECTED;\n      if (typeof callback === 'function') {\n        callback(null, null);\n      }\n\n      return;\n    }\n\n    ['close', 'error', 'timeout', 'parseError', 'connect'].forEach(event => {\n      this.s.pool.removeAllListeners(event);\n    });\n\n    if (this.s.monitorId) {\n      clearTimeout(this.s.monitorId);\n    }\n\n    this.s.pool.destroy(options.force, err => {\n      this.s.state = STATE_DISCONNECTED;\n      callback(err);\n    });\n  }\n\n  /**\n   * Immediately schedule monitoring of this server. If there already an attempt being made\n   * this will be a no-op.\n   */\n  monitor(options) {\n    options = options || {};\n    if (this.s.state !== STATE_CONNECTED || this.s.monitoring) return;\n    if (this.s.monitorId) clearTimeout(this.s.monitorId);\n    this.s.monitorFunction(this, options);\n  }\n\n  /**\n   * Execute a command\n   *\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {object} cmd The command hash\n   * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.checkKeys=false] Specify if the bson parser should validate keys.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {Boolean} [options.fullResult=false] Return the full envelope instead of just the result document.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  command(ns, cmd, options, callback) {\n    if (typeof options === 'function') {\n      (callback = options), (options = {}), (options = options || {});\n    }\n\n    const error = basicReadValidations(this, options);\n    if (error) {\n      return callback(error, null);\n    }\n\n    // Clone the options\n    options = Object.assign({}, options, { wireProtocolCommand: false });\n\n    // Debug log\n    if (this.s.logger.isDebug()) {\n      this.s.logger.debug(\n        `executing command [${JSON.stringify({\n          ns,\n          cmd,\n          options: debugOptions(DEBUG_FIELDS, options)\n        })}] against ${this.name}`\n      );\n    }\n\n    // error if collation not supported\n    if (collationNotSupported(this, cmd)) {\n      callback(new MongoError(`server ${this.name} does not support collation`));\n      return;\n    }\n\n    wireProtocol.command(this, ns, cmd, options, callback);\n  }\n\n  /**\n   * Insert one or more documents\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of documents to insert\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  insert(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'insert', ns, ops }, options, callback);\n  }\n\n  /**\n   * Perform one or more update operations\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of updates\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  update(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'update', ns, ops }, options, callback);\n  }\n\n  /**\n   * Perform one or more remove operations\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of removes\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  remove(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'remove', ns, ops }, options, callback);\n  }\n}\n\nObject.defineProperty(Server.prototype, 'clusterTime', {\n  get: function() {\n    return this.s.topology.clusterTime;\n  },\n  set: function(clusterTime) {\n    this.s.topology.clusterTime = clusterTime;\n  }\n});\n\nfunction basicWriteValidations(server) {\n  if (!server.s.pool) {\n    return new MongoError('server instance is not connected');\n  }\n\n  if (server.s.pool.isDestroyed()) {\n    return new MongoError('server instance pool was destroyed');\n  }\n\n  return null;\n}\n\nfunction basicReadValidations(server, options) {\n  const error = basicWriteValidations(server, options);\n  if (error) {\n    return error;\n  }\n\n  if (options.readPreference && !(options.readPreference instanceof ReadPreference)) {\n    return new MongoError('readPreference must be an instance of ReadPreference');\n  }\n}\n\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const server = args.server;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = Array.isArray(args.ops) ? args.ops : [args.ops];\n\n  const error = basicWriteValidations(server, options);\n  if (error) {\n    callback(error, null);\n    return;\n  }\n\n  if (collationNotSupported(server, options)) {\n    callback(new MongoError(`server ${this.name} does not support collation`));\n    return;\n  }\n\n  return wireProtocol[op](server, ns, ops, options, callback);\n}\n\nfunction connectEventHandler(server) {\n  return function(pool, conn) {\n    const ismaster = conn.ismaster;\n    server.s.lastIsMasterMS = conn.lastIsMasterMS;\n    if (conn.agreedCompressor) {\n      server.s.pool.options.agreedCompressor = conn.agreedCompressor;\n    }\n\n    if (conn.zlibCompressionLevel) {\n      server.s.pool.options.zlibCompressionLevel = conn.zlibCompressionLevel;\n    }\n\n    if (conn.ismaster.$clusterTime) {\n      const $clusterTime = conn.ismaster.$clusterTime;\n      server.s.sclusterTime = $clusterTime;\n    }\n\n    // log the connection event if requested\n    if (server.s.logger.isInfo()) {\n      server.s.logger.info(\n        `server ${server.name} connected with ismaster [${JSON.stringify(ismaster)}]`\n      );\n    }\n\n    // emit an event indicating that our description has changed\n    server.emit('descriptionReceived', new ServerDescription(server.description.address, ismaster));\n\n    // we are connected and handshaked (guaranteed by the pool)\n    server.s.state = STATE_CONNECTED;\n    server.emit('connect', server);\n  };\n}\n\nfunction errorEventHandler(server) {\n  return function(err) {\n    if (err) {\n      server.emit('error', new MongoNetworkError(err));\n    }\n\n    server.emit('close');\n  };\n}\n\nfunction parseErrorEventHandler(server) {\n  return function(err) {\n    server.s.state = STATE_DISCONNECTED;\n    server.emit('error', new MongoParseError(err));\n  };\n}\n\nmodule.exports = Server;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mongodb-core/lib/sdam/server.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/sdam/server.js":"'use strict';\nconst EventEmitter = require('events');\nconst MongoError = require('../error').MongoError;\nconst Pool = require('../connection/pool');\nconst relayEvents = require('../utils').relayEvents;\nconst wireProtocol = require('../wireprotocol');\nconst BSON = require('../connection/utils').retrieveBSON();\nconst createClientInfo = require('../topologies/shared').createClientInfo;\nconst Logger = require('../connection/logger');\nconst ServerDescription = require('./server_description').ServerDescription;\nconst ReadPreference = require('../topologies/read_preference');\nconst monitorServer = require('./monitoring').monitorServer;\nconst MongoParseError = require('../error').MongoParseError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst collationNotSupported = require('../utils').collationNotSupported;\nconst debugOptions = require('../connection/utils').debugOptions;\n\n// Used for filtering out fields for logging\nconst DEBUG_FIELDS = [\n  'reconnect',\n  'reconnectTries',\n  'reconnectInterval',\n  'emitError',\n  'cursorFactory',\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'checkServerIdentity',\n  'socketTimeout',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'key',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'servername'\n];\n\nconst STATE_DISCONNECTED = 0;\nconst STATE_CONNECTING = 1;\nconst STATE_CONNECTED = 2;\n\n/**\n *\n * @fires Server#serverHeartbeatStarted\n * @fires Server#serverHeartbeatSucceeded\n * @fires Server#serverHeartbeatFailed\n */\nclass Server extends EventEmitter {\n  /**\n   * Create a server\n   *\n   * @param {ServerDescription} description\n   * @param {Object} options\n   */\n  constructor(description, options, topology) {\n    super();\n\n    this.s = {\n      // the server description\n      description,\n      // a saved copy of the incoming options\n      options,\n      // the server logger\n      logger: Logger('Server', options),\n      // the bson parser\n      bson: options.bson || new BSON(),\n      // client metadata for the initial handshake\n      clientInfo: createClientInfo(options),\n      // state variable to determine if there is an active server check in progress\n      monitoring: false,\n      // the implementation of the monitoring method\n      monitorFunction: options.monitorFunction || monitorServer,\n      // the connection pool\n      pool: null,\n      // the server state\n      state: STATE_DISCONNECTED,\n      credentials: options.credentials,\n      topology\n    };\n  }\n\n  get description() {\n    return this.s.description;\n  }\n\n  get name() {\n    return this.s.description.address;\n  }\n\n  /**\n   * Initiate server connect\n   */\n  connect(options) {\n    options = options || {};\n\n    // do not allow connect to be called on anything that's not disconnected\n    if (this.s.pool && !this.s.pool.isDisconnected() && !this.s.pool.isDestroyed()) {\n      throw new MongoError(`Server instance in invalid state ${this.s.pool.state}`);\n    }\n\n    // create a pool\n    const addressParts = this.description.address.split(':');\n    const poolOptions = Object.assign(\n      { host: addressParts[0], port: parseInt(addressParts[1], 10) },\n      this.s.options,\n      options,\n      { bson: this.s.bson }\n    );\n\n    // NOTE: this should only be the case if we are connecting to a single server\n    poolOptions.reconnect = true;\n\n    this.s.pool = new Pool(this, poolOptions);\n\n    // setup listeners\n    this.s.pool.on('connect', connectEventHandler(this));\n    this.s.pool.on('close', errorEventHandler(this));\n    this.s.pool.on('error', errorEventHandler(this));\n    this.s.pool.on('parseError', parseErrorEventHandler(this));\n\n    // it is unclear whether consumers should even know about these events\n    // this.s.pool.on('timeout', timeoutEventHandler(this));\n    // this.s.pool.on('reconnect', reconnectEventHandler(this));\n    // this.s.pool.on('reconnectFailed', errorEventHandler(this));\n\n    // relay all command monitoring events\n    relayEvents(this.s.pool, this, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n    this.s.state = STATE_CONNECTING;\n\n    // If auth settings have been provided, use them\n    if (options.auth) {\n      this.s.pool.connect.apply(this.s.pool, options.auth);\n      return;\n    }\n\n    this.s.pool.connect();\n  }\n\n  /**\n   * Destroy the server connection\n   *\n   * @param {Boolean} [options.force=false] Force destroy the pool\n   */\n  destroy(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = Object.assign({}, { force: false }, options);\n\n    if (!this.s.pool) {\n      this.s.state = STATE_DISCONNECTED;\n      if (typeof callback === 'function') {\n        callback(null, null);\n      }\n\n      return;\n    }\n\n    ['close', 'error', 'timeout', 'parseError', 'connect'].forEach(event => {\n      this.s.pool.removeAllListeners(event);\n    });\n\n    if (this.s.monitorId) {\n      clearTimeout(this.s.monitorId);\n    }\n\n    this.s.pool.destroy(options.force, err => {\n      this.s.state = STATE_DISCONNECTED;\n      callback(err);\n    });\n  }\n\n  /**\n   * Immediately schedule monitoring of this server. If there already an attempt being made\n   * this will be a no-op.\n   */\n  monitor(options) {\n    options = options || {};\n    if (this.s.state !== STATE_CONNECTED || this.s.monitoring) return;\n    if (this.s.monitorId) clearTimeout(this.s.monitorId);\n    this.s.monitorFunction(this, options);\n  }\n\n  /**\n   * Execute a command\n   *\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {object} cmd The command hash\n   * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.checkKeys=false] Specify if the bson parser should validate keys.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {Boolean} [options.fullResult=false] Return the full envelope instead of just the result document.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  command(ns, cmd, options, callback) {\n    if (typeof options === 'function') {\n      (callback = options), (options = {}), (options = options || {});\n    }\n\n    const error = basicReadValidations(this, options);\n    if (error) {\n      return callback(error, null);\n    }\n\n    // Clone the options\n    options = Object.assign({}, options, { wireProtocolCommand: false });\n\n    // Debug log\n    if (this.s.logger.isDebug()) {\n      this.s.logger.debug(\n        `executing command [${JSON.stringify({\n          ns,\n          cmd,\n          options: debugOptions(DEBUG_FIELDS, options)\n        })}] against ${this.name}`\n      );\n    }\n\n    // error if collation not supported\n    if (collationNotSupported(this, cmd)) {\n      callback(new MongoError(`server ${this.name} does not support collation`));\n      return;\n    }\n\n    wireProtocol.command(this, ns, cmd, options, callback);\n  }\n\n  /**\n   * Insert one or more documents\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of documents to insert\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  insert(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'insert', ns, ops }, options, callback);\n  }\n\n  /**\n   * Perform one or more update operations\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of updates\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  update(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'update', ns, ops }, options, callback);\n  }\n\n  /**\n   * Perform one or more remove operations\n   * @method\n   * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n   * @param {array} ops An array of removes\n   * @param {boolean} [options.ordered=true] Execute in order or out of order\n   * @param {object} [options.writeConcern={}] Write concern for the operation\n   * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n   * @param {ClientSession} [options.session=null] Session to use for the operation\n   * @param {opResultCallback} callback A callback function\n   */\n  remove(ns, ops, options, callback) {\n    executeWriteOperation({ server: this, op: 'remove', ns, ops }, options, callback);\n  }\n}\n\nObject.defineProperty(Server.prototype, 'clusterTime', {\n  get: function() {\n    return this.s.topology.clusterTime;\n  },\n  set: function(clusterTime) {\n    this.s.topology.clusterTime = clusterTime;\n  }\n});\n\nfunction basicWriteValidations(server) {\n  if (!server.s.pool) {\n    return new MongoError('server instance is not connected');\n  }\n\n  if (server.s.pool.isDestroyed()) {\n    return new MongoError('server instance pool was destroyed');\n  }\n\n  return null;\n}\n\nfunction basicReadValidations(server, options) {\n  const error = basicWriteValidations(server, options);\n  if (error) {\n    return error;\n  }\n\n  if (options.readPreference && !(options.readPreference instanceof ReadPreference)) {\n    return new MongoError('readPreference must be an instance of ReadPreference');\n  }\n}\n\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const server = args.server;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = Array.isArray(args.ops) ? args.ops : [args.ops];\n\n  const error = basicWriteValidations(server, options);\n  if (error) {\n    callback(error, null);\n    return;\n  }\n\n  if (collationNotSupported(server, options)) {\n    callback(new MongoError(`server ${this.name} does not support collation`));\n    return;\n  }\n\n  return wireProtocol[op](server, ns, ops, options, callback);\n}\n\nfunction connectEventHandler(server) {\n  return function(pool, conn) {\n    const ismaster = conn.ismaster;\n    server.s.lastIsMasterMS = conn.lastIsMasterMS;\n    if (conn.agreedCompressor) {\n      server.s.pool.options.agreedCompressor = conn.agreedCompressor;\n    }\n\n    if (conn.zlibCompressionLevel) {\n      server.s.pool.options.zlibCompressionLevel = conn.zlibCompressionLevel;\n    }\n\n    if (conn.ismaster.$clusterTime) {\n      const $clusterTime = conn.ismaster.$clusterTime;\n      server.s.sclusterTime = $clusterTime;\n    }\n\n    // log the connection event if requested\n    if (server.s.logger.isInfo()) {\n      server.s.logger.info(\n        `server ${server.name} connected with ismaster [${JSON.stringify(ismaster)}]`\n      );\n    }\n\n    // emit an event indicating that our description has changed\n    server.emit('descriptionReceived', new ServerDescription(server.description.address, ismaster));\n\n    // we are connected and handshaked (guaranteed by the pool)\n    server.s.state = STATE_CONNECTED;\n    server.emit('connect', server);\n  };\n}\n\nfunction errorEventHandler(server) {\n  return function(err) {\n    if (err) {\n      server.emit('error', new MongoNetworkError(err));\n    }\n\n    server.emit('close');\n  };\n}\n\nfunction parseErrorEventHandler(server) {\n  return function(err) {\n    server.s.state = STATE_DISCONNECTED;\n    server.emit('error', new MongoParseError(err));\n  };\n}\n\nmodule.exports = Server;\n"},"lineCount":393}},"error":null,"hash":"abf8011c922b5d4d367c8c812fb59f19","cacheData":{"env":{}}}