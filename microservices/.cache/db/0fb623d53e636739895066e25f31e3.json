{"id":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"../topologies/read_preference","loc":{"line":3,"column":31},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/shared.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/read_preference.js"},{"name":"../error","loc":{"line":4,"column":27},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/shared.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"../sdam/server_description","loc":{"line":5,"column":27},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/shared.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/server_description.js"},{"name":"../sdam/topology_description","loc":{"line":6,"column":36},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/shared.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/topology_description.js"}],"generated":{"js":"'use strict';\n\nconst ReadPreference = require('../topologies/read_preference');\nconst MongoError = require('../error').MongoError;\nconst ServerType = require('../sdam/server_description').ServerType;\nconst TopologyDescription = require('../sdam/topology_description').TopologyDescription;\n\nconst MESSAGE_HEADER_SIZE = 16;\nconst COMPRESSION_DETAILS_SIZE = 9; // originalOpcode + uncompressedSize, compressorID\n\n// OPCODE Numbers\n// Defined at https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#request-opcodes\nvar opcodes = {\n  OP_REPLY: 1,\n  OP_UPDATE: 2001,\n  OP_INSERT: 2002,\n  OP_QUERY: 2004,\n  OP_GETMORE: 2005,\n  OP_DELETE: 2006,\n  OP_KILL_CURSORS: 2007,\n  OP_COMPRESSED: 2012,\n  OP_MSG: 2013\n};\n\nvar getReadPreference = function(cmd, options) {\n  // Default to command version of the readPreference\n  var readPreference = cmd.readPreference || new ReadPreference('primary');\n  // If we have an option readPreference override the command one\n  if (options.readPreference) {\n    readPreference = options.readPreference;\n  }\n\n  if (typeof readPreference === 'string') {\n    readPreference = new ReadPreference(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoError('read preference must be a ReadPreference instance');\n  }\n\n  return readPreference;\n};\n\n// Parses the header of a wire protocol message\nvar parseHeader = function(message) {\n  return {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n};\n\nfunction applyCommonQueryOptions(queryOptions, options) {\n  Object.assign(queryOptions, {\n    raw: typeof options.raw === 'boolean' ? options.raw : false,\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    monitoring: typeof options.monitoring === 'boolean' ? options.monitoring : false,\n    fullResult: typeof options.fullResult === 'boolean' ? options.fullResult : false\n  });\n\n  if (typeof options.socketTimeout === 'number') {\n    queryOptions.socketTimeout = options.socketTimeout;\n  }\n\n  if (options.session) {\n    queryOptions.session = options.session;\n  }\n\n  if (typeof options.documentsReturnedIn === 'string') {\n    queryOptions.documentsReturnedIn = options.documentsReturnedIn;\n  }\n\n  return queryOptions;\n}\n\nfunction isSharded(topologyOrServer) {\n  if (topologyOrServer.type === 'mongos') return true;\n  if (topologyOrServer.description && topologyOrServer.description.type === ServerType.Mongos) {\n    return true;\n  }\n\n  // NOTE: This is incredibly inefficient, and should be removed once command construction\n  //       happens based on `Server` not `Topology`.\n  if (topologyOrServer.description && topologyOrServer.description instanceof TopologyDescription) {\n    const servers = Array.from(topologyOrServer.description.servers.values());\n    return servers.some(server => server.type === ServerType.Mongos);\n  }\n\n  return false;\n}\n\nfunction databaseNamespace(ns) {\n  return ns.split('.')[0];\n}\nfunction collectionNamespace(ns) {\n  return ns\n    .split('.')\n    .slice(1)\n    .join('.');\n}\n\nmodule.exports = {\n  getReadPreference,\n  MESSAGE_HEADER_SIZE,\n  COMPRESSION_DETAILS_SIZE,\n  opcodes,\n  parseHeader,\n  applyCommonQueryOptions,\n  isSharded,\n  databaseNamespace,\n  collectionNamespace\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/shared.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/wireprotocol/shared.js":"'use strict';\n\nconst ReadPreference = require('../topologies/read_preference');\nconst MongoError = require('../error').MongoError;\nconst ServerType = require('../sdam/server_description').ServerType;\nconst TopologyDescription = require('../sdam/topology_description').TopologyDescription;\n\nconst MESSAGE_HEADER_SIZE = 16;\nconst COMPRESSION_DETAILS_SIZE = 9; // originalOpcode + uncompressedSize, compressorID\n\n// OPCODE Numbers\n// Defined at https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#request-opcodes\nvar opcodes = {\n  OP_REPLY: 1,\n  OP_UPDATE: 2001,\n  OP_INSERT: 2002,\n  OP_QUERY: 2004,\n  OP_GETMORE: 2005,\n  OP_DELETE: 2006,\n  OP_KILL_CURSORS: 2007,\n  OP_COMPRESSED: 2012,\n  OP_MSG: 2013\n};\n\nvar getReadPreference = function(cmd, options) {\n  // Default to command version of the readPreference\n  var readPreference = cmd.readPreference || new ReadPreference('primary');\n  // If we have an option readPreference override the command one\n  if (options.readPreference) {\n    readPreference = options.readPreference;\n  }\n\n  if (typeof readPreference === 'string') {\n    readPreference = new ReadPreference(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoError('read preference must be a ReadPreference instance');\n  }\n\n  return readPreference;\n};\n\n// Parses the header of a wire protocol message\nvar parseHeader = function(message) {\n  return {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n};\n\nfunction applyCommonQueryOptions(queryOptions, options) {\n  Object.assign(queryOptions, {\n    raw: typeof options.raw === 'boolean' ? options.raw : false,\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    monitoring: typeof options.monitoring === 'boolean' ? options.monitoring : false,\n    fullResult: typeof options.fullResult === 'boolean' ? options.fullResult : false\n  });\n\n  if (typeof options.socketTimeout === 'number') {\n    queryOptions.socketTimeout = options.socketTimeout;\n  }\n\n  if (options.session) {\n    queryOptions.session = options.session;\n  }\n\n  if (typeof options.documentsReturnedIn === 'string') {\n    queryOptions.documentsReturnedIn = options.documentsReturnedIn;\n  }\n\n  return queryOptions;\n}\n\nfunction isSharded(topologyOrServer) {\n  if (topologyOrServer.type === 'mongos') return true;\n  if (topologyOrServer.description && topologyOrServer.description.type === ServerType.Mongos) {\n    return true;\n  }\n\n  // NOTE: This is incredibly inefficient, and should be removed once command construction\n  //       happens based on `Server` not `Topology`.\n  if (topologyOrServer.description && topologyOrServer.description instanceof TopologyDescription) {\n    const servers = Array.from(topologyOrServer.description.servers.values());\n    return servers.some(server => server.type === ServerType.Mongos);\n  }\n\n  return false;\n}\n\nfunction databaseNamespace(ns) {\n  return ns.split('.')[0];\n}\nfunction collectionNamespace(ns) {\n  return ns\n    .split('.')\n    .slice(1)\n    .join('.');\n}\n\nmodule.exports = {\n  getReadPreference,\n  MESSAGE_HEADER_SIZE,\n  COMPRESSION_DETAILS_SIZE,\n  opcodes,\n  parseHeader,\n  applyCommonQueryOptions,\n  isSharded,\n  databaseNamespace,\n  collectionNamespace\n};\n"},"lineCount":116}},"error":null,"hash":"e03cf2f8391beb6f4ac3d156883e2207","cacheData":{"env":{}}}