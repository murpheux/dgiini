{"id":"../node_modules/mongodb-core/lib/wireprotocol/command.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"../connection/commands","loc":{"line":3,"column":22},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/commands.js"},{"name":"../connection/msg","loc":{"line":4,"column":20},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/msg.js"},{"name":"../error","loc":{"line":5,"column":27},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"./shared","loc":{"line":8,"column":34},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/shared.js"},{"name":"../transactions","loc":{"line":9,"column":37},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/transactions.js"},{"name":"../sessions","loc":{"line":10,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sessions.js"}],"generated":{"js":"'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst Msg = require('../connection/msg').Msg;\nconst MongoError = require('../error').MongoError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst isSharded = require('./shared').isSharded;\nconst databaseNamespace = require('./shared').databaseNamespace;\nconst isTransactionCommand = require('../transactions').isTransactionCommand;\nconst applySession = require('../sessions').applySession;\n\nfunction command(server, ns, cmd, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  const bson = server.s.bson;\n  const pool = server.s.pool;\n  const readPreference = getReadPreference(cmd, options);\n  const shouldUseOpMsg = supportsOpMsg(server);\n  const session = options.session;\n\n  let clusterTime = server.clusterTime;\n  let finalCmd = Object.assign({}, cmd);\n  if (hasSessionSupport(server) && session) {\n    if (\n      session.clusterTime &&\n      session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)\n    ) {\n      clusterTime = session.clusterTime;\n    }\n\n    const err = applySession(session, finalCmd, options);\n    if (err) {\n      return callback(err);\n    }\n  }\n\n  // if we have a known cluster time, gossip it\n  if (clusterTime) {\n    finalCmd.$clusterTime = clusterTime;\n  }\n\n  if (\n    isSharded(server) &&\n    !shouldUseOpMsg &&\n    readPreference &&\n    readPreference.preference !== 'primary'\n  ) {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  const commandOptions = Object.assign(\n    {\n      command: true,\n      numberToSkip: 0,\n      numberToReturn: -1,\n      checkKeys: false\n    },\n    options\n  );\n\n  // This value is not overridable\n  commandOptions.slaveOk = readPreference.slaveOk();\n\n  const cmdNs = `${databaseNamespace(ns)}.$cmd`;\n  const message = shouldUseOpMsg\n    ? new Msg(bson, cmdNs, finalCmd, commandOptions)\n    : new Query(bson, cmdNs, finalCmd, commandOptions);\n\n  const inTransaction = session && (session.inTransaction() || isTransactionCommand(finalCmd));\n  const commandResponseHandler = inTransaction\n    ? function(err) {\n        if (\n          !cmd.commitTransaction &&\n          err &&\n          err instanceof MongoError &&\n          err.hasErrorLabel('TransientTransactionError')\n        ) {\n          session.transaction.unpinServer();\n        }\n\n        return callback.apply(null, arguments);\n      }\n    : callback;\n\n  try {\n    pool.write(message, commandOptions, commandResponseHandler);\n  } catch (err) {\n    commandResponseHandler(err);\n  }\n}\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n  if (topology.description) {\n    return topology.description.maxWireVersion >= 6;\n  }\n\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\nfunction supportsOpMsg(topologyOrServer) {\n  const description = topologyOrServer.ismaster\n    ? topologyOrServer.ismaster\n    : topologyOrServer.description;\n\n  if (description == null) {\n    return false;\n  }\n\n  return description.maxWireVersion >= 6 && description.__nodejs_mock_server__ == null;\n}\n\nmodule.exports = command;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/command.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/wireprotocol/command.js":"'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst Msg = require('../connection/msg').Msg;\nconst MongoError = require('../error').MongoError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst isSharded = require('./shared').isSharded;\nconst databaseNamespace = require('./shared').databaseNamespace;\nconst isTransactionCommand = require('../transactions').isTransactionCommand;\nconst applySession = require('../sessions').applySession;\n\nfunction command(server, ns, cmd, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (cmd == null) {\n    return callback(new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`));\n  }\n\n  const bson = server.s.bson;\n  const pool = server.s.pool;\n  const readPreference = getReadPreference(cmd, options);\n  const shouldUseOpMsg = supportsOpMsg(server);\n  const session = options.session;\n\n  let clusterTime = server.clusterTime;\n  let finalCmd = Object.assign({}, cmd);\n  if (hasSessionSupport(server) && session) {\n    if (\n      session.clusterTime &&\n      session.clusterTime.clusterTime.greaterThan(clusterTime.clusterTime)\n    ) {\n      clusterTime = session.clusterTime;\n    }\n\n    const err = applySession(session, finalCmd, options);\n    if (err) {\n      return callback(err);\n    }\n  }\n\n  // if we have a known cluster time, gossip it\n  if (clusterTime) {\n    finalCmd.$clusterTime = clusterTime;\n  }\n\n  if (\n    isSharded(server) &&\n    !shouldUseOpMsg &&\n    readPreference &&\n    readPreference.preference !== 'primary'\n  ) {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  const commandOptions = Object.assign(\n    {\n      command: true,\n      numberToSkip: 0,\n      numberToReturn: -1,\n      checkKeys: false\n    },\n    options\n  );\n\n  // This value is not overridable\n  commandOptions.slaveOk = readPreference.slaveOk();\n\n  const cmdNs = `${databaseNamespace(ns)}.$cmd`;\n  const message = shouldUseOpMsg\n    ? new Msg(bson, cmdNs, finalCmd, commandOptions)\n    : new Query(bson, cmdNs, finalCmd, commandOptions);\n\n  const inTransaction = session && (session.inTransaction() || isTransactionCommand(finalCmd));\n  const commandResponseHandler = inTransaction\n    ? function(err) {\n        if (\n          !cmd.commitTransaction &&\n          err &&\n          err instanceof MongoError &&\n          err.hasErrorLabel('TransientTransactionError')\n        ) {\n          session.transaction.unpinServer();\n        }\n\n        return callback.apply(null, arguments);\n      }\n    : callback;\n\n  try {\n    pool.write(message, commandOptions, commandResponseHandler);\n  } catch (err) {\n    commandResponseHandler(err);\n  }\n}\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n  if (topology.description) {\n    return topology.description.maxWireVersion >= 6;\n  }\n\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\nfunction supportsOpMsg(topologyOrServer) {\n  const description = topologyOrServer.ismaster\n    ? topologyOrServer.ismaster\n    : topologyOrServer.description;\n\n  if (description == null) {\n    return false;\n  }\n\n  return description.maxWireVersion >= 6 && description.__nodejs_mock_server__ == null;\n}\n\nmodule.exports = command;\n"},"lineCount":122}},"error":null,"hash":"ad5371e0701738827d47fc284a645714","cacheData":{"env":{}}}