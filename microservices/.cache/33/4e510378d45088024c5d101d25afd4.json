{"id":"../node_modules/mongodb-core/lib/connection/connection.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"events","loc":{"line":3,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/node-libs-browser/node_modules/events/events.js"},{"name":"crypto","loc":{"line":4,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/crypto-browserify/index.js"},{"name":"./utils","loc":{"line":5,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/utils.js"},{"name":"../wireprotocol/shared","loc":{"line":15,"column":36},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/shared.js"},{"name":"../wireprotocol/compression","loc":{"line":7,"column":27},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/compression.js"},{"name":"./commands","loc":{"line":8,"column":25},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/commands.js"},{"name":"./msg","loc":{"line":9,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/msg.js"},{"name":"../error","loc":{"line":11,"column":27},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"./logger","loc":{"line":12,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/logger.js"},{"name":"safe-buffer","loc":{"line":16,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/connection.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/safe-buffer/index.js"}],"generated":{"js":"\n'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst crypto = require('crypto');\nconst debugOptions = require('./utils').debugOptions;\nconst parseHeader = require('../wireprotocol/shared').parseHeader;\nconst decompress = require('../wireprotocol/compression').decompress;\nconst Response = require('./commands').Response;\nconst BinMsg = require('./msg').BinMsg;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MongoError = require('../error').MongoError;\nconst Logger = require('./logger');\nconst OP_COMPRESSED = require('../wireprotocol/shared').opcodes.OP_COMPRESSED;\nconst OP_MSG = require('../wireprotocol/shared').opcodes.OP_MSG;\nconst MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE;\nconst Buffer = require('safe-buffer').Buffer;\n\nlet _id = 0;\n\nconst DEFAULT_MAX_BSON_MESSAGE_SIZE = 1024 * 1024 * 16 * 4;\nconst DEBUG_FIELDS = [\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'socketTimeout',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'checkServerIdentity'\n];\n\nlet connectionAccountingSpy = undefined;\nlet connectionAccounting = false;\nlet connections = {};\n\n/**\n * A class representing a single connection to a MongoDB server\n *\n * @fires Connection#connect\n * @fires Connection#close\n * @fires Connection#error\n * @fires Connection#timeout\n * @fires Connection#parseError\n * @fires Connection#message\n */\nclass Connection extends EventEmitter {\n  /**\n   * Creates a new Connection instance\n   *\n   * @param {Socket} socket The socket this connection wraps\n   * @param {Object} [options] Optional settings\n   * @param {string} [options.host] The host the socket is connected to\n   * @param {number} [options.port] The port used for the socket connection\n   * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n   * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n   * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n   * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n   * @param {boolean} [options.promoteLongs] Convert Long values from the db into Numbers if they fit into 53 bits\n   * @param {boolean} [options.promoteValues] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n   * @param {boolean} [options.promoteBuffers] Promotes Binary BSON values to native Node Buffers.\n   */\n  constructor(socket, options) {\n    super();\n\n    options = options || {};\n    if (!options.bson) {\n      throw new TypeError('must pass in valid bson parser');\n    }\n\n    this.id = _id++;\n    this.options = options;\n    this.logger = Logger('Connection', options);\n    this.bson = options.bson;\n    this.tag = options.tag;\n    this.maxBsonMessageSize = options.maxBsonMessageSize || DEFAULT_MAX_BSON_MESSAGE_SIZE;\n\n    this.port = options.port || 27017;\n    this.host = options.host || 'localhost';\n    this.socketTimeout = typeof options.socketTimeout === 'number' ? options.socketTimeout : 360000;\n\n    // These values are inspected directly in tests, but maybe not necessary to keep around\n    this.keepAlive = typeof options.keepAlive === 'boolean' ? options.keepAlive : true;\n    this.keepAliveInitialDelay =\n      typeof options.keepAliveInitialDelay === 'number' ? options.keepAliveInitialDelay : 300000;\n    this.connectionTimeout =\n      typeof options.connectionTimeout === 'number' ? options.connectionTimeout : 30000;\n    if (this.keepAliveInitialDelay > this.socketTimeout) {\n      this.keepAliveInitialDelay = Math.round(this.socketTimeout / 2);\n    }\n\n    // Debug information\n    if (this.logger.isDebug()) {\n      this.logger.debug(\n        `creating connection ${this.id} with options [${JSON.stringify(\n          debugOptions(DEBUG_FIELDS, options)\n        )}]`\n      );\n    }\n\n    // Response options\n    this.responseOptions = {\n      promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n      promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n      promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false\n    };\n\n    // Flushing\n    this.flushing = false;\n    this.queue = [];\n\n    // Internal state\n    this.writeStream = null;\n    this.destroyed = false;\n\n    // Create hash method\n    const hash = crypto.createHash('sha1');\n    hash.update(this.address);\n    this.hashedName = hash.digest('hex');\n\n    // All operations in flight on the connection\n    this.workItems = [];\n\n    // setup socket\n    this.socket = socket;\n    this.socket.once('error', errorHandler(this));\n    this.socket.once('timeout', timeoutHandler(this));\n    this.socket.once('close', closeHandler(this));\n    this.socket.on('data', dataHandler(this));\n\n    if (connectionAccounting) {\n      addConnection(this.id, this);\n    }\n  }\n\n  setSocketTimeout(value) {\n    if (this.socket) {\n      this.socket.setTimeout(value);\n    }\n  }\n\n  resetSocketTimeout() {\n    if (this.socket) {\n      this.socket.setTimeout(this.socketTimeout);\n    }\n  }\n\n  static enableConnectionAccounting(spy) {\n    if (spy) {\n      connectionAccountingSpy = spy;\n    }\n\n    connectionAccounting = true;\n    connections = {};\n  }\n\n  static disableConnectionAccounting() {\n    connectionAccounting = false;\n    connectionAccountingSpy = undefined;\n  }\n\n  static connections() {\n    return connections;\n  }\n\n  get address() {\n    return `${this.host}:${this.port}`;\n  }\n\n  /**\n   * Unref this connection\n   * @method\n   * @return {boolean}\n   */\n  unref() {\n    if (this.socket == null) {\n      this.once('connect', () => this.socket.unref());\n      return;\n    }\n\n    this.socket.unref();\n  }\n\n  /**\n   * Destroy connection\n   * @method\n   */\n  destroy(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    options = Object.assign({ force: false }, options);\n\n    if (connectionAccounting) {\n      deleteConnection(this.id);\n    }\n\n    if (this.socket == null) {\n      this.destroyed = true;\n      return;\n    }\n\n    if (options.force) {\n      this.socket.destroy();\n      this.destroyed = true;\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    this.socket.end(err => {\n      this.destroyed = true;\n      if (typeof callback === 'function') callback(err, null);\n    });\n  }\n\n  /**\n   * Write to connection\n   * @method\n   * @param {Command} command Command to write out need to implement toBin and toBinUnified\n   */\n  write(buffer) {\n    // Debug Log\n    if (this.logger.isDebug()) {\n      if (!Array.isArray(buffer)) {\n        this.logger.debug(`writing buffer [${buffer.toString('hex')}] to ${this.address}`);\n      } else {\n        for (let i = 0; i < buffer.length; i++)\n          this.logger.debug(`writing buffer [${buffer[i].toString('hex')}] to ${this.address}`);\n      }\n    }\n\n    // Double check that the connection is not destroyed\n    if (this.socket.destroyed === false) {\n      // Write out the command\n      if (!Array.isArray(buffer)) {\n        this.socket.write(buffer, 'binary');\n        return true;\n      }\n\n      // Iterate over all buffers and write them in order to the socket\n      for (let i = 0; i < buffer.length; i++) {\n        this.socket.write(buffer[i], 'binary');\n      }\n\n      return true;\n    }\n\n    // Connection is destroyed return write failed\n    return false;\n  }\n\n  /**\n   * Return id of connection as a string\n   * @method\n   * @return {string}\n   */\n  toString() {\n    return '' + this.id;\n  }\n\n  /**\n   * Return json object of connection\n   * @method\n   * @return {object}\n   */\n  toJSON() {\n    return { id: this.id, host: this.host, port: this.port };\n  }\n\n  /**\n   * Is the connection connected\n   * @method\n   * @return {boolean}\n   */\n  isConnected() {\n    if (this.destroyed) return false;\n    return !this.socket.destroyed && this.socket.writable;\n  }\n}\n\nfunction deleteConnection(id) {\n  // console.log(\"=== deleted connection \" + id + \" :: \" + (connections[id] ? connections[id].port : ''))\n  delete connections[id];\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.deleteConnection(id);\n  }\n}\n\nfunction addConnection(id, connection) {\n  // console.log(\"=== added connection \" + id + \" :: \" + connection.port)\n  connections[id] = connection;\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.addConnection(id, connection);\n  }\n}\n\n//\n// Connection handlers\nfunction errorHandler(conn) {\n  return function(err) {\n    if (connectionAccounting) deleteConnection(conn.id);\n    // Debug information\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(\n        `connection ${conn.id} for [${conn.address}] errored out with [${JSON.stringify(err)}]`\n      );\n    }\n\n    conn.emit('error', new MongoNetworkError(err), conn);\n  };\n}\n\nfunction timeoutHandler(conn) {\n  return function() {\n    if (connectionAccounting) deleteConnection(conn.id);\n\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(`connection ${conn.id} for [${conn.address}] timed out`);\n    }\n\n    conn.emit(\n      'timeout',\n      new MongoNetworkError(`connection ${conn.id} to ${conn.address} timed out`),\n      conn\n    );\n  };\n}\n\nfunction closeHandler(conn) {\n  return function(hadError) {\n    if (connectionAccounting) deleteConnection(conn.id);\n\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(`connection ${conn.id} with for [${conn.address}] closed`);\n    }\n\n    if (!hadError) {\n      conn.emit(\n        'close',\n        new MongoNetworkError(`connection ${conn.id} to ${conn.address} closed`),\n        conn\n      );\n    }\n  };\n}\n\n// Handle a message once it is received\nfunction processMessage(conn, message) {\n  const msgHeader = parseHeader(message);\n  if (msgHeader.opCode !== OP_COMPRESSED) {\n    const ResponseConstructor = msgHeader.opCode === OP_MSG ? BinMsg : Response;\n    conn.emit(\n      'message',\n      new ResponseConstructor(\n        conn.bson,\n        message,\n        msgHeader,\n        message.slice(MESSAGE_HEADER_SIZE),\n        conn.responseOptions\n      ),\n      conn\n    );\n\n    return;\n  }\n\n  msgHeader.fromCompressed = true;\n  let index = MESSAGE_HEADER_SIZE;\n  msgHeader.opCode = message.readInt32LE(index);\n  index += 4;\n  msgHeader.length = message.readInt32LE(index);\n  index += 4;\n  const compressorID = message[index];\n  index++;\n\n  decompress(compressorID, message.slice(index), (err, decompressedMsgBody) => {\n    if (err) {\n      conn.emit('error', err);\n      return;\n    }\n\n    if (decompressedMsgBody.length !== msgHeader.length) {\n      conn.emit(\n        'error',\n        new MongoError(\n          'Decompressing a compressed message from the server failed. The message is corrupt.'\n        )\n      );\n\n      return;\n    }\n\n    const ResponseConstructor = msgHeader.opCode === OP_MSG ? BinMsg : Response;\n    conn.emit(\n      'message',\n      new ResponseConstructor(\n        conn.bson,\n        message,\n        msgHeader,\n        decompressedMsgBody,\n        conn.responseOptions\n      ),\n      conn\n    );\n  });\n}\n\nfunction dataHandler(conn) {\n  return function(data) {\n    // Parse until we are done with the data\n    while (data.length > 0) {\n      // If we still have bytes to read on the current message\n      if (conn.bytesRead > 0 && conn.sizeOfMessage > 0) {\n        // Calculate the amount of remaining bytes\n        const remainingBytesToRead = conn.sizeOfMessage - conn.bytesRead;\n        // Check if the current chunk contains the rest of the message\n        if (remainingBytesToRead > data.length) {\n          // Copy the new data into the exiting buffer (should have been allocated when we know the message size)\n          data.copy(conn.buffer, conn.bytesRead);\n          // Adjust the number of bytes read so it point to the correct index in the buffer\n          conn.bytesRead = conn.bytesRead + data.length;\n\n          // Reset state of buffer\n          data = Buffer.alloc(0);\n        } else {\n          // Copy the missing part of the data into our current buffer\n          data.copy(conn.buffer, conn.bytesRead, 0, remainingBytesToRead);\n          // Slice the overflow into a new buffer that we will then re-parse\n          data = data.slice(remainingBytesToRead);\n\n          // Emit current complete message\n          const emitBuffer = conn.buffer;\n          // Reset state of buffer\n          conn.buffer = null;\n          conn.sizeOfMessage = 0;\n          conn.bytesRead = 0;\n          conn.stubBuffer = null;\n\n          processMessage(conn, emitBuffer);\n        }\n      } else {\n        // Stub buffer is kept in case we don't get enough bytes to determine the\n        // size of the message (< 4 bytes)\n        if (conn.stubBuffer != null && conn.stubBuffer.length > 0) {\n          // If we have enough bytes to determine the message size let's do it\n          if (conn.stubBuffer.length + data.length > 4) {\n            // Prepad the data\n            const newData = Buffer.alloc(conn.stubBuffer.length + data.length);\n            conn.stubBuffer.copy(newData, 0);\n            data.copy(newData, conn.stubBuffer.length);\n            // Reassign for parsing\n            data = newData;\n\n            // Reset state of buffer\n            conn.buffer = null;\n            conn.sizeOfMessage = 0;\n            conn.bytesRead = 0;\n            conn.stubBuffer = null;\n          } else {\n            // Add the the bytes to the stub buffer\n            const newStubBuffer = Buffer.alloc(conn.stubBuffer.length + data.length);\n            // Copy existing stub buffer\n            conn.stubBuffer.copy(newStubBuffer, 0);\n            // Copy missing part of the data\n            data.copy(newStubBuffer, conn.stubBuffer.length);\n            // Exit parsing loop\n            data = Buffer.alloc(0);\n          }\n        } else {\n          if (data.length > 4) {\n            // Retrieve the message size\n            const sizeOfMessage = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\n            // If we have a negative sizeOfMessage emit error and return\n            if (sizeOfMessage < 0 || sizeOfMessage > conn.maxBsonMessageSize) {\n              const errorObject = {\n                err: 'socketHandler',\n                trace: '',\n                bin: conn.buffer,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: conn.bytesRead,\n                  stubBuffer: conn.stubBuffer\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              conn.emit('parseError', errorObject, conn);\n              return;\n            }\n\n            // Ensure that the size of message is larger than 0 and less than the max allowed\n            if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < conn.maxBsonMessageSize &&\n              sizeOfMessage > data.length\n            ) {\n              conn.buffer = Buffer.alloc(sizeOfMessage);\n              // Copy all the data into the buffer\n              data.copy(conn.buffer, 0);\n              // Update bytes read\n              conn.bytesRead = data.length;\n              // Update sizeOfMessage\n              conn.sizeOfMessage = sizeOfMessage;\n              // Ensure stub buffer is null\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n            } else if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < conn.maxBsonMessageSize &&\n              sizeOfMessage === data.length\n            ) {\n              const emitBuffer = data;\n              // Reset state of buffer\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n              // Emit the message\n              processMessage(conn, emitBuffer);\n            } else if (sizeOfMessage <= 4 || sizeOfMessage > conn.maxBsonMessageSize) {\n              const errorObject = {\n                err: 'socketHandler',\n                trace: null,\n                bin: data,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: 0,\n                  buffer: null,\n                  stubBuffer: null\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              conn.emit('parseError', errorObject, conn);\n\n              // Clear out the state of the parser\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n            } else {\n              const emitBuffer = data.slice(0, sizeOfMessage);\n              // Reset state of buffer\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Copy rest of message\n              data = data.slice(sizeOfMessage);\n              // Emit the message\n              processMessage(conn, emitBuffer);\n            }\n          } else {\n            // Create a buffer that contains the space for the non-complete message\n            conn.stubBuffer = Buffer.alloc(data.length);\n            // Copy the data to the stub buffer\n            data.copy(conn.stubBuffer, 0);\n            // Exit parsing loop\n            data = Buffer.alloc(0);\n          }\n        }\n      }\n    }\n  };\n}\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Connection#connect\n * @type {Connection}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Connection#close\n * @type {Connection}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Connection#error\n * @type {Connection}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Connection#timeout\n * @type {Connection}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Connection#parseError\n * @type {Connection}\n */\n\n/**\n * An event emitted each time the connection receives a parsed message from the wire\n *\n * @event Connection#message\n * @type {Connection}\n */\n\nmodule.exports = Connection;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/mongodb-core/lib/connection/connection.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/connection/connection.js":"'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst crypto = require('crypto');\nconst debugOptions = require('./utils').debugOptions;\nconst parseHeader = require('../wireprotocol/shared').parseHeader;\nconst decompress = require('../wireprotocol/compression').decompress;\nconst Response = require('./commands').Response;\nconst BinMsg = require('./msg').BinMsg;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MongoError = require('../error').MongoError;\nconst Logger = require('./logger');\nconst OP_COMPRESSED = require('../wireprotocol/shared').opcodes.OP_COMPRESSED;\nconst OP_MSG = require('../wireprotocol/shared').opcodes.OP_MSG;\nconst MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE;\nconst Buffer = require('safe-buffer').Buffer;\n\nlet _id = 0;\n\nconst DEFAULT_MAX_BSON_MESSAGE_SIZE = 1024 * 1024 * 16 * 4;\nconst DEBUG_FIELDS = [\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'socketTimeout',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'checkServerIdentity'\n];\n\nlet connectionAccountingSpy = undefined;\nlet connectionAccounting = false;\nlet connections = {};\n\n/**\n * A class representing a single connection to a MongoDB server\n *\n * @fires Connection#connect\n * @fires Connection#close\n * @fires Connection#error\n * @fires Connection#timeout\n * @fires Connection#parseError\n * @fires Connection#message\n */\nclass Connection extends EventEmitter {\n  /**\n   * Creates a new Connection instance\n   *\n   * @param {Socket} socket The socket this connection wraps\n   * @param {Object} [options] Optional settings\n   * @param {string} [options.host] The host the socket is connected to\n   * @param {number} [options.port] The port used for the socket connection\n   * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n   * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n   * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n   * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n   * @param {boolean} [options.promoteLongs] Convert Long values from the db into Numbers if they fit into 53 bits\n   * @param {boolean} [options.promoteValues] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n   * @param {boolean} [options.promoteBuffers] Promotes Binary BSON values to native Node Buffers.\n   */\n  constructor(socket, options) {\n    super();\n\n    options = options || {};\n    if (!options.bson) {\n      throw new TypeError('must pass in valid bson parser');\n    }\n\n    this.id = _id++;\n    this.options = options;\n    this.logger = Logger('Connection', options);\n    this.bson = options.bson;\n    this.tag = options.tag;\n    this.maxBsonMessageSize = options.maxBsonMessageSize || DEFAULT_MAX_BSON_MESSAGE_SIZE;\n\n    this.port = options.port || 27017;\n    this.host = options.host || 'localhost';\n    this.socketTimeout = typeof options.socketTimeout === 'number' ? options.socketTimeout : 360000;\n\n    // These values are inspected directly in tests, but maybe not necessary to keep around\n    this.keepAlive = typeof options.keepAlive === 'boolean' ? options.keepAlive : true;\n    this.keepAliveInitialDelay =\n      typeof options.keepAliveInitialDelay === 'number' ? options.keepAliveInitialDelay : 300000;\n    this.connectionTimeout =\n      typeof options.connectionTimeout === 'number' ? options.connectionTimeout : 30000;\n    if (this.keepAliveInitialDelay > this.socketTimeout) {\n      this.keepAliveInitialDelay = Math.round(this.socketTimeout / 2);\n    }\n\n    // Debug information\n    if (this.logger.isDebug()) {\n      this.logger.debug(\n        `creating connection ${this.id} with options [${JSON.stringify(\n          debugOptions(DEBUG_FIELDS, options)\n        )}]`\n      );\n    }\n\n    // Response options\n    this.responseOptions = {\n      promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n      promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n      promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false\n    };\n\n    // Flushing\n    this.flushing = false;\n    this.queue = [];\n\n    // Internal state\n    this.writeStream = null;\n    this.destroyed = false;\n\n    // Create hash method\n    const hash = crypto.createHash('sha1');\n    hash.update(this.address);\n    this.hashedName = hash.digest('hex');\n\n    // All operations in flight on the connection\n    this.workItems = [];\n\n    // setup socket\n    this.socket = socket;\n    this.socket.once('error', errorHandler(this));\n    this.socket.once('timeout', timeoutHandler(this));\n    this.socket.once('close', closeHandler(this));\n    this.socket.on('data', dataHandler(this));\n\n    if (connectionAccounting) {\n      addConnection(this.id, this);\n    }\n  }\n\n  setSocketTimeout(value) {\n    if (this.socket) {\n      this.socket.setTimeout(value);\n    }\n  }\n\n  resetSocketTimeout() {\n    if (this.socket) {\n      this.socket.setTimeout(this.socketTimeout);\n    }\n  }\n\n  static enableConnectionAccounting(spy) {\n    if (spy) {\n      connectionAccountingSpy = spy;\n    }\n\n    connectionAccounting = true;\n    connections = {};\n  }\n\n  static disableConnectionAccounting() {\n    connectionAccounting = false;\n    connectionAccountingSpy = undefined;\n  }\n\n  static connections() {\n    return connections;\n  }\n\n  get address() {\n    return `${this.host}:${this.port}`;\n  }\n\n  /**\n   * Unref this connection\n   * @method\n   * @return {boolean}\n   */\n  unref() {\n    if (this.socket == null) {\n      this.once('connect', () => this.socket.unref());\n      return;\n    }\n\n    this.socket.unref();\n  }\n\n  /**\n   * Destroy connection\n   * @method\n   */\n  destroy(options, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    options = Object.assign({ force: false }, options);\n\n    if (connectionAccounting) {\n      deleteConnection(this.id);\n    }\n\n    if (this.socket == null) {\n      this.destroyed = true;\n      return;\n    }\n\n    if (options.force) {\n      this.socket.destroy();\n      this.destroyed = true;\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    this.socket.end(err => {\n      this.destroyed = true;\n      if (typeof callback === 'function') callback(err, null);\n    });\n  }\n\n  /**\n   * Write to connection\n   * @method\n   * @param {Command} command Command to write out need to implement toBin and toBinUnified\n   */\n  write(buffer) {\n    // Debug Log\n    if (this.logger.isDebug()) {\n      if (!Array.isArray(buffer)) {\n        this.logger.debug(`writing buffer [${buffer.toString('hex')}] to ${this.address}`);\n      } else {\n        for (let i = 0; i < buffer.length; i++)\n          this.logger.debug(`writing buffer [${buffer[i].toString('hex')}] to ${this.address}`);\n      }\n    }\n\n    // Double check that the connection is not destroyed\n    if (this.socket.destroyed === false) {\n      // Write out the command\n      if (!Array.isArray(buffer)) {\n        this.socket.write(buffer, 'binary');\n        return true;\n      }\n\n      // Iterate over all buffers and write them in order to the socket\n      for (let i = 0; i < buffer.length; i++) {\n        this.socket.write(buffer[i], 'binary');\n      }\n\n      return true;\n    }\n\n    // Connection is destroyed return write failed\n    return false;\n  }\n\n  /**\n   * Return id of connection as a string\n   * @method\n   * @return {string}\n   */\n  toString() {\n    return '' + this.id;\n  }\n\n  /**\n   * Return json object of connection\n   * @method\n   * @return {object}\n   */\n  toJSON() {\n    return { id: this.id, host: this.host, port: this.port };\n  }\n\n  /**\n   * Is the connection connected\n   * @method\n   * @return {boolean}\n   */\n  isConnected() {\n    if (this.destroyed) return false;\n    return !this.socket.destroyed && this.socket.writable;\n  }\n}\n\nfunction deleteConnection(id) {\n  // console.log(\"=== deleted connection \" + id + \" :: \" + (connections[id] ? connections[id].port : ''))\n  delete connections[id];\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.deleteConnection(id);\n  }\n}\n\nfunction addConnection(id, connection) {\n  // console.log(\"=== added connection \" + id + \" :: \" + connection.port)\n  connections[id] = connection;\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.addConnection(id, connection);\n  }\n}\n\n//\n// Connection handlers\nfunction errorHandler(conn) {\n  return function(err) {\n    if (connectionAccounting) deleteConnection(conn.id);\n    // Debug information\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(\n        `connection ${conn.id} for [${conn.address}] errored out with [${JSON.stringify(err)}]`\n      );\n    }\n\n    conn.emit('error', new MongoNetworkError(err), conn);\n  };\n}\n\nfunction timeoutHandler(conn) {\n  return function() {\n    if (connectionAccounting) deleteConnection(conn.id);\n\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(`connection ${conn.id} for [${conn.address}] timed out`);\n    }\n\n    conn.emit(\n      'timeout',\n      new MongoNetworkError(`connection ${conn.id} to ${conn.address} timed out`),\n      conn\n    );\n  };\n}\n\nfunction closeHandler(conn) {\n  return function(hadError) {\n    if (connectionAccounting) deleteConnection(conn.id);\n\n    if (conn.logger.isDebug()) {\n      conn.logger.debug(`connection ${conn.id} with for [${conn.address}] closed`);\n    }\n\n    if (!hadError) {\n      conn.emit(\n        'close',\n        new MongoNetworkError(`connection ${conn.id} to ${conn.address} closed`),\n        conn\n      );\n    }\n  };\n}\n\n// Handle a message once it is received\nfunction processMessage(conn, message) {\n  const msgHeader = parseHeader(message);\n  if (msgHeader.opCode !== OP_COMPRESSED) {\n    const ResponseConstructor = msgHeader.opCode === OP_MSG ? BinMsg : Response;\n    conn.emit(\n      'message',\n      new ResponseConstructor(\n        conn.bson,\n        message,\n        msgHeader,\n        message.slice(MESSAGE_HEADER_SIZE),\n        conn.responseOptions\n      ),\n      conn\n    );\n\n    return;\n  }\n\n  msgHeader.fromCompressed = true;\n  let index = MESSAGE_HEADER_SIZE;\n  msgHeader.opCode = message.readInt32LE(index);\n  index += 4;\n  msgHeader.length = message.readInt32LE(index);\n  index += 4;\n  const compressorID = message[index];\n  index++;\n\n  decompress(compressorID, message.slice(index), (err, decompressedMsgBody) => {\n    if (err) {\n      conn.emit('error', err);\n      return;\n    }\n\n    if (decompressedMsgBody.length !== msgHeader.length) {\n      conn.emit(\n        'error',\n        new MongoError(\n          'Decompressing a compressed message from the server failed. The message is corrupt.'\n        )\n      );\n\n      return;\n    }\n\n    const ResponseConstructor = msgHeader.opCode === OP_MSG ? BinMsg : Response;\n    conn.emit(\n      'message',\n      new ResponseConstructor(\n        conn.bson,\n        message,\n        msgHeader,\n        decompressedMsgBody,\n        conn.responseOptions\n      ),\n      conn\n    );\n  });\n}\n\nfunction dataHandler(conn) {\n  return function(data) {\n    // Parse until we are done with the data\n    while (data.length > 0) {\n      // If we still have bytes to read on the current message\n      if (conn.bytesRead > 0 && conn.sizeOfMessage > 0) {\n        // Calculate the amount of remaining bytes\n        const remainingBytesToRead = conn.sizeOfMessage - conn.bytesRead;\n        // Check if the current chunk contains the rest of the message\n        if (remainingBytesToRead > data.length) {\n          // Copy the new data into the exiting buffer (should have been allocated when we know the message size)\n          data.copy(conn.buffer, conn.bytesRead);\n          // Adjust the number of bytes read so it point to the correct index in the buffer\n          conn.bytesRead = conn.bytesRead + data.length;\n\n          // Reset state of buffer\n          data = Buffer.alloc(0);\n        } else {\n          // Copy the missing part of the data into our current buffer\n          data.copy(conn.buffer, conn.bytesRead, 0, remainingBytesToRead);\n          // Slice the overflow into a new buffer that we will then re-parse\n          data = data.slice(remainingBytesToRead);\n\n          // Emit current complete message\n          const emitBuffer = conn.buffer;\n          // Reset state of buffer\n          conn.buffer = null;\n          conn.sizeOfMessage = 0;\n          conn.bytesRead = 0;\n          conn.stubBuffer = null;\n\n          processMessage(conn, emitBuffer);\n        }\n      } else {\n        // Stub buffer is kept in case we don't get enough bytes to determine the\n        // size of the message (< 4 bytes)\n        if (conn.stubBuffer != null && conn.stubBuffer.length > 0) {\n          // If we have enough bytes to determine the message size let's do it\n          if (conn.stubBuffer.length + data.length > 4) {\n            // Prepad the data\n            const newData = Buffer.alloc(conn.stubBuffer.length + data.length);\n            conn.stubBuffer.copy(newData, 0);\n            data.copy(newData, conn.stubBuffer.length);\n            // Reassign for parsing\n            data = newData;\n\n            // Reset state of buffer\n            conn.buffer = null;\n            conn.sizeOfMessage = 0;\n            conn.bytesRead = 0;\n            conn.stubBuffer = null;\n          } else {\n            // Add the the bytes to the stub buffer\n            const newStubBuffer = Buffer.alloc(conn.stubBuffer.length + data.length);\n            // Copy existing stub buffer\n            conn.stubBuffer.copy(newStubBuffer, 0);\n            // Copy missing part of the data\n            data.copy(newStubBuffer, conn.stubBuffer.length);\n            // Exit parsing loop\n            data = Buffer.alloc(0);\n          }\n        } else {\n          if (data.length > 4) {\n            // Retrieve the message size\n            const sizeOfMessage = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\n            // If we have a negative sizeOfMessage emit error and return\n            if (sizeOfMessage < 0 || sizeOfMessage > conn.maxBsonMessageSize) {\n              const errorObject = {\n                err: 'socketHandler',\n                trace: '',\n                bin: conn.buffer,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: conn.bytesRead,\n                  stubBuffer: conn.stubBuffer\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              conn.emit('parseError', errorObject, conn);\n              return;\n            }\n\n            // Ensure that the size of message is larger than 0 and less than the max allowed\n            if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < conn.maxBsonMessageSize &&\n              sizeOfMessage > data.length\n            ) {\n              conn.buffer = Buffer.alloc(sizeOfMessage);\n              // Copy all the data into the buffer\n              data.copy(conn.buffer, 0);\n              // Update bytes read\n              conn.bytesRead = data.length;\n              // Update sizeOfMessage\n              conn.sizeOfMessage = sizeOfMessage;\n              // Ensure stub buffer is null\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n            } else if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < conn.maxBsonMessageSize &&\n              sizeOfMessage === data.length\n            ) {\n              const emitBuffer = data;\n              // Reset state of buffer\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n              // Emit the message\n              processMessage(conn, emitBuffer);\n            } else if (sizeOfMessage <= 4 || sizeOfMessage > conn.maxBsonMessageSize) {\n              const errorObject = {\n                err: 'socketHandler',\n                trace: null,\n                bin: data,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: 0,\n                  buffer: null,\n                  stubBuffer: null\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              conn.emit('parseError', errorObject, conn);\n\n              // Clear out the state of the parser\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n            } else {\n              const emitBuffer = data.slice(0, sizeOfMessage);\n              // Reset state of buffer\n              conn.buffer = null;\n              conn.sizeOfMessage = 0;\n              conn.bytesRead = 0;\n              conn.stubBuffer = null;\n              // Copy rest of message\n              data = data.slice(sizeOfMessage);\n              // Emit the message\n              processMessage(conn, emitBuffer);\n            }\n          } else {\n            // Create a buffer that contains the space for the non-complete message\n            conn.stubBuffer = Buffer.alloc(data.length);\n            // Copy the data to the stub buffer\n            data.copy(conn.stubBuffer, 0);\n            // Exit parsing loop\n            data = Buffer.alloc(0);\n          }\n        }\n      }\n    }\n  };\n}\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Connection#connect\n * @type {Connection}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Connection#close\n * @type {Connection}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Connection#error\n * @type {Connection}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Connection#timeout\n * @type {Connection}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Connection#parseError\n * @type {Connection}\n */\n\n/**\n * An event emitted each time the connection receives a parsed message from the wire\n *\n * @event Connection#message\n * @type {Connection}\n */\n\nmodule.exports = Connection;\n"},"lineCount":626}},"error":null,"hash":"ddc8d23ee592c4f6bbf02069a91ea569","cacheData":{"env":{}}}