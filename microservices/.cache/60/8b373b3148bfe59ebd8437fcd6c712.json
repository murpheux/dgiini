{"id":"../node_modules/mongodb-core/lib/topologies/replset.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"util","loc":{"line":4,"column":18},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/node-libs-browser/node_modules/util/util.js"},{"name":"events","loc":{"line":5,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/node-libs-browser/node_modules/events/events.js"},{"name":"./read_preference","loc":{"line":6,"column":31},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/read_preference.js"},{"name":"../cursor","loc":{"line":7,"column":28},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/cursor.js"},{"name":"../connection/utils","loc":{"line":8,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/utils.js"},{"name":"../connection/logger","loc":{"line":9,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/logger.js"},{"name":"../error","loc":{"line":20,"column":33},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"./server","loc":{"line":11,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/server.js"},{"name":"./replset_state","loc":{"line":12,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset_state.js"},{"name":"./shared","loc":{"line":18,"column":43},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js"},{"name":"../utils","loc":{"line":19,"column":28},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/utils.js"},{"name":"process","parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\nconst ReadPreference = require('./read_preference');\nconst BasicCursor = require('../cursor');\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst Logger = require('../connection/logger');\nconst MongoError = require('../error').MongoError;\nconst Server = require('./server');\nconst ReplSetState = require('./replset_state');\nconst clone = require('./shared').clone;\nconst Timeout = require('./shared').Timeout;\nconst Interval = require('./shared').Interval;\nconst createClientInfo = require('./shared').createClientInfo;\nconst SessionMixins = require('./shared').SessionMixins;\nconst isRetryableWritesSupported = require('./shared').isRetryableWritesSupported;\nconst relayEvents = require('../utils').relayEvents;\nconst isRetryableError = require('../error').isRetryableError;\nconst BSON = retrieveBSON();\n\n//\n// States\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar UNREFERENCED = 'unreferenced';\nvar DESTROYED = 'destroyed';\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYED, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],\n    unreferenced: [UNREFERENCED, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.state = newState;\n  } else {\n    self.s.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\n//\n// ReplSet instance id\nvar id = 1;\nvar handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];\n\n/**\n * Creates a new Replset instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {boolean} options.setName The Replicaset set name\n * @param {boolean} [options.secondaryOnlyConnectionAllowed=false] Allow connection to a secondary only replicaset\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=10000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {ReplSet} A cursor instance\n * @fires ReplSet#connect\n * @fires ReplSet#ha\n * @fires ReplSet#joined\n * @fires ReplSet#left\n * @fires ReplSet#failed\n * @fires ReplSet#fullsetup\n * @fires ReplSet#all\n * @fires ReplSet#error\n * @fires ReplSet#serverHeartbeatStarted\n * @fires ReplSet#serverHeartbeatSucceeded\n * @fires ReplSet#serverHeartbeatFailed\n * @fires ReplSet#topologyOpening\n * @fires ReplSet#topologyClosed\n * @fires ReplSet#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar ReplSet = function(seedlist, options) {\n  var self = this;\n  options = options || {};\n\n  // Validate seedlist\n  if (!Array.isArray(seedlist)) throw new MongoError('seedlist must be an array');\n  // Validate list\n  if (seedlist.length === 0) throw new MongoError('seedlist must contain at least one entry');\n  // Validate entries\n  seedlist.forEach(function(e) {\n    if (typeof e.host !== 'string' || typeof e.port !== 'number')\n      throw new MongoError('seedlist entry must contain a host and port');\n  });\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Get replSet Id\n  this.id = id++;\n\n  // Get the localThresholdMS\n  var localThresholdMS = options.localThresholdMS || 15;\n  // Backward compatibility\n  if (options.acceptableLatency) localThresholdMS = options.acceptableLatency;\n\n  // Create a logger\n  var logger = Logger('ReplSet', options);\n\n  // Internal state\n  this.s = {\n    options: Object.assign({}, options),\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Factory overrides\n    Cursor: options.cursorFactory || BasicCursor,\n    // Logger instance\n    logger: logger,\n    // Seedlist\n    seedlist: seedlist,\n    // Replicaset state\n    replicaSetState: new ReplSetState({\n      id: this.id,\n      setName: options.setName,\n      acceptableLatency: localThresholdMS,\n      heartbeatFrequencyMS: options.haInterval ? options.haInterval : 10000,\n      logger: logger\n    }),\n    // Current servers we are connecting to\n    connectingServers: [],\n    // Ha interval\n    haInterval: options.haInterval ? options.haInterval : 10000,\n    // Minimum heartbeat frequency used if we detect a server close\n    minHeartbeatFrequencyMS: 500,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Server selection index\n    index: 0,\n    // Connect function options passed in\n    connectOptions: {},\n    // Are we running in debug mode\n    debug: typeof options.debug === 'boolean' ? options.debug : false,\n    // Client info\n    clientInfo: createClientInfo(options)\n  };\n\n  // Add handler for topology change\n  this.s.replicaSetState.on('topologyDescriptionChanged', function(r) {\n    self.emit('topologyDescriptionChanged', r);\n  });\n\n  // Log info warning if the socketTimeout < haInterval as it will cause\n  // a lot of recycled connections to happen.\n  if (\n    this.s.logger.isWarn() &&\n    this.s.options.socketTimeout !== 0 &&\n    this.s.options.socketTimeout < this.s.haInterval\n  ) {\n    this.s.logger.warn(\n      f(\n        'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts',\n        this.s.options.socketTimeout,\n        this.s.haInterval\n      )\n    );\n  }\n\n  // Add forwarding of events from state handler\n  var types = ['joined', 'left'];\n  types.forEach(function(x) {\n    self.s.replicaSetState.on(x, function(t, s) {\n      self.emit(x, t, s);\n    });\n  });\n\n  // Connect stat\n  this.initialConnectState = {\n    connect: false,\n    fullsetup: false,\n    all: false\n  };\n\n  // Disconnected state\n  this.state = DISCONNECTED;\n  this.haTimeoutId = null;\n  // Last ismaster\n  this.ismaster = null;\n  // Contains the intervalId\n  this.intervalIds = [];\n\n  // Highest clusterTime seen in responses from the current deployment\n  this.clusterTime = null;\n};\n\ninherits(ReplSet, EventEmitter);\nObject.assign(ReplSet.prototype, SessionMixins);\n\nObject.defineProperty(ReplSet.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return 'replset';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    return this.s.replicaSetState.logicalSessionTimeoutMinutes || null;\n  }\n});\n\nfunction rexecuteOperations(self) {\n  // If we have a primary and a disconnect handler, execute\n  // buffered operations\n  if (self.s.replicaSetState.hasPrimaryAndSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute();\n  } else if (self.s.replicaSetState.hasPrimary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executePrimary: true });\n  } else if (self.s.replicaSetState.hasSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executeSecondary: true });\n  }\n}\n\nfunction connectNewServers(self, servers, callback) {\n  // Count lefts\n  var count = servers.length;\n  var error = null;\n\n  // Handle events\n  var _handleEvent = function(self, event) {\n    return function(err) {\n      var _self = this;\n      count = count - 1;\n\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return this.destroy({ force: true });\n      }\n\n      if (event === 'connect') {\n        // Destroyed\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          return _self.destroy({ force: true });\n        }\n\n        // Update the state\n        var result = self.s.replicaSetState.update(_self);\n        // Update the state with the new server\n        if (result) {\n          // Primary lastIsMaster store it\n          if (_self.lastIsMaster() && _self.lastIsMaster().ismaster) {\n            self.ismaster = _self.lastIsMaster();\n          }\n\n          // Remove the handlers\n          for (let i = 0; i < handlers.length; i++) {\n            _self.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _self.on('error', handleEvent(self, 'error'));\n          _self.on('close', handleEvent(self, 'close'));\n          _self.on('timeout', handleEvent(self, 'timeout'));\n          _self.on('parseError', handleEvent(self, 'parseError'));\n\n          // Enalbe the monitoring of the new server\n          monitorServer(_self.lastIsMaster().me, self, {});\n\n          // Rexecute any stalled operation\n          rexecuteOperations(self);\n        } else {\n          _self.destroy({ force: true });\n        }\n      } else if (event === 'error') {\n        error = err;\n      }\n\n      // Rexecute any stalled operation\n      rexecuteOperations(self);\n\n      // Are we done finish up callback\n      if (count === 0) {\n        callback(error);\n      }\n    };\n  };\n\n  // No new servers\n  if (count === 0) return callback();\n\n  // Execute method\n  function execute(_server, i) {\n    setTimeout(function() {\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      // Create a new server instance\n      var server = new Server(\n        Object.assign({}, self.s.options, {\n          host: _server.split(':')[0],\n          port: parseInt(_server.split(':')[1], 10),\n          reconnect: false,\n          monitoring: false,\n          parent: self,\n          clientInfo: clone(self.s.clientInfo)\n        })\n      );\n\n      // Add temp handlers\n      server.once('connect', _handleEvent(self, 'connect'));\n      server.once('close', _handleEvent(self, 'close'));\n      server.once('timeout', _handleEvent(self, 'timeout'));\n      server.once('error', _handleEvent(self, 'error'));\n      server.once('parseError', _handleEvent(self, 'parseError'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      server.connect(self.s.connectOptions);\n    }, i);\n  }\n\n  // Create new instances\n  for (var i = 0; i < servers.length; i++) {\n    execute(servers[i], i);\n  }\n}\n\n// Ping the server\nvar pingServer = function(self, server, cb) {\n  // Measure running time\n  var start = new Date().getTime();\n\n  // Emit the server heartbeat start\n  emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: server.name });\n\n  // Execute ismaster\n  // Set the socketTimeout for a monitoring message to a low number\n  // Ensuring ismaster calls are timed out quickly\n  server.command(\n    'admin.$cmd',\n    {\n      ismaster: true\n    },\n    {\n      monitoring: true,\n      socketTimeout: self.s.options.connectionTimeout || 2000\n    },\n    function(err, r) {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        server.destroy({ force: true });\n        return cb(err, r);\n      }\n\n      // Calculate latency\n      var latencyMS = new Date().getTime() - start;\n      // Set the last updatedTime\n      var hrTime = process.hrtime();\n      // Calculate the last update time\n      server.lastUpdateTime = hrTime[0] * 1000 + Math.round(hrTime[1] / 1000);\n\n      // We had an error, remove it from the state\n      if (err) {\n        // Emit the server heartbeat failure\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: server.name\n        });\n\n        // Remove server from the state\n        self.s.replicaSetState.remove(server);\n      } else {\n        // Update the server ismaster\n        server.ismaster = r.result;\n\n        // Check if we have a lastWriteDate convert it to MS\n        // and store on the server instance for later use\n        if (server.ismaster.lastWrite && server.ismaster.lastWrite.lastWriteDate) {\n          server.lastWriteDate = server.ismaster.lastWrite.lastWriteDate.getTime();\n        }\n\n        // Do we have a brand new server\n        if (server.lastIsMasterMS === -1) {\n          server.lastIsMasterMS = latencyMS;\n        } else if (server.lastIsMasterMS) {\n          // After the first measurement, average RTT MUST be computed using an\n          // exponentially-weighted moving average formula, with a weighting factor (alpha) of 0.2.\n          // If the prior average is denoted old_rtt, then the new average (new_rtt) is\n          // computed from a new RTT measurement (x) using the following formula:\n          // alpha = 0.2\n          // new_rtt = alpha * x + (1 - alpha) * old_rtt\n          server.lastIsMasterMS = 0.2 * latencyMS + (1 - 0.2) * server.lastIsMasterMS;\n        }\n\n        if (self.s.replicaSetState.update(server)) {\n          // Primary lastIsMaster store it\n          if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n            self.ismaster = server.lastIsMaster();\n          }\n        }\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: server.name\n        });\n      }\n\n      // Calculate the staleness for this server\n      self.s.replicaSetState.updateServerMaxStaleness(server, self.s.haInterval);\n\n      // Callback\n      cb(err, r);\n    }\n  );\n};\n\n// Each server is monitored in parallel in their own timeout loop\nvar monitorServer = function(host, self, options) {\n  // If this is not the initial scan\n  // Is this server already being monitoried, then skip monitoring\n  if (!options.haInterval) {\n    for (var i = 0; i < self.intervalIds.length; i++) {\n      if (self.intervalIds[i].__host === host) {\n        return;\n      }\n    }\n  }\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  // Create the interval\n  var intervalId = new _process(function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      // clearInterval(intervalId);\n      intervalId.stop();\n      return;\n    }\n\n    // Do we already have server connection available for this host\n    var _server = self.s.replicaSetState.get(host);\n\n    // Check if we have a known server connection and reuse\n    if (_server) {\n      // Ping the server\n      return pingServer(self, _server, function(err) {\n        if (err) {\n          // NOTE: should something happen here?\n          return;\n        }\n\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          intervalId.stop();\n          return;\n        }\n\n        // Filter out all called intervaliIds\n        self.intervalIds = self.intervalIds.filter(function(intervalId) {\n          return intervalId.isRunning();\n        });\n\n        // Initial sweep\n        if (_process === Timeout) {\n          if (\n            self.state === CONNECTING &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            self.state = CONNECTED;\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('connect', self);\n            });\n\n            // Start topology interval check\n            topologyMonitor(self, {});\n          }\n        } else {\n          if (\n            self.state === DISCONNECTED &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            self.state = CONNECTED;\n\n            // Rexecute any stalled operation\n            rexecuteOperations(self);\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('reconnect', self);\n            });\n          }\n        }\n\n        if (\n          self.initialConnectState.connect &&\n          !self.initialConnectState.fullsetup &&\n          self.s.replicaSetState.hasPrimaryAndSecondary()\n        ) {\n          // Set initial connect state\n          self.initialConnectState.fullsetup = true;\n          self.initialConnectState.all = true;\n\n          process.nextTick(function() {\n            self.emit('fullsetup', self);\n            self.emit('all', self);\n          });\n        }\n      });\n    }\n  }, _haInterval);\n\n  // Start the interval\n  intervalId.start();\n  // Add the intervalId host name\n  intervalId.__host = host;\n  // Add the intervalId to our list of intervalIds\n  self.intervalIds.push(intervalId);\n};\n\nfunction topologyMonitor(self, options) {\n  if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n  options = options || {};\n\n  // Get the servers\n  var servers = Object.keys(self.s.replicaSetState.set);\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  if (_process === Timeout) {\n    return connectNewServers(self, self.s.replicaSetState.unknownServers, function(err) {\n      // Don't emit errors if the connection was already\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      if (!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no primary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      } else if (\n        !self.s.replicaSetState.hasSecondary() &&\n        self.s.options.secondaryOnlyConnectionAllowed\n      ) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no secondary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      }\n\n      for (var i = 0; i < servers.length; i++) {\n        monitorServer(servers[i], self, options);\n      }\n    });\n  } else {\n    for (var i = 0; i < servers.length; i++) {\n      monitorServer(servers[i], self, options);\n    }\n  }\n\n  // Run the reconnect process\n  function executeReconnect(self) {\n    return function() {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      connectNewServers(self, self.s.replicaSetState.unknownServers, function() {\n        var monitoringFrequencey = self.s.replicaSetState.hasPrimary()\n          ? _haInterval\n          : self.s.minHeartbeatFrequencyMS;\n\n        // Create a timeout\n        self.intervalIds.push(new Timeout(executeReconnect(self), monitoringFrequencey).start());\n      });\n    };\n  }\n\n  // Decide what kind of interval to use\n  var intervalTime = !self.s.replicaSetState.hasPrimary()\n    ? self.s.minHeartbeatFrequencyMS\n    : _haInterval;\n\n  self.intervalIds.push(new Timeout(executeReconnect(self), intervalTime).start());\n}\n\nfunction addServerToList(list, server) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].name.toLowerCase() === server.name.toLowerCase()) return true;\n  }\n\n  list.push(server);\n}\n\nfunction handleEvent(self, event) {\n  return function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f('handleEvent %s from server %s in replset with id %s', event, this.name, self.id)\n      );\n    }\n\n    // Remove from the replicaset state\n    self.s.replicaSetState.remove(this);\n\n    // Are we in a destroyed state return\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n    // If no primary and secondary available\n    if (\n      !self.s.replicaSetState.hasPrimary() &&\n      !self.s.replicaSetState.hasSecondary() &&\n      self.s.options.secondaryOnlyConnectionAllowed\n    ) {\n      stateTransition(self, DISCONNECTED);\n    } else if (!self.s.replicaSetState.hasPrimary()) {\n      stateTransition(self, DISCONNECTED);\n    }\n\n    addServerToList(self.s.connectingServers, this);\n  };\n}\n\nfunction shouldTriggerConnect(self) {\n  const isConnecting = self.state === CONNECTING;\n  const hasPrimary = self.s.replicaSetState.hasPrimary();\n  const hasSecondary = self.s.replicaSetState.hasSecondary();\n  const secondaryOnlyConnectionAllowed = self.s.options.secondaryOnlyConnectionAllowed;\n  const readPreferenceSecondary =\n    self.s.connectOptions.readPreference &&\n    self.s.connectOptions.readPreference.equals(ReadPreference.secondary);\n\n  return (\n    (isConnecting &&\n      ((readPreferenceSecondary && hasSecondary) || (!readPreferenceSecondary && hasPrimary))) ||\n    (hasSecondary && secondaryOnlyConnectionAllowed)\n  );\n}\n\nfunction handleInitialConnectEvent(self, event) {\n  return function() {\n    var _this = this;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f(\n          'handleInitialConnectEvent %s from server %s in replset with id %s',\n          event,\n          this.name,\n          self.id\n        )\n      );\n    }\n\n    // Destroy the instance\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      return this.destroy({ force: true });\n    }\n\n    // Check the type of server\n    if (event === 'connect') {\n      // Update the state\n      var result = self.s.replicaSetState.update(_this);\n      if (result === true) {\n        // Primary lastIsMaster store it\n        if (_this.lastIsMaster() && _this.lastIsMaster().ismaster) {\n          self.ismaster = _this.lastIsMaster();\n        }\n\n        // Debug log\n        if (self.s.logger.isDebug()) {\n          self.s.logger.debug(\n            f(\n              'handleInitialConnectEvent %s from server %s in replset with id %s has state [%s]',\n              event,\n              _this.name,\n              self.id,\n              JSON.stringify(self.s.replicaSetState.set)\n            )\n          );\n        }\n\n        // Remove the handlers\n        for (let i = 0; i < handlers.length; i++) {\n          _this.removeAllListeners(handlers[i]);\n        }\n\n        // Add stable state handlers\n        _this.on('error', handleEvent(self, 'error'));\n        _this.on('close', handleEvent(self, 'close'));\n        _this.on('timeout', handleEvent(self, 'timeout'));\n        _this.on('parseError', handleEvent(self, 'parseError'));\n\n        // Do we have a primary or primaryAndSecondary\n        if (shouldTriggerConnect(self)) {\n          // We are connected\n          self.state = CONNECTED;\n\n          // Set initial connect state\n          self.initialConnectState.connect = true;\n          // Emit connect event\n          process.nextTick(function() {\n            self.emit('connect', self);\n          });\n\n          topologyMonitor(self, {});\n        }\n      } else if (result instanceof MongoError) {\n        _this.destroy({ force: true });\n        self.destroy({ force: true });\n        return self.emit('error', result);\n      } else {\n        _this.destroy({ force: true });\n      }\n    } else {\n      // Emit failure to connect\n      self.emit('failed', this);\n\n      addServerToList(self.s.connectingServers, this);\n      // Remove from the state\n      self.s.replicaSetState.remove(this);\n    }\n\n    if (\n      self.initialConnectState.connect &&\n      !self.initialConnectState.fullsetup &&\n      self.s.replicaSetState.hasPrimaryAndSecondary()\n    ) {\n      // Set initial connect state\n      self.initialConnectState.fullsetup = true;\n      self.initialConnectState.all = true;\n\n      process.nextTick(function() {\n        self.emit('fullsetup', self);\n        self.emit('all', self);\n      });\n    }\n\n    // Remove from the list from connectingServers\n    for (var i = 0; i < self.s.connectingServers.length; i++) {\n      if (self.s.connectingServers[i].equals(this)) {\n        self.s.connectingServers.splice(i, 1);\n      }\n    }\n\n    // Trigger topologyMonitor\n    if (self.s.connectingServers.length === 0 && self.state === CONNECTING) {\n      topologyMonitor(self, { haInterval: 1 });\n    }\n  };\n}\n\nfunction connectServers(self, servers) {\n  // Update connectingServers\n  self.s.connectingServers = self.s.connectingServers.concat(servers);\n\n  // Index used to interleaf the server connects, avoiding\n  // runtime issues on io constrained vm's\n  var timeoutInterval = 0;\n\n  function connect(server, timeoutInterval) {\n    setTimeout(function() {\n      // Add the server to the state\n      if (self.s.replicaSetState.update(server)) {\n        // Primary lastIsMaster store it\n        if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n          self.ismaster = server.lastIsMaster();\n        }\n      }\n\n      // Add event handlers\n      server.once('close', handleInitialConnectEvent(self, 'close'));\n      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));\n      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));\n      server.once('error', handleInitialConnectEvent(self, 'error'));\n      server.once('connect', handleInitialConnectEvent(self, 'connect'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Start connection\n      server.connect(self.s.connectOptions);\n    }, timeoutInterval);\n  }\n\n  // Start all the servers\n  while (servers.length > 0) {\n    connect(servers.shift(), timeoutInterval++);\n  }\n}\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n/**\n * Initiate server connect\n */\nReplSet.prototype.connect = function(options) {\n  var self = this;\n  // Add any connect level options to the internal state\n  this.s.connectOptions = options || {};\n\n  // Set connecting state\n  stateTransition(this, CONNECTING);\n\n  // Create server instances\n  var servers = this.s.seedlist.map(function(x) {\n    return new Server(\n      Object.assign({}, self.s.options, x, options, {\n        reconnect: false,\n        monitoring: false,\n        parent: self,\n        clientInfo: clone(self.s.clientInfo)\n      })\n    );\n  });\n\n  // Error out as high availbility interval must be < than socketTimeout\n  if (\n    this.s.options.socketTimeout > 0 &&\n    this.s.options.socketTimeout <= this.s.options.haInterval\n  ) {\n    return self.emit(\n      'error',\n      new MongoError(\n        f(\n          'haInterval [%s] MS must be set to less than socketTimeout [%s] MS',\n          this.s.options.haInterval,\n          this.s.options.socketTimeout\n        )\n      )\n    );\n  }\n\n  // Emit the topology opening event\n  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });\n  // Start all server connections\n  connectServers(self, servers);\n};\n\n/**\n * Authenticate the topology.\n * @method\n * @param {MongoCredentials} credentials The credentials for authentication we are using\n * @param {authResultCallback} callback A callback function\n */\nReplSet.prototype.auth = function(credentials, callback) {\n  if (typeof callback === 'function') callback(null, null);\n};\n\n/**\n * Destroy the server connection\n * @param {boolean} [options.force=false] Force destroy the pool\n * @method\n */\nReplSet.prototype.destroy = function(options, callback) {\n  options = options || {};\n\n  let destroyCount = this.s.connectingServers.length + 1; // +1 for the callback from `replicaSetState.destroy`\n  const serverDestroyed = () => {\n    destroyCount--;\n    if (destroyCount > 0) {\n      return;\n    }\n\n    // Emit toplogy closing event\n    emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });\n\n    // Transition state\n    stateTransition(this, DESTROYED);\n\n    if (typeof callback === 'function') {\n      callback(null, null);\n    }\n  };\n\n  // Clear out any monitoring process\n  if (this.haTimeoutId) clearTimeout(this.haTimeoutId);\n\n  // Clear out all monitoring\n  for (var i = 0; i < this.intervalIds.length; i++) {\n    this.intervalIds[i].stop();\n  }\n\n  // Reset list of intervalIds\n  this.intervalIds = [];\n\n  if (destroyCount === 0) {\n    serverDestroyed();\n    return;\n  }\n\n  // Destroy the replicaset\n  this.s.replicaSetState.destroy(options, serverDestroyed);\n\n  // Destroy all connecting servers\n  this.s.connectingServers.forEach(function(x) {\n    x.destroy(options, serverDestroyed);\n  });\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nReplSet.prototype.unref = function() {\n  // Transition state\n  stateTransition(this, UNREFERENCED);\n\n  this.s.replicaSetState.allServers().forEach(function(x) {\n    x.unref();\n  });\n\n  clearTimeout(this.haTimeoutId);\n};\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nReplSet.prototype.lastIsMaster = function() {\n  // If secondaryOnlyConnectionAllowed and no primary but secondary\n  // return the secondaries ismaster result.\n  if (\n    this.s.options.secondaryOnlyConnectionAllowed &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.replicaSetState.hasSecondary()\n  ) {\n    return this.s.replicaSetState.secondaries[0].lastIsMaster();\n  }\n\n  return this.s.replicaSetState.primary\n    ? this.s.replicaSetState.primary.lastIsMaster()\n    : this.ismaster;\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nReplSet.prototype.connections = function() {\n  var servers = this.s.replicaSetState.allServers();\n  var connections = [];\n  for (var i = 0; i < servers.length; i++) {\n    connections = connections.concat(servers[i].connections());\n  }\n\n  return connections;\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {boolean}\n */\nReplSet.prototype.isConnected = function(options) {\n  options = options || {};\n\n  // If we specified a read preference check if we are connected to something\n  // than can satisfy this\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondary)) {\n    return this.s.replicaSetState.hasSecondary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primary)) {\n    return this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (this.s.options.secondaryOnlyConnectionAllowed && this.s.replicaSetState.hasSecondary()) {\n    return true;\n  }\n\n  return this.s.replicaSetState.hasPrimary();\n};\n\n/**\n * Figure out if the replicaset instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nReplSet.prototype.isDestroyed = function() {\n  return this.state === DESTROYED;\n};\n\n/**\n * Selects a server\n *\n * @method\n * @param {function} selector Unused\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {ClientSession} [options.session] Unused\n * @param {function} callback\n */\nReplSet.prototype.selectServer = function(selector, options, callback) {\n  if (typeof selector === 'function' && typeof callback === 'undefined')\n    (callback = selector), (selector = undefined), (options = {});\n  if (typeof options === 'function')\n    (callback = options), (options = selector), (selector = undefined);\n  options = options || {};\n\n  const server = this.s.replicaSetState.pickServer(options.readPreference);\n  if (this.s.debug) this.emit('pickedServer', options.readPreference, server);\n  callback(null, server);\n};\n\n/**\n * Get all connected servers\n * @method\n * @return {Server[]}\n */\nReplSet.prototype.getServers = function() {\n  return this.s.replicaSetState.allServers();\n};\n\n//\n// Execute write operation\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const self = args.self;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = args.ops;\n\n  if (self.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  const willRetryWrite =\n    !args.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction();\n\n  if (!self.s.replicaSetState.hasPrimary()) {\n    if (self.s.disconnectHandler) {\n      // Not connected but we have a disconnecthandler\n      return self.s.disconnectHandler.add(op, ns, ops, options, callback);\n    } else if (!willRetryWrite) {\n      // No server returned we had an error\n      return callback(new MongoError('no primary server found'));\n    }\n  }\n\n  const handler = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newArgs = Object.assign({}, args, { retrying: true });\n      return executeWriteOperation(newArgs, options, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (self.s.replicaSetState.primary) {\n      self.s.replicaSetState.remove(self.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  if (callback.operationId) {\n    handler.operationId = callback.operationId;\n  }\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  self.s.replicaSetState.primary[op](ns, ops, options, handler);\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.insert = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'insert', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.update = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'update', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.remove = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'remove', ns, ops }, options, callback);\n};\n\nconst RETRYABLE_WRITE_OPERATIONS = ['findAndModify', 'insert', 'update', 'delete'];\n\nfunction isWriteCommand(command) {\n  return RETRYABLE_WRITE_OPERATIONS.some(op => command[op]);\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.command = function(ns, cmd, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Establish readPreference\n  var readPreference = options.readPreference ? options.readPreference : ReadPreference.primary;\n\n  // If the readPreference is primary and we have no primary, store it\n  if (\n    readPreference.preference === 'primary' &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference === 'secondary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference !== 'primary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // Pick a server\n  var server = this.s.replicaSetState.pickServer(readPreference);\n  // We received an error, return it\n  if (!(server instanceof Server)) return callback(server);\n  // Emit debug event\n  if (self.s.debug) self.emit('pickedServer', ReadPreference.primary, server);\n\n  // No server returned we had an error\n  if (server == null) {\n    return callback(\n      new MongoError(\n        f('no server found that matches the provided readPreference %s', readPreference)\n      )\n    );\n  }\n\n  const willRetryWrite =\n    !options.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction() &&\n    isWriteCommand(cmd);\n\n  const cb = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newOptions = Object.assign({}, options, { retrying: true });\n      return this.command(ns, cmd, newOptions, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (this.s.replicaSetState.primary) {\n      this.s.replicaSetState.remove(this.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  // Execute the command\n  server.command(ns, cmd, options, cb);\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nReplSet.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(this.s.bson, ns, cmd, options, topology, this.s.options);\n};\n\n/**\n * A replset connect event, used to verify that the connection is up and running\n *\n * @event ReplSet#connect\n * @type {ReplSet}\n */\n\n/**\n * A replset reconnect event, used to verify that the topology reconnected\n *\n * @event ReplSet#reconnect\n * @type {ReplSet}\n */\n\n/**\n * A replset fullsetup event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#fullsetup\n * @type {ReplSet}\n */\n\n/**\n * A replset all event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#all\n * @type {ReplSet}\n */\n\n/**\n * A replset failed event, used to signal that initial replset connection failed.\n *\n * @event ReplSet#failed\n * @type {ReplSet}\n */\n\n/**\n * A server member left the replicaset\n *\n * @event ReplSet#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the replicaset\n *\n * @event ReplSet#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event ReplSet#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event ReplSet#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event ReplSet#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event ReplSet#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event ReplSet#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event ReplSet#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event ReplSet#serverHeartbeatStarted\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event ReplSet#serverHeartbeatFailed\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event ReplSet#serverHeartbeatSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event ReplSet#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event ReplSet#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event ReplSet#commandFailed\n * @type {object}\n */\n\nmodule.exports = ReplSet;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1163,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1164,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1165,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1166,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1167,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1168,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1169,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1170,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1171,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1172,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1173,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1174,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1175,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1176,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1177,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1178,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1179,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1180,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1181,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1182,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1183,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1184,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1185,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1186,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1187,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1188,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1189,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1190,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1191,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1192,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1193,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1194,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1195,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1196,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1197,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1198,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1199,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1200,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1201,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1202,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1203,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1204,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1205,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1206,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1207,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1208,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1209,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1210,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1211,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1212,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1213,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1214,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1215,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1216,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1217,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1218,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1219,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1220,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1221,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1222,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1223,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1224,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1225,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1226,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1227,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1228,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1229,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1230,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1231,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1232,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1233,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1234,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1235,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1236,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1237,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1238,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1239,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1240,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1241,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1242,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1243,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1244,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1245,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1246,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1247,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1248,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1249,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1250,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1251,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1252,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1253,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1254,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1255,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1256,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1257,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1258,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1259,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1260,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1261,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1262,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1263,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1264,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1265,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1266,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1267,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1268,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1269,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1270,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1271,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1272,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1273,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1274,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1275,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1276,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1277,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1278,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1279,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1280,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1281,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1282,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1283,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1284,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1285,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1286,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1287,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1288,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1289,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1290,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1291,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1292,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1293,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1294,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1295,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1296,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1297,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1298,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1299,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1300,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1301,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1302,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1303,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1304,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1305,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1306,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1307,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1308,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1309,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1310,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1311,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1312,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1313,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1314,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1315,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1316,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1317,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1318,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1319,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1320,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1321,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1322,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1323,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1324,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1325,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1326,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1327,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1328,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1329,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1330,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1331,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1332,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1333,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1334,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1335,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1336,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1337,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1338,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1339,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1340,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1341,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1342,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1343,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1344,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1345,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1346,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1347,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1348,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1349,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1350,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1351,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1352,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1353,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1354,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1355,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1356,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1357,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1358,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1359,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1360,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1361,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1362,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1363,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1364,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1365,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1366,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1367,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1368,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1369,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1370,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1371,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1372,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1373,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1374,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1375,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1376,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1377,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1378,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1379,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1380,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1381,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1382,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1383,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1384,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1385,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1386,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1387,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1388,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1389,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1390,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1391,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1392,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1393,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1394,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1395,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1396,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1397,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1398,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1399,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1400,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1401,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1402,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1403,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1404,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1405,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1406,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1407,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1408,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1409,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1410,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1411,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1412,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1413,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1414,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1415,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1416,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1417,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1418,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1419,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1420,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1421,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1422,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1423,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1424,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1425,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1426,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1427,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1428,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1429,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1430,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1431,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1432,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1433,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1434,"column":0},"generated":{"line":1435,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1435,"column":0},"generated":{"line":1436,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1436,"column":0},"generated":{"line":1437,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1437,"column":0},"generated":{"line":1438,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1438,"column":0},"generated":{"line":1439,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1439,"column":0},"generated":{"line":1440,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1440,"column":0},"generated":{"line":1441,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1441,"column":0},"generated":{"line":1442,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1442,"column":0},"generated":{"line":1443,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1443,"column":0},"generated":{"line":1444,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1444,"column":0},"generated":{"line":1445,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1445,"column":0},"generated":{"line":1446,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1446,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1447,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1448,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1449,"column":0},"generated":{"line":1450,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1450,"column":0},"generated":{"line":1451,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1451,"column":0},"generated":{"line":1452,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1452,"column":0},"generated":{"line":1453,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1453,"column":0},"generated":{"line":1454,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1454,"column":0},"generated":{"line":1455,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1455,"column":0},"generated":{"line":1456,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1456,"column":0},"generated":{"line":1457,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1457,"column":0},"generated":{"line":1458,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1458,"column":0},"generated":{"line":1459,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1459,"column":0},"generated":{"line":1460,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1460,"column":0},"generated":{"line":1461,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1461,"column":0},"generated":{"line":1462,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1462,"column":0},"generated":{"line":1463,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1463,"column":0},"generated":{"line":1464,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1464,"column":0},"generated":{"line":1465,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1465,"column":0},"generated":{"line":1466,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1466,"column":0},"generated":{"line":1467,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1467,"column":0},"generated":{"line":1468,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1468,"column":0},"generated":{"line":1469,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1469,"column":0},"generated":{"line":1470,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1470,"column":0},"generated":{"line":1471,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1471,"column":0},"generated":{"line":1472,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1472,"column":0},"generated":{"line":1473,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1473,"column":0},"generated":{"line":1474,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1474,"column":0},"generated":{"line":1475,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1475,"column":0},"generated":{"line":1476,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1476,"column":0},"generated":{"line":1477,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1477,"column":0},"generated":{"line":1478,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1478,"column":0},"generated":{"line":1479,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1479,"column":0},"generated":{"line":1480,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1480,"column":0},"generated":{"line":1481,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1481,"column":0},"generated":{"line":1482,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1482,"column":0},"generated":{"line":1483,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1483,"column":0},"generated":{"line":1484,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1484,"column":0},"generated":{"line":1485,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1485,"column":0},"generated":{"line":1486,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1486,"column":0},"generated":{"line":1487,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1487,"column":0},"generated":{"line":1488,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1488,"column":0},"generated":{"line":1489,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1489,"column":0},"generated":{"line":1490,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1490,"column":0},"generated":{"line":1491,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1491,"column":0},"generated":{"line":1492,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1492,"column":0},"generated":{"line":1493,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1493,"column":0},"generated":{"line":1494,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1494,"column":0},"generated":{"line":1495,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1495,"column":0},"generated":{"line":1496,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1496,"column":0},"generated":{"line":1497,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1497,"column":0},"generated":{"line":1498,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1498,"column":0},"generated":{"line":1499,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1499,"column":0},"generated":{"line":1500,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1500,"column":0},"generated":{"line":1501,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1501,"column":0},"generated":{"line":1502,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1502,"column":0},"generated":{"line":1503,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1503,"column":0},"generated":{"line":1504,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1504,"column":0},"generated":{"line":1505,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1505,"column":0},"generated":{"line":1506,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1506,"column":0},"generated":{"line":1507,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1507,"column":0},"generated":{"line":1508,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset.js","original":{"line":1508,"column":0},"generated":{"line":1509,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/topologies/replset.js":"'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\nconst ReadPreference = require('./read_preference');\nconst BasicCursor = require('../cursor');\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst Logger = require('../connection/logger');\nconst MongoError = require('../error').MongoError;\nconst Server = require('./server');\nconst ReplSetState = require('./replset_state');\nconst clone = require('./shared').clone;\nconst Timeout = require('./shared').Timeout;\nconst Interval = require('./shared').Interval;\nconst createClientInfo = require('./shared').createClientInfo;\nconst SessionMixins = require('./shared').SessionMixins;\nconst isRetryableWritesSupported = require('./shared').isRetryableWritesSupported;\nconst relayEvents = require('../utils').relayEvents;\nconst isRetryableError = require('../error').isRetryableError;\nconst BSON = retrieveBSON();\n\n//\n// States\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar UNREFERENCED = 'unreferenced';\nvar DESTROYED = 'destroyed';\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYED, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],\n    unreferenced: [UNREFERENCED, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.state = newState;\n  } else {\n    self.s.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\n//\n// ReplSet instance id\nvar id = 1;\nvar handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];\n\n/**\n * Creates a new Replset instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {boolean} options.setName The Replicaset set name\n * @param {boolean} [options.secondaryOnlyConnectionAllowed=false] Allow connection to a secondary only replicaset\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=10000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {ReplSet} A cursor instance\n * @fires ReplSet#connect\n * @fires ReplSet#ha\n * @fires ReplSet#joined\n * @fires ReplSet#left\n * @fires ReplSet#failed\n * @fires ReplSet#fullsetup\n * @fires ReplSet#all\n * @fires ReplSet#error\n * @fires ReplSet#serverHeartbeatStarted\n * @fires ReplSet#serverHeartbeatSucceeded\n * @fires ReplSet#serverHeartbeatFailed\n * @fires ReplSet#topologyOpening\n * @fires ReplSet#topologyClosed\n * @fires ReplSet#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar ReplSet = function(seedlist, options) {\n  var self = this;\n  options = options || {};\n\n  // Validate seedlist\n  if (!Array.isArray(seedlist)) throw new MongoError('seedlist must be an array');\n  // Validate list\n  if (seedlist.length === 0) throw new MongoError('seedlist must contain at least one entry');\n  // Validate entries\n  seedlist.forEach(function(e) {\n    if (typeof e.host !== 'string' || typeof e.port !== 'number')\n      throw new MongoError('seedlist entry must contain a host and port');\n  });\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Get replSet Id\n  this.id = id++;\n\n  // Get the localThresholdMS\n  var localThresholdMS = options.localThresholdMS || 15;\n  // Backward compatibility\n  if (options.acceptableLatency) localThresholdMS = options.acceptableLatency;\n\n  // Create a logger\n  var logger = Logger('ReplSet', options);\n\n  // Internal state\n  this.s = {\n    options: Object.assign({}, options),\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Factory overrides\n    Cursor: options.cursorFactory || BasicCursor,\n    // Logger instance\n    logger: logger,\n    // Seedlist\n    seedlist: seedlist,\n    // Replicaset state\n    replicaSetState: new ReplSetState({\n      id: this.id,\n      setName: options.setName,\n      acceptableLatency: localThresholdMS,\n      heartbeatFrequencyMS: options.haInterval ? options.haInterval : 10000,\n      logger: logger\n    }),\n    // Current servers we are connecting to\n    connectingServers: [],\n    // Ha interval\n    haInterval: options.haInterval ? options.haInterval : 10000,\n    // Minimum heartbeat frequency used if we detect a server close\n    minHeartbeatFrequencyMS: 500,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Server selection index\n    index: 0,\n    // Connect function options passed in\n    connectOptions: {},\n    // Are we running in debug mode\n    debug: typeof options.debug === 'boolean' ? options.debug : false,\n    // Client info\n    clientInfo: createClientInfo(options)\n  };\n\n  // Add handler for topology change\n  this.s.replicaSetState.on('topologyDescriptionChanged', function(r) {\n    self.emit('topologyDescriptionChanged', r);\n  });\n\n  // Log info warning if the socketTimeout < haInterval as it will cause\n  // a lot of recycled connections to happen.\n  if (\n    this.s.logger.isWarn() &&\n    this.s.options.socketTimeout !== 0 &&\n    this.s.options.socketTimeout < this.s.haInterval\n  ) {\n    this.s.logger.warn(\n      f(\n        'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts',\n        this.s.options.socketTimeout,\n        this.s.haInterval\n      )\n    );\n  }\n\n  // Add forwarding of events from state handler\n  var types = ['joined', 'left'];\n  types.forEach(function(x) {\n    self.s.replicaSetState.on(x, function(t, s) {\n      self.emit(x, t, s);\n    });\n  });\n\n  // Connect stat\n  this.initialConnectState = {\n    connect: false,\n    fullsetup: false,\n    all: false\n  };\n\n  // Disconnected state\n  this.state = DISCONNECTED;\n  this.haTimeoutId = null;\n  // Last ismaster\n  this.ismaster = null;\n  // Contains the intervalId\n  this.intervalIds = [];\n\n  // Highest clusterTime seen in responses from the current deployment\n  this.clusterTime = null;\n};\n\ninherits(ReplSet, EventEmitter);\nObject.assign(ReplSet.prototype, SessionMixins);\n\nObject.defineProperty(ReplSet.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return 'replset';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    return this.s.replicaSetState.logicalSessionTimeoutMinutes || null;\n  }\n});\n\nfunction rexecuteOperations(self) {\n  // If we have a primary and a disconnect handler, execute\n  // buffered operations\n  if (self.s.replicaSetState.hasPrimaryAndSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute();\n  } else if (self.s.replicaSetState.hasPrimary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executePrimary: true });\n  } else if (self.s.replicaSetState.hasSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executeSecondary: true });\n  }\n}\n\nfunction connectNewServers(self, servers, callback) {\n  // Count lefts\n  var count = servers.length;\n  var error = null;\n\n  // Handle events\n  var _handleEvent = function(self, event) {\n    return function(err) {\n      var _self = this;\n      count = count - 1;\n\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return this.destroy({ force: true });\n      }\n\n      if (event === 'connect') {\n        // Destroyed\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          return _self.destroy({ force: true });\n        }\n\n        // Update the state\n        var result = self.s.replicaSetState.update(_self);\n        // Update the state with the new server\n        if (result) {\n          // Primary lastIsMaster store it\n          if (_self.lastIsMaster() && _self.lastIsMaster().ismaster) {\n            self.ismaster = _self.lastIsMaster();\n          }\n\n          // Remove the handlers\n          for (let i = 0; i < handlers.length; i++) {\n            _self.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _self.on('error', handleEvent(self, 'error'));\n          _self.on('close', handleEvent(self, 'close'));\n          _self.on('timeout', handleEvent(self, 'timeout'));\n          _self.on('parseError', handleEvent(self, 'parseError'));\n\n          // Enalbe the monitoring of the new server\n          monitorServer(_self.lastIsMaster().me, self, {});\n\n          // Rexecute any stalled operation\n          rexecuteOperations(self);\n        } else {\n          _self.destroy({ force: true });\n        }\n      } else if (event === 'error') {\n        error = err;\n      }\n\n      // Rexecute any stalled operation\n      rexecuteOperations(self);\n\n      // Are we done finish up callback\n      if (count === 0) {\n        callback(error);\n      }\n    };\n  };\n\n  // No new servers\n  if (count === 0) return callback();\n\n  // Execute method\n  function execute(_server, i) {\n    setTimeout(function() {\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      // Create a new server instance\n      var server = new Server(\n        Object.assign({}, self.s.options, {\n          host: _server.split(':')[0],\n          port: parseInt(_server.split(':')[1], 10),\n          reconnect: false,\n          monitoring: false,\n          parent: self,\n          clientInfo: clone(self.s.clientInfo)\n        })\n      );\n\n      // Add temp handlers\n      server.once('connect', _handleEvent(self, 'connect'));\n      server.once('close', _handleEvent(self, 'close'));\n      server.once('timeout', _handleEvent(self, 'timeout'));\n      server.once('error', _handleEvent(self, 'error'));\n      server.once('parseError', _handleEvent(self, 'parseError'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      server.connect(self.s.connectOptions);\n    }, i);\n  }\n\n  // Create new instances\n  for (var i = 0; i < servers.length; i++) {\n    execute(servers[i], i);\n  }\n}\n\n// Ping the server\nvar pingServer = function(self, server, cb) {\n  // Measure running time\n  var start = new Date().getTime();\n\n  // Emit the server heartbeat start\n  emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: server.name });\n\n  // Execute ismaster\n  // Set the socketTimeout for a monitoring message to a low number\n  // Ensuring ismaster calls are timed out quickly\n  server.command(\n    'admin.$cmd',\n    {\n      ismaster: true\n    },\n    {\n      monitoring: true,\n      socketTimeout: self.s.options.connectionTimeout || 2000\n    },\n    function(err, r) {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        server.destroy({ force: true });\n        return cb(err, r);\n      }\n\n      // Calculate latency\n      var latencyMS = new Date().getTime() - start;\n      // Set the last updatedTime\n      var hrTime = process.hrtime();\n      // Calculate the last update time\n      server.lastUpdateTime = hrTime[0] * 1000 + Math.round(hrTime[1] / 1000);\n\n      // We had an error, remove it from the state\n      if (err) {\n        // Emit the server heartbeat failure\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: server.name\n        });\n\n        // Remove server from the state\n        self.s.replicaSetState.remove(server);\n      } else {\n        // Update the server ismaster\n        server.ismaster = r.result;\n\n        // Check if we have a lastWriteDate convert it to MS\n        // and store on the server instance for later use\n        if (server.ismaster.lastWrite && server.ismaster.lastWrite.lastWriteDate) {\n          server.lastWriteDate = server.ismaster.lastWrite.lastWriteDate.getTime();\n        }\n\n        // Do we have a brand new server\n        if (server.lastIsMasterMS === -1) {\n          server.lastIsMasterMS = latencyMS;\n        } else if (server.lastIsMasterMS) {\n          // After the first measurement, average RTT MUST be computed using an\n          // exponentially-weighted moving average formula, with a weighting factor (alpha) of 0.2.\n          // If the prior average is denoted old_rtt, then the new average (new_rtt) is\n          // computed from a new RTT measurement (x) using the following formula:\n          // alpha = 0.2\n          // new_rtt = alpha * x + (1 - alpha) * old_rtt\n          server.lastIsMasterMS = 0.2 * latencyMS + (1 - 0.2) * server.lastIsMasterMS;\n        }\n\n        if (self.s.replicaSetState.update(server)) {\n          // Primary lastIsMaster store it\n          if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n            self.ismaster = server.lastIsMaster();\n          }\n        }\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: server.name\n        });\n      }\n\n      // Calculate the staleness for this server\n      self.s.replicaSetState.updateServerMaxStaleness(server, self.s.haInterval);\n\n      // Callback\n      cb(err, r);\n    }\n  );\n};\n\n// Each server is monitored in parallel in their own timeout loop\nvar monitorServer = function(host, self, options) {\n  // If this is not the initial scan\n  // Is this server already being monitoried, then skip monitoring\n  if (!options.haInterval) {\n    for (var i = 0; i < self.intervalIds.length; i++) {\n      if (self.intervalIds[i].__host === host) {\n        return;\n      }\n    }\n  }\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  // Create the interval\n  var intervalId = new _process(function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      // clearInterval(intervalId);\n      intervalId.stop();\n      return;\n    }\n\n    // Do we already have server connection available for this host\n    var _server = self.s.replicaSetState.get(host);\n\n    // Check if we have a known server connection and reuse\n    if (_server) {\n      // Ping the server\n      return pingServer(self, _server, function(err) {\n        if (err) {\n          // NOTE: should something happen here?\n          return;\n        }\n\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          intervalId.stop();\n          return;\n        }\n\n        // Filter out all called intervaliIds\n        self.intervalIds = self.intervalIds.filter(function(intervalId) {\n          return intervalId.isRunning();\n        });\n\n        // Initial sweep\n        if (_process === Timeout) {\n          if (\n            self.state === CONNECTING &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            self.state = CONNECTED;\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('connect', self);\n            });\n\n            // Start topology interval check\n            topologyMonitor(self, {});\n          }\n        } else {\n          if (\n            self.state === DISCONNECTED &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            self.state = CONNECTED;\n\n            // Rexecute any stalled operation\n            rexecuteOperations(self);\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('reconnect', self);\n            });\n          }\n        }\n\n        if (\n          self.initialConnectState.connect &&\n          !self.initialConnectState.fullsetup &&\n          self.s.replicaSetState.hasPrimaryAndSecondary()\n        ) {\n          // Set initial connect state\n          self.initialConnectState.fullsetup = true;\n          self.initialConnectState.all = true;\n\n          process.nextTick(function() {\n            self.emit('fullsetup', self);\n            self.emit('all', self);\n          });\n        }\n      });\n    }\n  }, _haInterval);\n\n  // Start the interval\n  intervalId.start();\n  // Add the intervalId host name\n  intervalId.__host = host;\n  // Add the intervalId to our list of intervalIds\n  self.intervalIds.push(intervalId);\n};\n\nfunction topologyMonitor(self, options) {\n  if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n  options = options || {};\n\n  // Get the servers\n  var servers = Object.keys(self.s.replicaSetState.set);\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  if (_process === Timeout) {\n    return connectNewServers(self, self.s.replicaSetState.unknownServers, function(err) {\n      // Don't emit errors if the connection was already\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      if (!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no primary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      } else if (\n        !self.s.replicaSetState.hasSecondary() &&\n        self.s.options.secondaryOnlyConnectionAllowed\n      ) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no secondary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      }\n\n      for (var i = 0; i < servers.length; i++) {\n        monitorServer(servers[i], self, options);\n      }\n    });\n  } else {\n    for (var i = 0; i < servers.length; i++) {\n      monitorServer(servers[i], self, options);\n    }\n  }\n\n  // Run the reconnect process\n  function executeReconnect(self) {\n    return function() {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      connectNewServers(self, self.s.replicaSetState.unknownServers, function() {\n        var monitoringFrequencey = self.s.replicaSetState.hasPrimary()\n          ? _haInterval\n          : self.s.minHeartbeatFrequencyMS;\n\n        // Create a timeout\n        self.intervalIds.push(new Timeout(executeReconnect(self), monitoringFrequencey).start());\n      });\n    };\n  }\n\n  // Decide what kind of interval to use\n  var intervalTime = !self.s.replicaSetState.hasPrimary()\n    ? self.s.minHeartbeatFrequencyMS\n    : _haInterval;\n\n  self.intervalIds.push(new Timeout(executeReconnect(self), intervalTime).start());\n}\n\nfunction addServerToList(list, server) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].name.toLowerCase() === server.name.toLowerCase()) return true;\n  }\n\n  list.push(server);\n}\n\nfunction handleEvent(self, event) {\n  return function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f('handleEvent %s from server %s in replset with id %s', event, this.name, self.id)\n      );\n    }\n\n    // Remove from the replicaset state\n    self.s.replicaSetState.remove(this);\n\n    // Are we in a destroyed state return\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n    // If no primary and secondary available\n    if (\n      !self.s.replicaSetState.hasPrimary() &&\n      !self.s.replicaSetState.hasSecondary() &&\n      self.s.options.secondaryOnlyConnectionAllowed\n    ) {\n      stateTransition(self, DISCONNECTED);\n    } else if (!self.s.replicaSetState.hasPrimary()) {\n      stateTransition(self, DISCONNECTED);\n    }\n\n    addServerToList(self.s.connectingServers, this);\n  };\n}\n\nfunction shouldTriggerConnect(self) {\n  const isConnecting = self.state === CONNECTING;\n  const hasPrimary = self.s.replicaSetState.hasPrimary();\n  const hasSecondary = self.s.replicaSetState.hasSecondary();\n  const secondaryOnlyConnectionAllowed = self.s.options.secondaryOnlyConnectionAllowed;\n  const readPreferenceSecondary =\n    self.s.connectOptions.readPreference &&\n    self.s.connectOptions.readPreference.equals(ReadPreference.secondary);\n\n  return (\n    (isConnecting &&\n      ((readPreferenceSecondary && hasSecondary) || (!readPreferenceSecondary && hasPrimary))) ||\n    (hasSecondary && secondaryOnlyConnectionAllowed)\n  );\n}\n\nfunction handleInitialConnectEvent(self, event) {\n  return function() {\n    var _this = this;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f(\n          'handleInitialConnectEvent %s from server %s in replset with id %s',\n          event,\n          this.name,\n          self.id\n        )\n      );\n    }\n\n    // Destroy the instance\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      return this.destroy({ force: true });\n    }\n\n    // Check the type of server\n    if (event === 'connect') {\n      // Update the state\n      var result = self.s.replicaSetState.update(_this);\n      if (result === true) {\n        // Primary lastIsMaster store it\n        if (_this.lastIsMaster() && _this.lastIsMaster().ismaster) {\n          self.ismaster = _this.lastIsMaster();\n        }\n\n        // Debug log\n        if (self.s.logger.isDebug()) {\n          self.s.logger.debug(\n            f(\n              'handleInitialConnectEvent %s from server %s in replset with id %s has state [%s]',\n              event,\n              _this.name,\n              self.id,\n              JSON.stringify(self.s.replicaSetState.set)\n            )\n          );\n        }\n\n        // Remove the handlers\n        for (let i = 0; i < handlers.length; i++) {\n          _this.removeAllListeners(handlers[i]);\n        }\n\n        // Add stable state handlers\n        _this.on('error', handleEvent(self, 'error'));\n        _this.on('close', handleEvent(self, 'close'));\n        _this.on('timeout', handleEvent(self, 'timeout'));\n        _this.on('parseError', handleEvent(self, 'parseError'));\n\n        // Do we have a primary or primaryAndSecondary\n        if (shouldTriggerConnect(self)) {\n          // We are connected\n          self.state = CONNECTED;\n\n          // Set initial connect state\n          self.initialConnectState.connect = true;\n          // Emit connect event\n          process.nextTick(function() {\n            self.emit('connect', self);\n          });\n\n          topologyMonitor(self, {});\n        }\n      } else if (result instanceof MongoError) {\n        _this.destroy({ force: true });\n        self.destroy({ force: true });\n        return self.emit('error', result);\n      } else {\n        _this.destroy({ force: true });\n      }\n    } else {\n      // Emit failure to connect\n      self.emit('failed', this);\n\n      addServerToList(self.s.connectingServers, this);\n      // Remove from the state\n      self.s.replicaSetState.remove(this);\n    }\n\n    if (\n      self.initialConnectState.connect &&\n      !self.initialConnectState.fullsetup &&\n      self.s.replicaSetState.hasPrimaryAndSecondary()\n    ) {\n      // Set initial connect state\n      self.initialConnectState.fullsetup = true;\n      self.initialConnectState.all = true;\n\n      process.nextTick(function() {\n        self.emit('fullsetup', self);\n        self.emit('all', self);\n      });\n    }\n\n    // Remove from the list from connectingServers\n    for (var i = 0; i < self.s.connectingServers.length; i++) {\n      if (self.s.connectingServers[i].equals(this)) {\n        self.s.connectingServers.splice(i, 1);\n      }\n    }\n\n    // Trigger topologyMonitor\n    if (self.s.connectingServers.length === 0 && self.state === CONNECTING) {\n      topologyMonitor(self, { haInterval: 1 });\n    }\n  };\n}\n\nfunction connectServers(self, servers) {\n  // Update connectingServers\n  self.s.connectingServers = self.s.connectingServers.concat(servers);\n\n  // Index used to interleaf the server connects, avoiding\n  // runtime issues on io constrained vm's\n  var timeoutInterval = 0;\n\n  function connect(server, timeoutInterval) {\n    setTimeout(function() {\n      // Add the server to the state\n      if (self.s.replicaSetState.update(server)) {\n        // Primary lastIsMaster store it\n        if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n          self.ismaster = server.lastIsMaster();\n        }\n      }\n\n      // Add event handlers\n      server.once('close', handleInitialConnectEvent(self, 'close'));\n      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));\n      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));\n      server.once('error', handleInitialConnectEvent(self, 'error'));\n      server.once('connect', handleInitialConnectEvent(self, 'connect'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Start connection\n      server.connect(self.s.connectOptions);\n    }, timeoutInterval);\n  }\n\n  // Start all the servers\n  while (servers.length > 0) {\n    connect(servers.shift(), timeoutInterval++);\n  }\n}\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n/**\n * Initiate server connect\n */\nReplSet.prototype.connect = function(options) {\n  var self = this;\n  // Add any connect level options to the internal state\n  this.s.connectOptions = options || {};\n\n  // Set connecting state\n  stateTransition(this, CONNECTING);\n\n  // Create server instances\n  var servers = this.s.seedlist.map(function(x) {\n    return new Server(\n      Object.assign({}, self.s.options, x, options, {\n        reconnect: false,\n        monitoring: false,\n        parent: self,\n        clientInfo: clone(self.s.clientInfo)\n      })\n    );\n  });\n\n  // Error out as high availbility interval must be < than socketTimeout\n  if (\n    this.s.options.socketTimeout > 0 &&\n    this.s.options.socketTimeout <= this.s.options.haInterval\n  ) {\n    return self.emit(\n      'error',\n      new MongoError(\n        f(\n          'haInterval [%s] MS must be set to less than socketTimeout [%s] MS',\n          this.s.options.haInterval,\n          this.s.options.socketTimeout\n        )\n      )\n    );\n  }\n\n  // Emit the topology opening event\n  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });\n  // Start all server connections\n  connectServers(self, servers);\n};\n\n/**\n * Authenticate the topology.\n * @method\n * @param {MongoCredentials} credentials The credentials for authentication we are using\n * @param {authResultCallback} callback A callback function\n */\nReplSet.prototype.auth = function(credentials, callback) {\n  if (typeof callback === 'function') callback(null, null);\n};\n\n/**\n * Destroy the server connection\n * @param {boolean} [options.force=false] Force destroy the pool\n * @method\n */\nReplSet.prototype.destroy = function(options, callback) {\n  options = options || {};\n\n  let destroyCount = this.s.connectingServers.length + 1; // +1 for the callback from `replicaSetState.destroy`\n  const serverDestroyed = () => {\n    destroyCount--;\n    if (destroyCount > 0) {\n      return;\n    }\n\n    // Emit toplogy closing event\n    emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });\n\n    // Transition state\n    stateTransition(this, DESTROYED);\n\n    if (typeof callback === 'function') {\n      callback(null, null);\n    }\n  };\n\n  // Clear out any monitoring process\n  if (this.haTimeoutId) clearTimeout(this.haTimeoutId);\n\n  // Clear out all monitoring\n  for (var i = 0; i < this.intervalIds.length; i++) {\n    this.intervalIds[i].stop();\n  }\n\n  // Reset list of intervalIds\n  this.intervalIds = [];\n\n  if (destroyCount === 0) {\n    serverDestroyed();\n    return;\n  }\n\n  // Destroy the replicaset\n  this.s.replicaSetState.destroy(options, serverDestroyed);\n\n  // Destroy all connecting servers\n  this.s.connectingServers.forEach(function(x) {\n    x.destroy(options, serverDestroyed);\n  });\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nReplSet.prototype.unref = function() {\n  // Transition state\n  stateTransition(this, UNREFERENCED);\n\n  this.s.replicaSetState.allServers().forEach(function(x) {\n    x.unref();\n  });\n\n  clearTimeout(this.haTimeoutId);\n};\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nReplSet.prototype.lastIsMaster = function() {\n  // If secondaryOnlyConnectionAllowed and no primary but secondary\n  // return the secondaries ismaster result.\n  if (\n    this.s.options.secondaryOnlyConnectionAllowed &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.replicaSetState.hasSecondary()\n  ) {\n    return this.s.replicaSetState.secondaries[0].lastIsMaster();\n  }\n\n  return this.s.replicaSetState.primary\n    ? this.s.replicaSetState.primary.lastIsMaster()\n    : this.ismaster;\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nReplSet.prototype.connections = function() {\n  var servers = this.s.replicaSetState.allServers();\n  var connections = [];\n  for (var i = 0; i < servers.length; i++) {\n    connections = connections.concat(servers[i].connections());\n  }\n\n  return connections;\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {boolean}\n */\nReplSet.prototype.isConnected = function(options) {\n  options = options || {};\n\n  // If we specified a read preference check if we are connected to something\n  // than can satisfy this\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondary)) {\n    return this.s.replicaSetState.hasSecondary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primary)) {\n    return this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (this.s.options.secondaryOnlyConnectionAllowed && this.s.replicaSetState.hasSecondary()) {\n    return true;\n  }\n\n  return this.s.replicaSetState.hasPrimary();\n};\n\n/**\n * Figure out if the replicaset instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nReplSet.prototype.isDestroyed = function() {\n  return this.state === DESTROYED;\n};\n\n/**\n * Selects a server\n *\n * @method\n * @param {function} selector Unused\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {ClientSession} [options.session] Unused\n * @param {function} callback\n */\nReplSet.prototype.selectServer = function(selector, options, callback) {\n  if (typeof selector === 'function' && typeof callback === 'undefined')\n    (callback = selector), (selector = undefined), (options = {});\n  if (typeof options === 'function')\n    (callback = options), (options = selector), (selector = undefined);\n  options = options || {};\n\n  const server = this.s.replicaSetState.pickServer(options.readPreference);\n  if (this.s.debug) this.emit('pickedServer', options.readPreference, server);\n  callback(null, server);\n};\n\n/**\n * Get all connected servers\n * @method\n * @return {Server[]}\n */\nReplSet.prototype.getServers = function() {\n  return this.s.replicaSetState.allServers();\n};\n\n//\n// Execute write operation\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const self = args.self;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = args.ops;\n\n  if (self.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  const willRetryWrite =\n    !args.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction();\n\n  if (!self.s.replicaSetState.hasPrimary()) {\n    if (self.s.disconnectHandler) {\n      // Not connected but we have a disconnecthandler\n      return self.s.disconnectHandler.add(op, ns, ops, options, callback);\n    } else if (!willRetryWrite) {\n      // No server returned we had an error\n      return callback(new MongoError('no primary server found'));\n    }\n  }\n\n  const handler = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newArgs = Object.assign({}, args, { retrying: true });\n      return executeWriteOperation(newArgs, options, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (self.s.replicaSetState.primary) {\n      self.s.replicaSetState.remove(self.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  if (callback.operationId) {\n    handler.operationId = callback.operationId;\n  }\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  self.s.replicaSetState.primary[op](ns, ops, options, handler);\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.insert = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'insert', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.update = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'update', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.remove = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'remove', ns, ops }, options, callback);\n};\n\nconst RETRYABLE_WRITE_OPERATIONS = ['findAndModify', 'insert', 'update', 'delete'];\n\nfunction isWriteCommand(command) {\n  return RETRYABLE_WRITE_OPERATIONS.some(op => command[op]);\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.command = function(ns, cmd, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Establish readPreference\n  var readPreference = options.readPreference ? options.readPreference : ReadPreference.primary;\n\n  // If the readPreference is primary and we have no primary, store it\n  if (\n    readPreference.preference === 'primary' &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference === 'secondary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference !== 'primary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // Pick a server\n  var server = this.s.replicaSetState.pickServer(readPreference);\n  // We received an error, return it\n  if (!(server instanceof Server)) return callback(server);\n  // Emit debug event\n  if (self.s.debug) self.emit('pickedServer', ReadPreference.primary, server);\n\n  // No server returned we had an error\n  if (server == null) {\n    return callback(\n      new MongoError(\n        f('no server found that matches the provided readPreference %s', readPreference)\n      )\n    );\n  }\n\n  const willRetryWrite =\n    !options.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction() &&\n    isWriteCommand(cmd);\n\n  const cb = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newOptions = Object.assign({}, options, { retrying: true });\n      return this.command(ns, cmd, newOptions, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (this.s.replicaSetState.primary) {\n      this.s.replicaSetState.remove(this.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  // Execute the command\n  server.command(ns, cmd, options, cb);\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nReplSet.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(this.s.bson, ns, cmd, options, topology, this.s.options);\n};\n\n/**\n * A replset connect event, used to verify that the connection is up and running\n *\n * @event ReplSet#connect\n * @type {ReplSet}\n */\n\n/**\n * A replset reconnect event, used to verify that the topology reconnected\n *\n * @event ReplSet#reconnect\n * @type {ReplSet}\n */\n\n/**\n * A replset fullsetup event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#fullsetup\n * @type {ReplSet}\n */\n\n/**\n * A replset all event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#all\n * @type {ReplSet}\n */\n\n/**\n * A replset failed event, used to signal that initial replset connection failed.\n *\n * @event ReplSet#failed\n * @type {ReplSet}\n */\n\n/**\n * A server member left the replicaset\n *\n * @event ReplSet#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the replicaset\n *\n * @event ReplSet#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event ReplSet#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event ReplSet#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event ReplSet#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event ReplSet#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event ReplSet#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event ReplSet#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event ReplSet#serverHeartbeatStarted\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event ReplSet#serverHeartbeatFailed\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event ReplSet#serverHeartbeatSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event ReplSet#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event ReplSet#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event ReplSet#commandFailed\n * @type {object}\n */\n\nmodule.exports = ReplSet;\n"},"lineCount":1509}},"error":null,"hash":"41e8d5b75416b5262a2960d559e76980","cacheData":{"env":{}}}