pipeline {
    agent {
        node {
            label 'linux'
        }
    }
    stages {
        stage('Preparation') {
            steps {
                // Git repository
                git 'scarlet:/projects.git/projects/dgiini'
            }
        }
        stage('checout from git') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/dev']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [[$class: 'CleanBeforeCheckout'], 
                        [$class: 'CloneOption', noTags: true, reference: '', shallow: true]],
                    submoduleCfg: [],
                    userRemoteConfigs: [[
                        credentialsId: '886c7666-4207-4fed-9574-9cb2b0f4eca6',
                        url: 'ssh://jenkins@scarlet/projects.git/projects/dgiini'
                    ]
                ]])
            }
        }
        stage('Build') {
            parallel {
                stage('Build web') {
                    steps {
                        sh '''
                            cd ${WORKSPACE}/web
                            export PATH=$PATH:/home/jenkins/.npm-global/bin # use by other script
                            yarn
                            yarn build-docker
                            ssh jenkins@scarlet "mkdir -p ~/release/release_${BUILD_NUMBER}/"
                            scp -r ${WORKSPACE}/web/dist/* jenkins@scarlet:~/release/release_${BUILD_NUMBER}/
                            scp -r ${WORKSPACE}/deploy jenkins@scarlet:~/release/release_${BUILD_NUMBER}/
                        '''
                    }
                    post {
                        always {
                            echo 'Angular build complete'
                        }
                    }
                }
                stage('Build task_api') {
                    steps {
                        sh '''
                            cd ${WORKSPACE}/ms
                            export PATH=$PATH:/home/jenkins/.npm-global/bin
                            yarn
                            yarn build-task
                            cp ${WORKSPACE}/ms/dependency.json dist/mstask/package.json
                            ssh jenkins@scarlet "mkdir -p ~/release/release_${BUILD_NUMBER}/"
                            scp -r ${WORKSPACE}/ms/dist/mstask jenkins@scarlet:~/release/release_${BUILD_NUMBER}/
                        '''
                    }
                    post {
                        always {
                            echo 'Task Api build complete!'
                        }
                    }
                }
                stage('Build auth_api') {
                    steps {
                        sh '''
                            cd ${WORKSPACE}/ms
                            export PATH=$PATH:/home/jenkins/.npm-global/bin
                            yarn
                            yarn build-auth
                            cp ${WORKSPACE}/ms/dependency.json dist/msauth/package.json
                            ssh jenkins@scarlet "mkdir -p ~/release/release_${BUILD_NUMBER}/"
                            scp -r ${WORKSPACE}/ms/dist/msauth jenkins@scarlet:~/release/release_${BUILD_NUMBER}/
                        '''
                    }
                    post {
                        always {
                            echo 'Auth Api build complete!'
                        }
                    }
                }
                stage('Build msg_api') {
                    steps {
                        sh '''
                            cd ${WORKSPACE}/ms
                            export PATH=$PATH:/home/jenkins/.npm-global/bin
                            yarn
                            yarn build-msg
                            cp ${WORKSPACE}/ms/dependency.json dist/msmsg/package.json
                            ssh jenkins@scarlet "mkdir -p ~/release/release_${BUILD_NUMBER}/"
                            scp -r ${WORKSPACE}/ms/dist/msmsg jenkins@scarlet:~/release/release_${BUILD_NUMBER}/
                        '''
                    }
                    post {
                        always {
                            echo 'Msg Api build complete!'
                        }
                    }
                }
            }
        }
    }
}