{"id":"../node_modules/mongodb-core/lib/topologies/replset_state.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"util","loc":{"line":4,"column":14},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset_state.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/node-libs-browser/node_modules/util/util.js"},{"name":"./shared","loc":{"line":5,"column":17},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset_state.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js"},{"name":"events","loc":{"line":6,"column":25},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset_state.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/node-libs-browser/node_modules/events/events.js"},{"name":"../connection/logger","loc":{"line":7,"column":19},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset_state.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/connection/logger.js"},{"name":"./read_preference","loc":{"line":8,"column":27},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset_state.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/read_preference.js"},{"name":"../error","loc":{"line":9,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset_state.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"safe-buffer","loc":{"line":10,"column":19},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/replset_state.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/safe-buffer/index.js"}],"generated":{"js":"\n'use strict';\n\nvar inherits = require('util').inherits,\n  f = require('util').format,\n  diff = require('./shared').diff,\n  EventEmitter = require('events').EventEmitter,\n  Logger = require('../connection/logger'),\n  ReadPreference = require('./read_preference'),\n  MongoError = require('../error').MongoError,\n  Buffer = require('safe-buffer').Buffer;\n\nvar TopologyType = {\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown'\n};\n\nvar ServerType = {\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown'\n};\n\nvar ReplSetState = function(options) {\n  options = options || {};\n  // Add event listener\n  EventEmitter.call(this);\n  // Topology state\n  this.topologyType = TopologyType.ReplicaSetNoPrimary;\n  this.setName = options.setName;\n\n  // Server set\n  this.set = {};\n\n  // Unpacked options\n  this.id = options.id;\n  this.setName = options.setName;\n\n  // Replicaset logger\n  this.logger = options.logger || Logger('ReplSet', options);\n\n  // Server selection index\n  this.index = 0;\n  // Acceptable latency\n  this.acceptableLatency = options.acceptableLatency || 15;\n\n  // heartbeatFrequencyMS\n  this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 10000;\n\n  // Server side\n  this.primary = null;\n  this.secondaries = [];\n  this.arbiters = [];\n  this.passives = [];\n  this.ghosts = [];\n  // Current unknown hosts\n  this.unknownServers = [];\n  // In set status\n  this.set = {};\n  // Status\n  this.maxElectionId = null;\n  this.maxSetVersion = 0;\n  // Description of the Replicaset\n  this.replicasetDescription = {\n    topologyType: 'Unknown',\n    servers: []\n  };\n\n  this.logicalSessionTimeoutMinutes = undefined;\n};\n\ninherits(ReplSetState, EventEmitter);\n\nReplSetState.prototype.hasPrimaryAndSecondary = function() {\n  return this.primary != null && this.secondaries.length > 0;\n};\n\nReplSetState.prototype.hasPrimaryOrSecondary = function() {\n  return this.hasPrimary() || this.hasSecondary();\n};\n\nReplSetState.prototype.hasPrimary = function() {\n  return this.primary != null;\n};\n\nReplSetState.prototype.hasSecondary = function() {\n  return this.secondaries.length > 0;\n};\n\nReplSetState.prototype.get = function(host) {\n  var servers = this.allServers();\n\n  for (var i = 0; i < servers.length; i++) {\n    if (servers[i].name.toLowerCase() === host.toLowerCase()) {\n      return servers[i];\n    }\n  }\n\n  return null;\n};\n\nReplSetState.prototype.allServers = function(options) {\n  options = options || {};\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  if (!options.ignoreArbiters) servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n  return servers;\n};\n\nReplSetState.prototype.destroy = function(options, callback) {\n  const serversToDestroy = this.secondaries\n    .concat(this.arbiters)\n    .concat(this.passives)\n    .concat(this.ghosts);\n  if (this.primary) serversToDestroy.push(this.primary);\n\n  let serverCount = serversToDestroy.length;\n  const serverDestroyed = () => {\n    serverCount--;\n    if (serverCount > 0) {\n      return;\n    }\n\n    // Clear out the complete state\n    this.secondaries = [];\n    this.arbiters = [];\n    this.passives = [];\n    this.ghosts = [];\n    this.unknownServers = [];\n    this.set = {};\n    this.primary = null;\n\n    // Emit the topology changed\n    emitTopologyDescriptionChanged(this);\n\n    if (typeof callback === 'function') {\n      callback(null, null);\n    }\n  };\n\n  if (serverCount === 0) {\n    serverDestroyed();\n    return;\n  }\n\n  serversToDestroy.forEach(server => server.destroy(options, serverDestroyed));\n};\n\nReplSetState.prototype.remove = function(server, options) {\n  options = options || {};\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  // Only remove if the current server is not connected\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n\n  // Check if it's active and this is just a failed connection attempt\n  for (var i = 0; i < servers.length; i++) {\n    if (\n      !options.force &&\n      servers[i].equals(server) &&\n      servers[i].isConnected &&\n      servers[i].isConnected()\n    ) {\n      return;\n    }\n  }\n\n  // If we have it in the set remove it\n  if (this.set[serverName]) {\n    this.set[serverName].type = ServerType.Unknown;\n    this.set[serverName].electionId = null;\n    this.set[serverName].setName = null;\n    this.set[serverName].setVersion = null;\n  }\n\n  // Remove type\n  var removeType = null;\n\n  // Remove from any lists\n  if (this.primary && this.primary.equals(server)) {\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    removeType = 'primary';\n  }\n\n  // Remove from any other server lists\n  removeType = removeFrom(server, this.secondaries) ? 'secondary' : removeType;\n  removeType = removeFrom(server, this.arbiters) ? 'arbiter' : removeType;\n  removeType = removeFrom(server, this.passives) ? 'secondary' : removeType;\n  removeFrom(server, this.ghosts);\n  removeFrom(server, this.unknownServers);\n\n  // Push to unknownServers\n  this.unknownServers.push(serverName);\n\n  // Do we have a removeType\n  if (removeType) {\n    this.emit('left', removeType, server);\n  }\n};\n\nconst isArbiter = ismaster => ismaster.arbiterOnly && ismaster.setName;\n\nReplSetState.prototype.update = function(server) {\n  var self = this;\n  // Get the current ismaster\n  var ismaster = server.lastIsMaster();\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  //\n  // Add any hosts\n  //\n  if (ismaster) {\n    // Join all the possible new hosts\n    var hosts = Array.isArray(ismaster.hosts) ? ismaster.hosts : [];\n    hosts = hosts.concat(Array.isArray(ismaster.arbiters) ? ismaster.arbiters : []);\n    hosts = hosts.concat(Array.isArray(ismaster.passives) ? ismaster.passives : []);\n    hosts = hosts.map(function(s) {\n      return s.toLowerCase();\n    });\n\n    // Add all hosts as unknownServers\n    for (var i = 0; i < hosts.length; i++) {\n      // Add to the list of unknown server\n      if (\n        this.unknownServers.indexOf(hosts[i]) === -1 &&\n        (!this.set[hosts[i]] || this.set[hosts[i]].type === ServerType.Unknown)\n      ) {\n        this.unknownServers.push(hosts[i].toLowerCase());\n      }\n\n      if (!this.set[hosts[i]]) {\n        this.set[hosts[i]] = {\n          type: ServerType.Unknown,\n          electionId: null,\n          setName: null,\n          setVersion: null\n        };\n      }\n    }\n  }\n\n  //\n  // Unknown server\n  //\n  if (!ismaster && !inList(ismaster, server, this.unknownServers)) {\n    self.set[serverName] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n    // Update set information about the server instance\n    self.set[serverName].type = ServerType.Unknown;\n    self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n    self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n    self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n\n    if (self.unknownServers.indexOf(server.name) === -1) {\n      self.unknownServers.push(serverName);\n    }\n\n    // Set the topology\n    return false;\n  }\n\n  // Update logicalSessionTimeoutMinutes\n  if (ismaster.logicalSessionTimeoutMinutes !== undefined && !isArbiter(ismaster)) {\n    if (\n      self.logicalSessionTimeoutMinutes === undefined ||\n      ismaster.logicalSessionTimeoutMinutes === null\n    ) {\n      self.logicalSessionTimeoutMinutes = ismaster.logicalSessionTimeoutMinutes;\n    } else {\n      self.logicalSessionTimeoutMinutes = Math.min(\n        self.logicalSessionTimeoutMinutes,\n        ismaster.logicalSessionTimeoutMinutes\n      );\n    }\n  }\n\n  //\n  // Is this a mongos\n  //\n  if (ismaster && ismaster.msg === 'isdbgrid') {\n    if (this.primary && this.primary.name === serverName) {\n      this.primary = null;\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    return false;\n  }\n\n  // A RSGhost instance\n  if (ismaster.isreplicaset) {\n    self.set[serverName] = {\n      type: ServerType.RSGhost,\n      setVersion: null,\n      electionId: null,\n      setName: ismaster.setName\n    };\n\n    if (this.primary && this.primary.name === serverName) {\n      this.primary = null;\n    }\n\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n\n    // Set the topology\n    return false;\n  }\n\n  // A RSOther instance\n  if (\n    (ismaster.setName && ismaster.hidden) ||\n    (ismaster.setName &&\n      !ismaster.ismaster &&\n      !ismaster.secondary &&\n      !ismaster.arbiterOnly &&\n      !ismaster.passive)\n  ) {\n    self.set[serverName] = {\n      type: ServerType.RSOther,\n      setVersion: null,\n      electionId: null,\n      setName: ismaster.setName\n    };\n\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    return false;\n  }\n\n  //\n  // Standalone server, destroy and return\n  //\n  if (ismaster && ismaster.ismaster && !ismaster.setName) {\n    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.Unknown;\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // Server in maintanance mode\n  //\n  if (ismaster && !ismaster.ismaster && !ismaster.secondary && !ismaster.arbiterOnly) {\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // If the .me field does not match the passed in server\n  //\n  if (ismaster.me && ismaster.me.toLowerCase() !== serverName) {\n    if (this.logger.isWarn()) {\n      this.logger.warn(\n        f(\n          'the seedlist server was removed due to its address %s not matching its ismaster.me address %s',\n          server.name,\n          ismaster.me\n        )\n      );\n    }\n\n    // Delete from the set\n    delete this.set[serverName];\n    // Delete unknown servers\n    removeFrom(server, self.unknownServers);\n\n    // Destroy the instance\n    server.destroy();\n\n    // Set the type of topology we have\n    if (this.primary && !this.primary.equals(server)) {\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    //\n    // We have a potential primary\n    //\n    if (!this.primary && ismaster.primary) {\n      this.set[ismaster.primary.toLowerCase()] = {\n        type: ServerType.PossiblePrimary,\n        setName: null,\n        electionId: null,\n        setVersion: null\n      };\n    }\n\n    return false;\n  }\n\n  //\n  // Primary handling\n  //\n  if (!this.primary && ismaster.ismaster && ismaster.setName) {\n    var ismasterElectionId = server.lastIsMaster().electionId;\n    if (this.setName && this.setName !== ismaster.setName) {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      return new MongoError(\n        f(\n          'setName from ismaster does not match provided connection setName [%s] != [%s]',\n          ismaster.setName,\n          this.setName\n        )\n      );\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      var result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n      // Get the electionIds\n      var ismasterSetVersion = server.lastIsMaster().setVersion;\n\n      if (result === 1) {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n        return false;\n      } else if (result === 0 && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          this.topologyType = TopologyType.ReplicaSetNoPrimary;\n          return false;\n        }\n      }\n\n      this.maxSetVersion = ismasterSetVersion;\n      this.maxElectionId = ismasterElectionId;\n    }\n\n    // Hande normalization of server names\n    var normalizedHosts = ismaster.hosts.map(function(x) {\n      return x.toLowerCase();\n    });\n    var locationIndex = normalizedHosts.indexOf(serverName);\n\n    // Validate that the server exists in the host list\n    if (locationIndex !== -1) {\n      self.primary = server;\n      self.set[serverName] = {\n        type: ServerType.RSPrimary,\n        setVersion: ismaster.setVersion,\n        electionId: ismaster.electionId,\n        setName: ismaster.setName\n      };\n\n      // Set the topology\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      if (ismaster.setName) this.setName = ismaster.setName;\n      removeFrom(server, self.unknownServers);\n      removeFrom(server, self.secondaries);\n      removeFrom(server, self.passives);\n      self.emit('joined', 'primary', server);\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    emitTopologyDescriptionChanged(self);\n    return true;\n  } else if (ismaster.ismaster && ismaster.setName) {\n    // Get the electionIds\n    var currentElectionId = self.set[self.primary.name.toLowerCase()].electionId;\n    var currentSetVersion = self.set[self.primary.name.toLowerCase()].setVersion;\n    var currentSetName = self.set[self.primary.name.toLowerCase()].setName;\n    ismasterElectionId = server.lastIsMaster().electionId;\n    ismasterSetVersion = server.lastIsMaster().setVersion;\n    var ismasterSetName = server.lastIsMaster().setName;\n\n    // Is it the same server instance\n    if (this.primary.equals(server) && currentSetName === ismasterSetName) {\n      return false;\n    }\n\n    // If we do not have the same rs name\n    if (currentSetName && currentSetName !== ismasterSetName) {\n      if (!this.primary.equals(server)) {\n        this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      } else {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      }\n\n      return false;\n    }\n\n    // Check if we need to replace the server\n    if (currentElectionId && ismasterElectionId) {\n      result = compareObjectIds(currentElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion > ismasterSetVersion) {\n        return false;\n      }\n    } else if (!currentElectionId && ismasterElectionId && ismasterSetVersion) {\n      if (ismasterSetVersion < this.maxSetVersion) {\n        return false;\n      }\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      } else {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      }\n\n      this.maxElectionId = ismasterElectionId;\n      this.maxSetVersion = ismasterSetVersion;\n    } else {\n      this.maxSetVersion = ismasterSetVersion;\n    }\n\n    // Modify the entry to unknown\n    self.set[self.primary.name.toLowerCase()] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n\n    // Signal primary left\n    self.emit('left', 'primary', this.primary);\n    // Destroy the instance\n    self.primary.destroy();\n    // Set the new instance\n    self.primary = server;\n    // Set the set information\n    self.set[serverName] = {\n      type: ServerType.RSPrimary,\n      setVersion: ismaster.setVersion,\n      electionId: ismaster.electionId,\n      setName: ismaster.setName\n    };\n\n    // Set the topology\n    this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    removeFrom(server, self.secondaries);\n    removeFrom(server, self.passives);\n    self.emit('joined', 'primary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  // A possible instance\n  if (!this.primary && ismaster.primary) {\n    self.set[ismaster.primary.toLowerCase()] = {\n      type: ServerType.PossiblePrimary,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n  }\n\n  //\n  // Secondary handling\n  //\n  if (\n    ismaster.secondary &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.secondaries) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.secondaries);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy();\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    // Emit secondary joined replicaset\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Arbiter handling\n  //\n  if (\n    isArbiter(ismaster) &&\n    !inList(ismaster, server, this.arbiters) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSArbiter, ismaster, server, this.arbiters);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    self.emit('joined', 'arbiter', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Passive handling\n  //\n  if (\n    ismaster.passive &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.passives) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.passives);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy();\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Remove the primary\n  //\n  if (this.set[serverName] && this.set[serverName].type === ServerType.RSPrimary) {\n    self.emit('left', 'primary', this.primary);\n    this.primary.destroy();\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    return false;\n  }\n\n  this.topologyType = this.primary\n    ? TopologyType.ReplicaSetWithPrimary\n    : TopologyType.ReplicaSetNoPrimary;\n  return false;\n};\n\n/**\n * Recalculate single server max staleness\n * @method\n */\nReplSetState.prototype.updateServerMaxStaleness = function(server, haInterval) {\n  // Locate the max secondary lastwrite\n  var max = 0;\n  // Go over all secondaries\n  for (var i = 0; i < this.secondaries.length; i++) {\n    max = Math.max(max, this.secondaries[i].lastWriteDate);\n  }\n\n  // Perform this servers staleness calculation\n  if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary && this.hasPrimary()) {\n    server.staleness =\n      server.lastUpdateTime -\n      server.lastWriteDate -\n      (this.primary.lastUpdateTime - this.primary.lastWriteDate) +\n      haInterval;\n  } else if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary) {\n    server.staleness = max - server.lastWriteDate + haInterval;\n  }\n};\n\n/**\n * Recalculate all the staleness values for secodaries\n * @method\n */\nReplSetState.prototype.updateSecondariesMaxStaleness = function(haInterval) {\n  for (var i = 0; i < this.secondaries.length; i++) {\n    this.updateServerMaxStaleness(this.secondaries[i], haInterval);\n  }\n};\n\n/**\n * Pick a server by the passed in ReadPreference\n * @method\n * @param {ReadPreference} readPreference The ReadPreference instance to use\n */\nReplSetState.prototype.pickServer = function(readPreference) {\n  // If no read Preference set to primary by default\n  readPreference = readPreference || ReadPreference.primary;\n\n  // maxStalenessSeconds is not allowed with a primary read\n  if (readPreference.preference === 'primary' && readPreference.maxStalenessSeconds != null) {\n    return new MongoError('primary readPreference incompatible with maxStalenessSeconds');\n  }\n\n  // Check if we have any non compatible servers for maxStalenessSeconds\n  var allservers = this.primary ? [this.primary] : [];\n  allservers = allservers.concat(this.secondaries);\n\n  // Does any of the servers not support the right wire protocol version\n  // for maxStalenessSeconds when maxStalenessSeconds specified on readPreference. Then error out\n  if (readPreference.maxStalenessSeconds != null) {\n    for (var i = 0; i < allservers.length; i++) {\n      if (allservers[i].ismaster.maxWireVersion < 5) {\n        return new MongoError(\n          'maxStalenessSeconds not supported by at least one of the replicaset members'\n        );\n      }\n    }\n  }\n\n  // Do we have the nearest readPreference\n  if (readPreference.preference === 'nearest' && readPreference.maxStalenessSeconds == null) {\n    return pickNearest(this, readPreference);\n  } else if (\n    readPreference.preference === 'nearest' &&\n    readPreference.maxStalenessSeconds != null\n  ) {\n    return pickNearestMaxStalenessSeconds(this, readPreference);\n  }\n\n  // Get all the secondaries\n  var secondaries = this.secondaries;\n\n  // Check if we can satisfy and of the basic read Preferences\n  if (readPreference.equals(ReadPreference.secondary) && secondaries.length === 0) {\n    return new MongoError('no secondary server available');\n  }\n\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) &&\n    secondaries.length === 0 &&\n    this.primary == null\n  ) {\n    return new MongoError('no secondary or primary server available');\n  }\n\n  if (readPreference.equals(ReadPreference.primary) && this.primary == null) {\n    return new MongoError('no primary server available');\n  }\n\n  // Secondary preferred or just secondaries\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) ||\n    readPreference.equals(ReadPreference.secondary)\n  ) {\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      // Pick nearest of any other servers available\n      var server = pickNearest(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      // Pick nearest of any other servers available\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    }\n\n    if (readPreference.equals(ReadPreference.secondaryPreferred)) {\n      return this.primary;\n    }\n\n    return null;\n  }\n\n  // Primary preferred\n  if (readPreference.equals(ReadPreference.primaryPreferred)) {\n    server = null;\n\n    // We prefer the primary if it's available\n    if (this.primary) {\n      return this.primary;\n    }\n\n    // Pick a secondary\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      server = pickNearest(this, readPreference);\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n    }\n\n    //  Did we find a server\n    if (server) return server;\n  }\n\n  // Return the primary\n  return this.primary;\n};\n\n//\n// Filter serves by tags\nvar filterByTags = function(readPreference, servers) {\n  if (readPreference.tags == null) return servers;\n  var filteredServers = [];\n  var tagsArray = Array.isArray(readPreference.tags) ? readPreference.tags : [readPreference.tags];\n\n  // Iterate over the tags\n  for (var j = 0; j < tagsArray.length; j++) {\n    var tags = tagsArray[j];\n\n    // Iterate over all the servers\n    for (var i = 0; i < servers.length; i++) {\n      var serverTag = servers[i].lastIsMaster().tags || {};\n\n      // Did we find the a matching server\n      var found = true;\n      // Check if the server is valid\n      for (var name in tags) {\n        if (serverTag[name] !== tags[name]) {\n          found = false;\n        }\n      }\n\n      // Add to candidate list\n      if (found) {\n        filteredServers.push(servers[i]);\n      }\n    }\n  }\n\n  // Returned filtered servers\n  return filteredServers;\n};\n\nfunction pickNearestMaxStalenessSeconds(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Get the maxStalenessMS\n  var maxStalenessMS = readPreference.maxStalenessSeconds * 1000;\n\n  // Check if the maxStalenessMS > 90 seconds\n  if (maxStalenessMS < 90 * 1000) {\n    return new MongoError('maxStalenessSeconds must be set to at least 90 seconds');\n  }\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (self.primary && servers.length === 0 && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.staleness <= maxStalenessMS;\n  });\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    return a.lastIsMasterMS - b.lastIsMasterMS;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction pickNearest(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (servers.length === 0 && self.primary && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    return a.lastIsMasterMS - b.lastIsMasterMS;\n  });\n\n  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)\n  var lowest = servers.length > 0 ? servers[0].lastIsMasterMS : 0;\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.lastIsMasterMS <= lowest + self.acceptableLatency;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction inList(ismaster, server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i] && list[i].name && list[i].name.toLowerCase() === server.name.toLowerCase())\n      return true;\n  }\n\n  return false;\n}\n\nfunction addToList(self, type, ismaster, server, list) {\n  var serverName = server.name.toLowerCase();\n  // Update set information about the server instance\n  self.set[serverName].type = type;\n  self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n  self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n  self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n  // Add to the list\n  list.push(server);\n}\n\nfunction compareObjectIds(id1, id2) {\n  var a = Buffer.from(id1.toHexString(), 'hex');\n  var b = Buffer.from(id2.toHexString(), 'hex');\n\n  if (a === b) {\n    return 0;\n  }\n\n  if (typeof Buffer.compare === 'function') {\n    return Buffer.compare(a, b);\n  }\n\n  var x = a.length;\n  var y = b.length;\n  var len = Math.min(x, y);\n\n  for (var i = 0; i < len; i++) {\n    if (a[i] !== b[i]) {\n      break;\n    }\n  }\n\n  if (i !== len) {\n    x = a[i];\n    y = b[i];\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0;\n}\n\nfunction removeFrom(server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].equals && list[i].equals(server)) {\n      list.splice(i, 1);\n      return true;\n    } else if (typeof list[i] === 'string' && list[i].toLowerCase() === server.name.toLowerCase()) {\n      list.splice(i, 1);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction emitTopologyDescriptionChanged(self) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    var topology = 'Unknown';\n    var setName = self.setName;\n\n    if (self.hasPrimaryAndSecondary()) {\n      topology = 'ReplicaSetWithPrimary';\n    } else if (!self.hasPrimary() && self.hasSecondary()) {\n      topology = 'ReplicaSetNoPrimary';\n    }\n\n    // Generate description\n    var description = {\n      topologyType: topology,\n      setName: setName,\n      servers: []\n    };\n\n    // Add the primary to the list\n    if (self.hasPrimary()) {\n      var desc = self.primary.getDescription();\n      desc.type = 'RSPrimary';\n      description.servers.push(desc);\n    }\n\n    // Add all the secondaries\n    description.servers = description.servers.concat(\n      self.secondaries.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Add all the arbiters\n    description.servers = description.servers.concat(\n      self.arbiters.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSArbiter';\n        return description;\n      })\n    );\n\n    // Add all the passives\n    description.servers = description.servers.concat(\n      self.passives.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Get the diff\n    var diffResult = diff(self.replicasetDescription, description);\n\n    // Create the result\n    var result = {\n      topologyId: self.id,\n      previousDescription: self.replicasetDescription,\n      newDescription: description,\n      diff: diffResult\n    };\n\n    // Emit the topologyDescription change\n    // if(diffResult.servers.length > 0) {\n    self.emit('topologyDescriptionChanged', result);\n    // }\n\n    // Set the new description\n    self.replicasetDescription = description;\n  }\n}\n\nmodule.exports = ReplSetState;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/replset_state.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/topologies/replset_state.js":"'use strict';\n\nvar inherits = require('util').inherits,\n  f = require('util').format,\n  diff = require('./shared').diff,\n  EventEmitter = require('events').EventEmitter,\n  Logger = require('../connection/logger'),\n  ReadPreference = require('./read_preference'),\n  MongoError = require('../error').MongoError,\n  Buffer = require('safe-buffer').Buffer;\n\nvar TopologyType = {\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown'\n};\n\nvar ServerType = {\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown'\n};\n\nvar ReplSetState = function(options) {\n  options = options || {};\n  // Add event listener\n  EventEmitter.call(this);\n  // Topology state\n  this.topologyType = TopologyType.ReplicaSetNoPrimary;\n  this.setName = options.setName;\n\n  // Server set\n  this.set = {};\n\n  // Unpacked options\n  this.id = options.id;\n  this.setName = options.setName;\n\n  // Replicaset logger\n  this.logger = options.logger || Logger('ReplSet', options);\n\n  // Server selection index\n  this.index = 0;\n  // Acceptable latency\n  this.acceptableLatency = options.acceptableLatency || 15;\n\n  // heartbeatFrequencyMS\n  this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 10000;\n\n  // Server side\n  this.primary = null;\n  this.secondaries = [];\n  this.arbiters = [];\n  this.passives = [];\n  this.ghosts = [];\n  // Current unknown hosts\n  this.unknownServers = [];\n  // In set status\n  this.set = {};\n  // Status\n  this.maxElectionId = null;\n  this.maxSetVersion = 0;\n  // Description of the Replicaset\n  this.replicasetDescription = {\n    topologyType: 'Unknown',\n    servers: []\n  };\n\n  this.logicalSessionTimeoutMinutes = undefined;\n};\n\ninherits(ReplSetState, EventEmitter);\n\nReplSetState.prototype.hasPrimaryAndSecondary = function() {\n  return this.primary != null && this.secondaries.length > 0;\n};\n\nReplSetState.prototype.hasPrimaryOrSecondary = function() {\n  return this.hasPrimary() || this.hasSecondary();\n};\n\nReplSetState.prototype.hasPrimary = function() {\n  return this.primary != null;\n};\n\nReplSetState.prototype.hasSecondary = function() {\n  return this.secondaries.length > 0;\n};\n\nReplSetState.prototype.get = function(host) {\n  var servers = this.allServers();\n\n  for (var i = 0; i < servers.length; i++) {\n    if (servers[i].name.toLowerCase() === host.toLowerCase()) {\n      return servers[i];\n    }\n  }\n\n  return null;\n};\n\nReplSetState.prototype.allServers = function(options) {\n  options = options || {};\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  if (!options.ignoreArbiters) servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n  return servers;\n};\n\nReplSetState.prototype.destroy = function(options, callback) {\n  const serversToDestroy = this.secondaries\n    .concat(this.arbiters)\n    .concat(this.passives)\n    .concat(this.ghosts);\n  if (this.primary) serversToDestroy.push(this.primary);\n\n  let serverCount = serversToDestroy.length;\n  const serverDestroyed = () => {\n    serverCount--;\n    if (serverCount > 0) {\n      return;\n    }\n\n    // Clear out the complete state\n    this.secondaries = [];\n    this.arbiters = [];\n    this.passives = [];\n    this.ghosts = [];\n    this.unknownServers = [];\n    this.set = {};\n    this.primary = null;\n\n    // Emit the topology changed\n    emitTopologyDescriptionChanged(this);\n\n    if (typeof callback === 'function') {\n      callback(null, null);\n    }\n  };\n\n  if (serverCount === 0) {\n    serverDestroyed();\n    return;\n  }\n\n  serversToDestroy.forEach(server => server.destroy(options, serverDestroyed));\n};\n\nReplSetState.prototype.remove = function(server, options) {\n  options = options || {};\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  // Only remove if the current server is not connected\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n\n  // Check if it's active and this is just a failed connection attempt\n  for (var i = 0; i < servers.length; i++) {\n    if (\n      !options.force &&\n      servers[i].equals(server) &&\n      servers[i].isConnected &&\n      servers[i].isConnected()\n    ) {\n      return;\n    }\n  }\n\n  // If we have it in the set remove it\n  if (this.set[serverName]) {\n    this.set[serverName].type = ServerType.Unknown;\n    this.set[serverName].electionId = null;\n    this.set[serverName].setName = null;\n    this.set[serverName].setVersion = null;\n  }\n\n  // Remove type\n  var removeType = null;\n\n  // Remove from any lists\n  if (this.primary && this.primary.equals(server)) {\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    removeType = 'primary';\n  }\n\n  // Remove from any other server lists\n  removeType = removeFrom(server, this.secondaries) ? 'secondary' : removeType;\n  removeType = removeFrom(server, this.arbiters) ? 'arbiter' : removeType;\n  removeType = removeFrom(server, this.passives) ? 'secondary' : removeType;\n  removeFrom(server, this.ghosts);\n  removeFrom(server, this.unknownServers);\n\n  // Push to unknownServers\n  this.unknownServers.push(serverName);\n\n  // Do we have a removeType\n  if (removeType) {\n    this.emit('left', removeType, server);\n  }\n};\n\nconst isArbiter = ismaster => ismaster.arbiterOnly && ismaster.setName;\n\nReplSetState.prototype.update = function(server) {\n  var self = this;\n  // Get the current ismaster\n  var ismaster = server.lastIsMaster();\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  //\n  // Add any hosts\n  //\n  if (ismaster) {\n    // Join all the possible new hosts\n    var hosts = Array.isArray(ismaster.hosts) ? ismaster.hosts : [];\n    hosts = hosts.concat(Array.isArray(ismaster.arbiters) ? ismaster.arbiters : []);\n    hosts = hosts.concat(Array.isArray(ismaster.passives) ? ismaster.passives : []);\n    hosts = hosts.map(function(s) {\n      return s.toLowerCase();\n    });\n\n    // Add all hosts as unknownServers\n    for (var i = 0; i < hosts.length; i++) {\n      // Add to the list of unknown server\n      if (\n        this.unknownServers.indexOf(hosts[i]) === -1 &&\n        (!this.set[hosts[i]] || this.set[hosts[i]].type === ServerType.Unknown)\n      ) {\n        this.unknownServers.push(hosts[i].toLowerCase());\n      }\n\n      if (!this.set[hosts[i]]) {\n        this.set[hosts[i]] = {\n          type: ServerType.Unknown,\n          electionId: null,\n          setName: null,\n          setVersion: null\n        };\n      }\n    }\n  }\n\n  //\n  // Unknown server\n  //\n  if (!ismaster && !inList(ismaster, server, this.unknownServers)) {\n    self.set[serverName] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n    // Update set information about the server instance\n    self.set[serverName].type = ServerType.Unknown;\n    self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n    self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n    self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n\n    if (self.unknownServers.indexOf(server.name) === -1) {\n      self.unknownServers.push(serverName);\n    }\n\n    // Set the topology\n    return false;\n  }\n\n  // Update logicalSessionTimeoutMinutes\n  if (ismaster.logicalSessionTimeoutMinutes !== undefined && !isArbiter(ismaster)) {\n    if (\n      self.logicalSessionTimeoutMinutes === undefined ||\n      ismaster.logicalSessionTimeoutMinutes === null\n    ) {\n      self.logicalSessionTimeoutMinutes = ismaster.logicalSessionTimeoutMinutes;\n    } else {\n      self.logicalSessionTimeoutMinutes = Math.min(\n        self.logicalSessionTimeoutMinutes,\n        ismaster.logicalSessionTimeoutMinutes\n      );\n    }\n  }\n\n  //\n  // Is this a mongos\n  //\n  if (ismaster && ismaster.msg === 'isdbgrid') {\n    if (this.primary && this.primary.name === serverName) {\n      this.primary = null;\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    return false;\n  }\n\n  // A RSGhost instance\n  if (ismaster.isreplicaset) {\n    self.set[serverName] = {\n      type: ServerType.RSGhost,\n      setVersion: null,\n      electionId: null,\n      setName: ismaster.setName\n    };\n\n    if (this.primary && this.primary.name === serverName) {\n      this.primary = null;\n    }\n\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n\n    // Set the topology\n    return false;\n  }\n\n  // A RSOther instance\n  if (\n    (ismaster.setName && ismaster.hidden) ||\n    (ismaster.setName &&\n      !ismaster.ismaster &&\n      !ismaster.secondary &&\n      !ismaster.arbiterOnly &&\n      !ismaster.passive)\n  ) {\n    self.set[serverName] = {\n      type: ServerType.RSOther,\n      setVersion: null,\n      electionId: null,\n      setName: ismaster.setName\n    };\n\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    return false;\n  }\n\n  //\n  // Standalone server, destroy and return\n  //\n  if (ismaster && ismaster.ismaster && !ismaster.setName) {\n    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.Unknown;\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // Server in maintanance mode\n  //\n  if (ismaster && !ismaster.ismaster && !ismaster.secondary && !ismaster.arbiterOnly) {\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // If the .me field does not match the passed in server\n  //\n  if (ismaster.me && ismaster.me.toLowerCase() !== serverName) {\n    if (this.logger.isWarn()) {\n      this.logger.warn(\n        f(\n          'the seedlist server was removed due to its address %s not matching its ismaster.me address %s',\n          server.name,\n          ismaster.me\n        )\n      );\n    }\n\n    // Delete from the set\n    delete this.set[serverName];\n    // Delete unknown servers\n    removeFrom(server, self.unknownServers);\n\n    // Destroy the instance\n    server.destroy();\n\n    // Set the type of topology we have\n    if (this.primary && !this.primary.equals(server)) {\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    //\n    // We have a potential primary\n    //\n    if (!this.primary && ismaster.primary) {\n      this.set[ismaster.primary.toLowerCase()] = {\n        type: ServerType.PossiblePrimary,\n        setName: null,\n        electionId: null,\n        setVersion: null\n      };\n    }\n\n    return false;\n  }\n\n  //\n  // Primary handling\n  //\n  if (!this.primary && ismaster.ismaster && ismaster.setName) {\n    var ismasterElectionId = server.lastIsMaster().electionId;\n    if (this.setName && this.setName !== ismaster.setName) {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      return new MongoError(\n        f(\n          'setName from ismaster does not match provided connection setName [%s] != [%s]',\n          ismaster.setName,\n          this.setName\n        )\n      );\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      var result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n      // Get the electionIds\n      var ismasterSetVersion = server.lastIsMaster().setVersion;\n\n      if (result === 1) {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n        return false;\n      } else if (result === 0 && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          this.topologyType = TopologyType.ReplicaSetNoPrimary;\n          return false;\n        }\n      }\n\n      this.maxSetVersion = ismasterSetVersion;\n      this.maxElectionId = ismasterElectionId;\n    }\n\n    // Hande normalization of server names\n    var normalizedHosts = ismaster.hosts.map(function(x) {\n      return x.toLowerCase();\n    });\n    var locationIndex = normalizedHosts.indexOf(serverName);\n\n    // Validate that the server exists in the host list\n    if (locationIndex !== -1) {\n      self.primary = server;\n      self.set[serverName] = {\n        type: ServerType.RSPrimary,\n        setVersion: ismaster.setVersion,\n        electionId: ismaster.electionId,\n        setName: ismaster.setName\n      };\n\n      // Set the topology\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      if (ismaster.setName) this.setName = ismaster.setName;\n      removeFrom(server, self.unknownServers);\n      removeFrom(server, self.secondaries);\n      removeFrom(server, self.passives);\n      self.emit('joined', 'primary', server);\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    emitTopologyDescriptionChanged(self);\n    return true;\n  } else if (ismaster.ismaster && ismaster.setName) {\n    // Get the electionIds\n    var currentElectionId = self.set[self.primary.name.toLowerCase()].electionId;\n    var currentSetVersion = self.set[self.primary.name.toLowerCase()].setVersion;\n    var currentSetName = self.set[self.primary.name.toLowerCase()].setName;\n    ismasterElectionId = server.lastIsMaster().electionId;\n    ismasterSetVersion = server.lastIsMaster().setVersion;\n    var ismasterSetName = server.lastIsMaster().setName;\n\n    // Is it the same server instance\n    if (this.primary.equals(server) && currentSetName === ismasterSetName) {\n      return false;\n    }\n\n    // If we do not have the same rs name\n    if (currentSetName && currentSetName !== ismasterSetName) {\n      if (!this.primary.equals(server)) {\n        this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      } else {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      }\n\n      return false;\n    }\n\n    // Check if we need to replace the server\n    if (currentElectionId && ismasterElectionId) {\n      result = compareObjectIds(currentElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion > ismasterSetVersion) {\n        return false;\n      }\n    } else if (!currentElectionId && ismasterElectionId && ismasterSetVersion) {\n      if (ismasterSetVersion < this.maxSetVersion) {\n        return false;\n      }\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      } else {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      }\n\n      this.maxElectionId = ismasterElectionId;\n      this.maxSetVersion = ismasterSetVersion;\n    } else {\n      this.maxSetVersion = ismasterSetVersion;\n    }\n\n    // Modify the entry to unknown\n    self.set[self.primary.name.toLowerCase()] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n\n    // Signal primary left\n    self.emit('left', 'primary', this.primary);\n    // Destroy the instance\n    self.primary.destroy();\n    // Set the new instance\n    self.primary = server;\n    // Set the set information\n    self.set[serverName] = {\n      type: ServerType.RSPrimary,\n      setVersion: ismaster.setVersion,\n      electionId: ismaster.electionId,\n      setName: ismaster.setName\n    };\n\n    // Set the topology\n    this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    removeFrom(server, self.secondaries);\n    removeFrom(server, self.passives);\n    self.emit('joined', 'primary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  // A possible instance\n  if (!this.primary && ismaster.primary) {\n    self.set[ismaster.primary.toLowerCase()] = {\n      type: ServerType.PossiblePrimary,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n  }\n\n  //\n  // Secondary handling\n  //\n  if (\n    ismaster.secondary &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.secondaries) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.secondaries);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy();\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    // Emit secondary joined replicaset\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Arbiter handling\n  //\n  if (\n    isArbiter(ismaster) &&\n    !inList(ismaster, server, this.arbiters) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSArbiter, ismaster, server, this.arbiters);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    self.emit('joined', 'arbiter', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Passive handling\n  //\n  if (\n    ismaster.passive &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.passives) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.passives);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy();\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Remove the primary\n  //\n  if (this.set[serverName] && this.set[serverName].type === ServerType.RSPrimary) {\n    self.emit('left', 'primary', this.primary);\n    this.primary.destroy();\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    return false;\n  }\n\n  this.topologyType = this.primary\n    ? TopologyType.ReplicaSetWithPrimary\n    : TopologyType.ReplicaSetNoPrimary;\n  return false;\n};\n\n/**\n * Recalculate single server max staleness\n * @method\n */\nReplSetState.prototype.updateServerMaxStaleness = function(server, haInterval) {\n  // Locate the max secondary lastwrite\n  var max = 0;\n  // Go over all secondaries\n  for (var i = 0; i < this.secondaries.length; i++) {\n    max = Math.max(max, this.secondaries[i].lastWriteDate);\n  }\n\n  // Perform this servers staleness calculation\n  if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary && this.hasPrimary()) {\n    server.staleness =\n      server.lastUpdateTime -\n      server.lastWriteDate -\n      (this.primary.lastUpdateTime - this.primary.lastWriteDate) +\n      haInterval;\n  } else if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary) {\n    server.staleness = max - server.lastWriteDate + haInterval;\n  }\n};\n\n/**\n * Recalculate all the staleness values for secodaries\n * @method\n */\nReplSetState.prototype.updateSecondariesMaxStaleness = function(haInterval) {\n  for (var i = 0; i < this.secondaries.length; i++) {\n    this.updateServerMaxStaleness(this.secondaries[i], haInterval);\n  }\n};\n\n/**\n * Pick a server by the passed in ReadPreference\n * @method\n * @param {ReadPreference} readPreference The ReadPreference instance to use\n */\nReplSetState.prototype.pickServer = function(readPreference) {\n  // If no read Preference set to primary by default\n  readPreference = readPreference || ReadPreference.primary;\n\n  // maxStalenessSeconds is not allowed with a primary read\n  if (readPreference.preference === 'primary' && readPreference.maxStalenessSeconds != null) {\n    return new MongoError('primary readPreference incompatible with maxStalenessSeconds');\n  }\n\n  // Check if we have any non compatible servers for maxStalenessSeconds\n  var allservers = this.primary ? [this.primary] : [];\n  allservers = allservers.concat(this.secondaries);\n\n  // Does any of the servers not support the right wire protocol version\n  // for maxStalenessSeconds when maxStalenessSeconds specified on readPreference. Then error out\n  if (readPreference.maxStalenessSeconds != null) {\n    for (var i = 0; i < allservers.length; i++) {\n      if (allservers[i].ismaster.maxWireVersion < 5) {\n        return new MongoError(\n          'maxStalenessSeconds not supported by at least one of the replicaset members'\n        );\n      }\n    }\n  }\n\n  // Do we have the nearest readPreference\n  if (readPreference.preference === 'nearest' && readPreference.maxStalenessSeconds == null) {\n    return pickNearest(this, readPreference);\n  } else if (\n    readPreference.preference === 'nearest' &&\n    readPreference.maxStalenessSeconds != null\n  ) {\n    return pickNearestMaxStalenessSeconds(this, readPreference);\n  }\n\n  // Get all the secondaries\n  var secondaries = this.secondaries;\n\n  // Check if we can satisfy and of the basic read Preferences\n  if (readPreference.equals(ReadPreference.secondary) && secondaries.length === 0) {\n    return new MongoError('no secondary server available');\n  }\n\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) &&\n    secondaries.length === 0 &&\n    this.primary == null\n  ) {\n    return new MongoError('no secondary or primary server available');\n  }\n\n  if (readPreference.equals(ReadPreference.primary) && this.primary == null) {\n    return new MongoError('no primary server available');\n  }\n\n  // Secondary preferred or just secondaries\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) ||\n    readPreference.equals(ReadPreference.secondary)\n  ) {\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      // Pick nearest of any other servers available\n      var server = pickNearest(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      // Pick nearest of any other servers available\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    }\n\n    if (readPreference.equals(ReadPreference.secondaryPreferred)) {\n      return this.primary;\n    }\n\n    return null;\n  }\n\n  // Primary preferred\n  if (readPreference.equals(ReadPreference.primaryPreferred)) {\n    server = null;\n\n    // We prefer the primary if it's available\n    if (this.primary) {\n      return this.primary;\n    }\n\n    // Pick a secondary\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      server = pickNearest(this, readPreference);\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n    }\n\n    //  Did we find a server\n    if (server) return server;\n  }\n\n  // Return the primary\n  return this.primary;\n};\n\n//\n// Filter serves by tags\nvar filterByTags = function(readPreference, servers) {\n  if (readPreference.tags == null) return servers;\n  var filteredServers = [];\n  var tagsArray = Array.isArray(readPreference.tags) ? readPreference.tags : [readPreference.tags];\n\n  // Iterate over the tags\n  for (var j = 0; j < tagsArray.length; j++) {\n    var tags = tagsArray[j];\n\n    // Iterate over all the servers\n    for (var i = 0; i < servers.length; i++) {\n      var serverTag = servers[i].lastIsMaster().tags || {};\n\n      // Did we find the a matching server\n      var found = true;\n      // Check if the server is valid\n      for (var name in tags) {\n        if (serverTag[name] !== tags[name]) {\n          found = false;\n        }\n      }\n\n      // Add to candidate list\n      if (found) {\n        filteredServers.push(servers[i]);\n      }\n    }\n  }\n\n  // Returned filtered servers\n  return filteredServers;\n};\n\nfunction pickNearestMaxStalenessSeconds(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Get the maxStalenessMS\n  var maxStalenessMS = readPreference.maxStalenessSeconds * 1000;\n\n  // Check if the maxStalenessMS > 90 seconds\n  if (maxStalenessMS < 90 * 1000) {\n    return new MongoError('maxStalenessSeconds must be set to at least 90 seconds');\n  }\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (self.primary && servers.length === 0 && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.staleness <= maxStalenessMS;\n  });\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    return a.lastIsMasterMS - b.lastIsMasterMS;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction pickNearest(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (servers.length === 0 && self.primary && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    return a.lastIsMasterMS - b.lastIsMasterMS;\n  });\n\n  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)\n  var lowest = servers.length > 0 ? servers[0].lastIsMasterMS : 0;\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.lastIsMasterMS <= lowest + self.acceptableLatency;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction inList(ismaster, server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i] && list[i].name && list[i].name.toLowerCase() === server.name.toLowerCase())\n      return true;\n  }\n\n  return false;\n}\n\nfunction addToList(self, type, ismaster, server, list) {\n  var serverName = server.name.toLowerCase();\n  // Update set information about the server instance\n  self.set[serverName].type = type;\n  self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n  self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n  self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n  // Add to the list\n  list.push(server);\n}\n\nfunction compareObjectIds(id1, id2) {\n  var a = Buffer.from(id1.toHexString(), 'hex');\n  var b = Buffer.from(id2.toHexString(), 'hex');\n\n  if (a === b) {\n    return 0;\n  }\n\n  if (typeof Buffer.compare === 'function') {\n    return Buffer.compare(a, b);\n  }\n\n  var x = a.length;\n  var y = b.length;\n  var len = Math.min(x, y);\n\n  for (var i = 0; i < len; i++) {\n    if (a[i] !== b[i]) {\n      break;\n    }\n  }\n\n  if (i !== len) {\n    x = a[i];\n    y = b[i];\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0;\n}\n\nfunction removeFrom(server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].equals && list[i].equals(server)) {\n      list.splice(i, 1);\n      return true;\n    } else if (typeof list[i] === 'string' && list[i].toLowerCase() === server.name.toLowerCase()) {\n      list.splice(i, 1);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction emitTopologyDescriptionChanged(self) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    var topology = 'Unknown';\n    var setName = self.setName;\n\n    if (self.hasPrimaryAndSecondary()) {\n      topology = 'ReplicaSetWithPrimary';\n    } else if (!self.hasPrimary() && self.hasSecondary()) {\n      topology = 'ReplicaSetNoPrimary';\n    }\n\n    // Generate description\n    var description = {\n      topologyType: topology,\n      setName: setName,\n      servers: []\n    };\n\n    // Add the primary to the list\n    if (self.hasPrimary()) {\n      var desc = self.primary.getDescription();\n      desc.type = 'RSPrimary';\n      description.servers.push(desc);\n    }\n\n    // Add all the secondaries\n    description.servers = description.servers.concat(\n      self.secondaries.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Add all the arbiters\n    description.servers = description.servers.concat(\n      self.arbiters.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSArbiter';\n        return description;\n      })\n    );\n\n    // Add all the passives\n    description.servers = description.servers.concat(\n      self.passives.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Get the diff\n    var diffResult = diff(self.replicasetDescription, description);\n\n    // Create the result\n    var result = {\n      topologyId: self.id,\n      previousDescription: self.replicasetDescription,\n      newDescription: description,\n      diff: diffResult\n    };\n\n    // Emit the topologyDescription change\n    // if(diffResult.servers.length > 0) {\n    self.emit('topologyDescriptionChanged', result);\n    // }\n\n    // Set the new description\n    self.replicasetDescription = description;\n  }\n}\n\nmodule.exports = ReplSetState;\n"},"lineCount":1123}},"error":null,"hash":"f1b88407c3c4412a4cc931f911764d21","cacheData":{"env":{}}}