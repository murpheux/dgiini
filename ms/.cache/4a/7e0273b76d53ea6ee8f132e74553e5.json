{"id":"../node_modules/mongodb-core/lib/topologies/shared.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"os","loc":{"line":3,"column":19},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/os-browserify/browser.js"},{"name":"util","loc":{"line":4,"column":18},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/node-libs-browser/node_modules/util/util.js"},{"name":"./read_preference","loc":{"line":5,"column":31},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/read_preference.js"},{"name":"safe-buffer","loc":{"line":6,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/safe-buffer/index.js"},{"name":"../sdam/topology_description","loc":{"line":7,"column":29},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/sdam/topology_description.js"},{"name":"../../package.json","loc":{"line":20,"column":28},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json"},{"name":"process","parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/topologies/shared.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/process/browser.js"}],"generated":{"js":"\nvar process = require(\"process\");\n'use strict';\n\nconst os = require('os');\nconst f = require('util').format;\nconst ReadPreference = require('./read_preference');\nconst Buffer = require('safe-buffer').Buffer;\nconst TopologyType = require('../sdam/topology_description').TopologyType;\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n// Get package.json variable\nvar driverVersion = require('../../package.json').version;\nvar nodejsversion = f('Node.js %s, %s', process.version, os.endianness());\nvar type = os.type();\nvar name = process.platform;\nvar architecture = process.arch;\nvar release = os.release();\n\nfunction createClientInfo(options) {\n  // Build default client information\n  var clientInfo = options.clientInfo\n    ? clone(options.clientInfo)\n    : {\n        driver: {\n          name: 'nodejs-core',\n          version: driverVersion\n        },\n        os: {\n          type: type,\n          name: name,\n          architecture: architecture,\n          version: release\n        }\n      };\n\n  // Is platform specified\n  if (clientInfo.platform && clientInfo.platform.indexOf('mongodb-core') === -1) {\n    clientInfo.platform = f('%s, mongodb-core: %s', clientInfo.platform, driverVersion);\n  } else if (!clientInfo.platform) {\n    clientInfo.platform = nodejsversion;\n  }\n\n  // Do we have an application specific string\n  if (options.appname) {\n    // Cut at 128 bytes\n    var buffer = Buffer.from(options.appname);\n    // Return the truncated appname\n    var appname = buffer.length > 128 ? buffer.slice(0, 128).toString('utf8') : options.appname;\n    // Add to the clientInfo\n    clientInfo.application = { name: appname };\n  }\n\n  return clientInfo;\n}\n\nfunction createCompressionInfo(options) {\n  if (!options.compression || !options.compression.compressors) {\n    return [];\n  }\n\n  // Check that all supplied compressors are valid\n  options.compression.compressors.forEach(function(compressor) {\n    if (compressor !== 'snappy' && compressor !== 'zlib') {\n      throw new Error('compressors must be at least one of snappy or zlib');\n    }\n  });\n\n  return options.compression.compressors;\n}\n\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nvar getPreviousDescription = function(self) {\n  if (!self.s.serverDescription) {\n    self.s.serverDescription = {\n      address: self.name,\n      arbiters: [],\n      hosts: [],\n      passives: [],\n      type: 'Unknown'\n    };\n  }\n\n  return self.s.serverDescription;\n};\n\nvar emitServerDescriptionChanged = function(self, description) {\n  if (self.listeners('serverDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('serverDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar getPreviousTopologyDescription = function(self) {\n  if (!self.s.topologyDescription) {\n    self.s.topologyDescription = {\n      topologyType: 'Unknown',\n      servers: [\n        {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: 'Unknown'\n        }\n      ]\n    };\n  }\n\n  return self.s.topologyDescription;\n};\n\nvar emitTopologyDescriptionChanged = function(self, description) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('topologyDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousTopologyDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar changedIsMaster = function(self, currentIsmaster, ismaster) {\n  var currentType = getTopologyType(self, currentIsmaster);\n  var newType = getTopologyType(self, ismaster);\n  if (newType !== currentType) return true;\n  return false;\n};\n\nvar getTopologyType = function(self, ismaster) {\n  if (!ismaster) {\n    ismaster = self.ismaster;\n  }\n\n  if (!ismaster) return 'Unknown';\n  if (ismaster.ismaster && ismaster.msg === 'isdbgrid') return 'Mongos';\n  if (ismaster.ismaster && !ismaster.hosts) return 'Standalone';\n  if (ismaster.ismaster) return 'RSPrimary';\n  if (ismaster.secondary) return 'RSSecondary';\n  if (ismaster.arbiterOnly) return 'RSArbiter';\n  return 'Unknown';\n};\n\nvar inquireServerState = function(self) {\n  return function(callback) {\n    if (self.s.state === 'destroyed') return;\n    // Record response time\n    var start = new Date().getTime();\n\n    // emitSDAMEvent\n    emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: self.name });\n\n    // Attempt to execute ismaster command\n    self.command('admin.$cmd', { ismaster: true }, { monitoring: true }, function(err, r) {\n      if (!err) {\n        // Legacy event sender\n        self.emit('ismaster', r, self);\n\n        // Calculate latencyMS\n        var latencyMS = new Date().getTime() - start;\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: self.name\n        });\n\n        // Did the server change\n        if (changedIsMaster(self, self.s.ismaster, r.result)) {\n          // Emit server description changed if something listening\n          emitServerDescriptionChanged(self, {\n            address: self.name,\n            arbiters: [],\n            hosts: [],\n            passives: [],\n            type: !self.s.inTopology ? 'Standalone' : getTopologyType(self)\n          });\n        }\n\n        // Updat ismaster view\n        self.s.ismaster = r.result;\n\n        // Set server response time\n        self.s.isMasterLatencyMS = latencyMS;\n      } else {\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: self.name\n        });\n      }\n\n      // Peforming an ismaster monitoring callback operation\n      if (typeof callback === 'function') {\n        return callback(err, r);\n      }\n\n      // Perform another sweep\n      self.s.inquireServerStateTimeout = setTimeout(inquireServerState(self), self.s.haInterval);\n    });\n  };\n};\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for (var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n};\n\nfunction Interval(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setInterval(fn, time);\n    }\n\n    return this;\n  };\n\n  this.stop = function() {\n    clearInterval(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    return timer !== false;\n  };\n}\n\nfunction Timeout(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setTimeout(fn, time);\n    }\n    return this;\n  };\n\n  this.stop = function() {\n    clearTimeout(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    if (timer && timer._called) return false;\n    return timer !== false;\n  };\n}\n\nfunction diff(previous, current) {\n  // Difference document\n  var diff = {\n    servers: []\n  };\n\n  // Previous entry\n  if (!previous) {\n    previous = { servers: [] };\n  }\n\n  // Check if we have any previous servers missing in the current ones\n  for (var i = 0; i < previous.servers.length; i++) {\n    var found = false;\n\n    for (var j = 0; j < current.servers.length; j++) {\n      if (current.servers[j].address.toLowerCase() === previous.servers[i].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      // Add to the diff\n      diff.servers.push({\n        address: previous.servers[i].address,\n        from: previous.servers[i].type,\n        to: 'Unknown'\n      });\n    }\n  }\n\n  // Check if there are any severs that don't exist\n  for (j = 0; j < current.servers.length; j++) {\n    found = false;\n\n    // Go over all the previous servers\n    for (i = 0; i < previous.servers.length; i++) {\n      if (previous.servers[i].address.toLowerCase() === current.servers[j].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    // Add the server to the diff\n    if (!found) {\n      diff.servers.push({\n        address: current.servers[j].address,\n        from: 'Unknown',\n        to: current.servers[j].type\n      });\n    }\n  }\n\n  // Got through all the servers\n  for (i = 0; i < previous.servers.length; i++) {\n    var prevServer = previous.servers[i];\n\n    // Go through all current servers\n    for (j = 0; j < current.servers.length; j++) {\n      var currServer = current.servers[j];\n\n      // Matching server\n      if (prevServer.address.toLowerCase() === currServer.address.toLowerCase()) {\n        // We had a change in state\n        if (prevServer.type !== currServer.type) {\n          diff.servers.push({\n            address: prevServer.address,\n            from: prevServer.type,\n            to: currServer.type\n          });\n        }\n      }\n    }\n  }\n\n  // Return difference\n  return diff;\n}\n\n/**\n * Shared function to determine clusterTime for a given topology\n *\n * @param {*} topology\n * @param {*} clusterTime\n */\nfunction resolveClusterTime(topology, $clusterTime) {\n  if (topology.clusterTime == null) {\n    topology.clusterTime = $clusterTime;\n  } else {\n    if ($clusterTime.clusterTime.greaterThan(topology.clusterTime.clusterTime)) {\n      topology.clusterTime = $clusterTime;\n    }\n  }\n}\n\n// NOTE: this is a temporary move until the topologies can be more formally refactored\n//       to share code.\nconst SessionMixins = {\n  endSessions: function(sessions, callback) {\n    if (!Array.isArray(sessions)) {\n      sessions = [sessions];\n    }\n\n    // TODO:\n    //   When connected to a sharded cluster the endSessions command\n    //   can be sent to any mongos. When connected to a replica set the\n    //   endSessions command MUST be sent to the primary if the primary\n    //   is available, otherwise it MUST be sent to any available secondary.\n    //   Is it enough to use: ReadPreference.primaryPreferred ?\n    this.command(\n      'admin.$cmd',\n      { endSessions: sessions },\n      { readPreference: ReadPreference.primaryPreferred },\n      () => {\n        // intentionally ignored, per spec\n        if (typeof callback === 'function') callback();\n      }\n    );\n  }\n};\n\nfunction topologyType(topology) {\n  if (topology.description) {\n    return topology.description.type;\n  }\n\n  if (topology.type === 'mongos') {\n    return TopologyType.Sharded;\n  } else if (topology.type === 'replset') {\n    return TopologyType.ReplicaSetWithPrimary;\n  }\n\n  return TopologyType.Single;\n}\n\nconst RETRYABLE_WIRE_VERSION = 6;\n\n/**\n * Determines whether the provided topology supports retryable writes\n *\n * @param {Mongos|Replset} topology\n */\nconst isRetryableWritesSupported = function(topology) {\n  const maxWireVersion = topology.lastIsMaster().maxWireVersion;\n  if (maxWireVersion < RETRYABLE_WIRE_VERSION) {\n    return false;\n  }\n\n  if (!topology.logicalSessionTimeoutMinutes) {\n    return false;\n  }\n\n  if (topologyType(topology) === TopologyType.Single) {\n    return false;\n  }\n\n  return true;\n};\n\nmodule.exports.SessionMixins = SessionMixins;\nmodule.exports.resolveClusterTime = resolveClusterTime;\nmodule.exports.inquireServerState = inquireServerState;\nmodule.exports.getTopologyType = getTopologyType;\nmodule.exports.emitServerDescriptionChanged = emitServerDescriptionChanged;\nmodule.exports.emitTopologyDescriptionChanged = emitTopologyDescriptionChanged;\nmodule.exports.cloneOptions = cloneOptions;\nmodule.exports.createClientInfo = createClientInfo;\nmodule.exports.createCompressionInfo = createCompressionInfo;\nmodule.exports.clone = clone;\nmodule.exports.diff = diff;\nmodule.exports.Interval = Interval;\nmodule.exports.Timeout = Timeout;\nmodule.exports.isRetryableWritesSupported = isRetryableWritesSupported;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/mongodb-core/lib/topologies/shared.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/topologies/shared.js":"'use strict';\n\nconst os = require('os');\nconst f = require('util').format;\nconst ReadPreference = require('./read_preference');\nconst Buffer = require('safe-buffer').Buffer;\nconst TopologyType = require('../sdam/topology_description').TopologyType;\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n// Get package.json variable\nvar driverVersion = require('../../package.json').version;\nvar nodejsversion = f('Node.js %s, %s', process.version, os.endianness());\nvar type = os.type();\nvar name = process.platform;\nvar architecture = process.arch;\nvar release = os.release();\n\nfunction createClientInfo(options) {\n  // Build default client information\n  var clientInfo = options.clientInfo\n    ? clone(options.clientInfo)\n    : {\n        driver: {\n          name: 'nodejs-core',\n          version: driverVersion\n        },\n        os: {\n          type: type,\n          name: name,\n          architecture: architecture,\n          version: release\n        }\n      };\n\n  // Is platform specified\n  if (clientInfo.platform && clientInfo.platform.indexOf('mongodb-core') === -1) {\n    clientInfo.platform = f('%s, mongodb-core: %s', clientInfo.platform, driverVersion);\n  } else if (!clientInfo.platform) {\n    clientInfo.platform = nodejsversion;\n  }\n\n  // Do we have an application specific string\n  if (options.appname) {\n    // Cut at 128 bytes\n    var buffer = Buffer.from(options.appname);\n    // Return the truncated appname\n    var appname = buffer.length > 128 ? buffer.slice(0, 128).toString('utf8') : options.appname;\n    // Add to the clientInfo\n    clientInfo.application = { name: appname };\n  }\n\n  return clientInfo;\n}\n\nfunction createCompressionInfo(options) {\n  if (!options.compression || !options.compression.compressors) {\n    return [];\n  }\n\n  // Check that all supplied compressors are valid\n  options.compression.compressors.forEach(function(compressor) {\n    if (compressor !== 'snappy' && compressor !== 'zlib') {\n      throw new Error('compressors must be at least one of snappy or zlib');\n    }\n  });\n\n  return options.compression.compressors;\n}\n\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nvar getPreviousDescription = function(self) {\n  if (!self.s.serverDescription) {\n    self.s.serverDescription = {\n      address: self.name,\n      arbiters: [],\n      hosts: [],\n      passives: [],\n      type: 'Unknown'\n    };\n  }\n\n  return self.s.serverDescription;\n};\n\nvar emitServerDescriptionChanged = function(self, description) {\n  if (self.listeners('serverDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('serverDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar getPreviousTopologyDescription = function(self) {\n  if (!self.s.topologyDescription) {\n    self.s.topologyDescription = {\n      topologyType: 'Unknown',\n      servers: [\n        {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: 'Unknown'\n        }\n      ]\n    };\n  }\n\n  return self.s.topologyDescription;\n};\n\nvar emitTopologyDescriptionChanged = function(self, description) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('topologyDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousTopologyDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar changedIsMaster = function(self, currentIsmaster, ismaster) {\n  var currentType = getTopologyType(self, currentIsmaster);\n  var newType = getTopologyType(self, ismaster);\n  if (newType !== currentType) return true;\n  return false;\n};\n\nvar getTopologyType = function(self, ismaster) {\n  if (!ismaster) {\n    ismaster = self.ismaster;\n  }\n\n  if (!ismaster) return 'Unknown';\n  if (ismaster.ismaster && ismaster.msg === 'isdbgrid') return 'Mongos';\n  if (ismaster.ismaster && !ismaster.hosts) return 'Standalone';\n  if (ismaster.ismaster) return 'RSPrimary';\n  if (ismaster.secondary) return 'RSSecondary';\n  if (ismaster.arbiterOnly) return 'RSArbiter';\n  return 'Unknown';\n};\n\nvar inquireServerState = function(self) {\n  return function(callback) {\n    if (self.s.state === 'destroyed') return;\n    // Record response time\n    var start = new Date().getTime();\n\n    // emitSDAMEvent\n    emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: self.name });\n\n    // Attempt to execute ismaster command\n    self.command('admin.$cmd', { ismaster: true }, { monitoring: true }, function(err, r) {\n      if (!err) {\n        // Legacy event sender\n        self.emit('ismaster', r, self);\n\n        // Calculate latencyMS\n        var latencyMS = new Date().getTime() - start;\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: self.name\n        });\n\n        // Did the server change\n        if (changedIsMaster(self, self.s.ismaster, r.result)) {\n          // Emit server description changed if something listening\n          emitServerDescriptionChanged(self, {\n            address: self.name,\n            arbiters: [],\n            hosts: [],\n            passives: [],\n            type: !self.s.inTopology ? 'Standalone' : getTopologyType(self)\n          });\n        }\n\n        // Updat ismaster view\n        self.s.ismaster = r.result;\n\n        // Set server response time\n        self.s.isMasterLatencyMS = latencyMS;\n      } else {\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: self.name\n        });\n      }\n\n      // Peforming an ismaster monitoring callback operation\n      if (typeof callback === 'function') {\n        return callback(err, r);\n      }\n\n      // Perform another sweep\n      self.s.inquireServerStateTimeout = setTimeout(inquireServerState(self), self.s.haInterval);\n    });\n  };\n};\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for (var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n};\n\nfunction Interval(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setInterval(fn, time);\n    }\n\n    return this;\n  };\n\n  this.stop = function() {\n    clearInterval(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    return timer !== false;\n  };\n}\n\nfunction Timeout(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setTimeout(fn, time);\n    }\n    return this;\n  };\n\n  this.stop = function() {\n    clearTimeout(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    if (timer && timer._called) return false;\n    return timer !== false;\n  };\n}\n\nfunction diff(previous, current) {\n  // Difference document\n  var diff = {\n    servers: []\n  };\n\n  // Previous entry\n  if (!previous) {\n    previous = { servers: [] };\n  }\n\n  // Check if we have any previous servers missing in the current ones\n  for (var i = 0; i < previous.servers.length; i++) {\n    var found = false;\n\n    for (var j = 0; j < current.servers.length; j++) {\n      if (current.servers[j].address.toLowerCase() === previous.servers[i].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      // Add to the diff\n      diff.servers.push({\n        address: previous.servers[i].address,\n        from: previous.servers[i].type,\n        to: 'Unknown'\n      });\n    }\n  }\n\n  // Check if there are any severs that don't exist\n  for (j = 0; j < current.servers.length; j++) {\n    found = false;\n\n    // Go over all the previous servers\n    for (i = 0; i < previous.servers.length; i++) {\n      if (previous.servers[i].address.toLowerCase() === current.servers[j].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    // Add the server to the diff\n    if (!found) {\n      diff.servers.push({\n        address: current.servers[j].address,\n        from: 'Unknown',\n        to: current.servers[j].type\n      });\n    }\n  }\n\n  // Got through all the servers\n  for (i = 0; i < previous.servers.length; i++) {\n    var prevServer = previous.servers[i];\n\n    // Go through all current servers\n    for (j = 0; j < current.servers.length; j++) {\n      var currServer = current.servers[j];\n\n      // Matching server\n      if (prevServer.address.toLowerCase() === currServer.address.toLowerCase()) {\n        // We had a change in state\n        if (prevServer.type !== currServer.type) {\n          diff.servers.push({\n            address: prevServer.address,\n            from: prevServer.type,\n            to: currServer.type\n          });\n        }\n      }\n    }\n  }\n\n  // Return difference\n  return diff;\n}\n\n/**\n * Shared function to determine clusterTime for a given topology\n *\n * @param {*} topology\n * @param {*} clusterTime\n */\nfunction resolveClusterTime(topology, $clusterTime) {\n  if (topology.clusterTime == null) {\n    topology.clusterTime = $clusterTime;\n  } else {\n    if ($clusterTime.clusterTime.greaterThan(topology.clusterTime.clusterTime)) {\n      topology.clusterTime = $clusterTime;\n    }\n  }\n}\n\n// NOTE: this is a temporary move until the topologies can be more formally refactored\n//       to share code.\nconst SessionMixins = {\n  endSessions: function(sessions, callback) {\n    if (!Array.isArray(sessions)) {\n      sessions = [sessions];\n    }\n\n    // TODO:\n    //   When connected to a sharded cluster the endSessions command\n    //   can be sent to any mongos. When connected to a replica set the\n    //   endSessions command MUST be sent to the primary if the primary\n    //   is available, otherwise it MUST be sent to any available secondary.\n    //   Is it enough to use: ReadPreference.primaryPreferred ?\n    this.command(\n      'admin.$cmd',\n      { endSessions: sessions },\n      { readPreference: ReadPreference.primaryPreferred },\n      () => {\n        // intentionally ignored, per spec\n        if (typeof callback === 'function') callback();\n      }\n    );\n  }\n};\n\nfunction topologyType(topology) {\n  if (topology.description) {\n    return topology.description.type;\n  }\n\n  if (topology.type === 'mongos') {\n    return TopologyType.Sharded;\n  } else if (topology.type === 'replset') {\n    return TopologyType.ReplicaSetWithPrimary;\n  }\n\n  return TopologyType.Single;\n}\n\nconst RETRYABLE_WIRE_VERSION = 6;\n\n/**\n * Determines whether the provided topology supports retryable writes\n *\n * @param {Mongos|Replset} topology\n */\nconst isRetryableWritesSupported = function(topology) {\n  const maxWireVersion = topology.lastIsMaster().maxWireVersion;\n  if (maxWireVersion < RETRYABLE_WIRE_VERSION) {\n    return false;\n  }\n\n  if (!topology.logicalSessionTimeoutMinutes) {\n    return false;\n  }\n\n  if (topologyType(topology) === TopologyType.Single) {\n    return false;\n  }\n\n  return true;\n};\n\nmodule.exports.SessionMixins = SessionMixins;\nmodule.exports.resolveClusterTime = resolveClusterTime;\nmodule.exports.inquireServerState = inquireServerState;\nmodule.exports.getTopologyType = getTopologyType;\nmodule.exports.emitServerDescriptionChanged = emitServerDescriptionChanged;\nmodule.exports.emitTopologyDescriptionChanged = emitTopologyDescriptionChanged;\nmodule.exports.cloneOptions = cloneOptions;\nmodule.exports.createClientInfo = createClientInfo;\nmodule.exports.createCompressionInfo = createCompressionInfo;\nmodule.exports.clone = clone;\nmodule.exports.diff = diff;\nmodule.exports.Interval = Interval;\nmodule.exports.Timeout = Timeout;\nmodule.exports.isRetryableWritesSupported = isRetryableWritesSupported;\n"},"lineCount":456}},"error":null,"hash":"6ea9fa9162070738900847a694fe130e","cacheData":{"env":{}}}