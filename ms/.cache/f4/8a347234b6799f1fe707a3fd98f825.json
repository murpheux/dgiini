{"id":"../node_modules/mongodb-core/lib/auth/auth_provider.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"../error","loc":{"line":3,"column":27},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/auth/auth_provider.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"process","parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/auth/auth_provider.js","resolved":"/Users/murpheux/.config/yarn/global/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nconst MongoError = require('../error').MongoError;\n\n/**\n * Creates a new AuthProvider, which dictates how to authenticate for a given\n * mechanism.\n * @class\n */\nclass AuthProvider {\n  constructor(bson) {\n    this.bson = bson;\n    this.authStore = [];\n  }\n\n  /**\n   * Authenticate\n   * @method\n   * @param {SendAuthCommand} sendAuthCommand Writes an auth command directly to a specific connection\n   * @param {Connection[]} connections Connections to authenticate using this authenticator\n   * @param {MongoCredentials} credentials Authentication credentials\n   * @param {authResultCallback} callback The callback to return the result from the authentication\n   */\n  auth(sendAuthCommand, connections, credentials, callback) {\n    // Total connections\n    let count = connections.length;\n\n    if (count === 0) {\n      callback(null, null);\n      return;\n    }\n\n    // Valid connections\n    let numberOfValidConnections = 0;\n    let errorObject = null;\n\n    const execute = connection => {\n      this._authenticateSingleConnection(sendAuthCommand, connection, credentials, (err, r) => {\n        // Adjust count\n        count = count - 1;\n\n        // If we have an error\n        if (err) {\n          errorObject = new MongoError(err);\n        } else if (r && (r.$err || r.errmsg)) {\n          errorObject = new MongoError(r);\n        } else {\n          numberOfValidConnections = numberOfValidConnections + 1;\n        }\n\n        // Still authenticating against other connections.\n        if (count !== 0) {\n          return;\n        }\n\n        // We have authenticated all connections\n        if (numberOfValidConnections > 0) {\n          // Store the auth details\n          this.addCredentials(credentials);\n          // Return correct authentication\n          callback(null, true);\n        } else {\n          if (errorObject == null) {\n            errorObject = new MongoError(`failed to authenticate using ${credentials.mechanism}`);\n          }\n          callback(errorObject, false);\n        }\n      });\n    };\n\n    const executeInNextTick = _connection => process.nextTick(() => execute(_connection));\n\n    // For each connection we need to authenticate\n    while (connections.length > 0) {\n      executeInNextTick(connections.shift());\n    }\n  }\n\n  /**\n   * Implementation of a single connection authenticating. Is meant to be overridden.\n   * Will error if called directly\n   * @ignore\n   */\n  _authenticateSingleConnection(/*sendAuthCommand, connection, credentials, callback*/) {\n    throw new Error('_authenticateSingleConnection must be overridden');\n  }\n\n  /**\n   * Adds credentials to store only if it does not exist\n   * @param {MongoCredentials} credentials credentials to add to store\n   */\n  addCredentials(credentials) {\n    const found = this.authStore.some(cred => cred.equals(credentials));\n\n    if (!found) {\n      this.authStore.push(credentials);\n    }\n  }\n\n  /**\n   * Re authenticate pool\n   * @method\n   * @param {SendAuthCommand} sendAuthCommand Writes an auth command directly to a specific connection\n   * @param {Connection[]} connections Connections to authenticate using this authenticator\n   * @param {authResultCallback} callback The callback to return the result from the authentication\n   */\n  reauthenticate(sendAuthCommand, connections, callback) {\n    const authStore = this.authStore.slice(0);\n    let count = authStore.length;\n    if (count === 0) {\n      return callback(null, null);\n    }\n\n    for (let i = 0; i < authStore.length; i++) {\n      this.auth(sendAuthCommand, connections, authStore[i], function(err) {\n        count = count - 1;\n        if (count === 0) {\n          callback(err, null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Remove credentials that have been previously stored in the auth provider\n   * @method\n   * @param {string} source Name of database we are removing authStore details about\n   * @return {object}\n   */\n  logout(source) {\n    this.authStore = this.authStore.filter(credentials => credentials.source !== source);\n  }\n}\n\n/**\n * A function that writes authentication commands to a specific connection\n * @callback SendAuthCommand\n * @param {Connection} connection The connection to write to\n * @param {Command} command A command with a toBin method that can be written to a connection\n * @param {AuthWriteCallback} callback Callback called when command response is received\n */\n\n/**\n * A callback for a specific auth command\n * @callback AuthWriteCallback\n * @param {Error} err If command failed, an error from the server\n * @param {object} r The response from the server\n */\n\n/**\n * This is a result from an authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = { AuthProvider };\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/mongodb-core/lib/auth/auth_provider.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/auth/auth_provider.js":"'use strict';\n\nconst MongoError = require('../error').MongoError;\n\n/**\n * Creates a new AuthProvider, which dictates how to authenticate for a given\n * mechanism.\n * @class\n */\nclass AuthProvider {\n  constructor(bson) {\n    this.bson = bson;\n    this.authStore = [];\n  }\n\n  /**\n   * Authenticate\n   * @method\n   * @param {SendAuthCommand} sendAuthCommand Writes an auth command directly to a specific connection\n   * @param {Connection[]} connections Connections to authenticate using this authenticator\n   * @param {MongoCredentials} credentials Authentication credentials\n   * @param {authResultCallback} callback The callback to return the result from the authentication\n   */\n  auth(sendAuthCommand, connections, credentials, callback) {\n    // Total connections\n    let count = connections.length;\n\n    if (count === 0) {\n      callback(null, null);\n      return;\n    }\n\n    // Valid connections\n    let numberOfValidConnections = 0;\n    let errorObject = null;\n\n    const execute = connection => {\n      this._authenticateSingleConnection(sendAuthCommand, connection, credentials, (err, r) => {\n        // Adjust count\n        count = count - 1;\n\n        // If we have an error\n        if (err) {\n          errorObject = new MongoError(err);\n        } else if (r && (r.$err || r.errmsg)) {\n          errorObject = new MongoError(r);\n        } else {\n          numberOfValidConnections = numberOfValidConnections + 1;\n        }\n\n        // Still authenticating against other connections.\n        if (count !== 0) {\n          return;\n        }\n\n        // We have authenticated all connections\n        if (numberOfValidConnections > 0) {\n          // Store the auth details\n          this.addCredentials(credentials);\n          // Return correct authentication\n          callback(null, true);\n        } else {\n          if (errorObject == null) {\n            errorObject = new MongoError(`failed to authenticate using ${credentials.mechanism}`);\n          }\n          callback(errorObject, false);\n        }\n      });\n    };\n\n    const executeInNextTick = _connection => process.nextTick(() => execute(_connection));\n\n    // For each connection we need to authenticate\n    while (connections.length > 0) {\n      executeInNextTick(connections.shift());\n    }\n  }\n\n  /**\n   * Implementation of a single connection authenticating. Is meant to be overridden.\n   * Will error if called directly\n   * @ignore\n   */\n  _authenticateSingleConnection(/*sendAuthCommand, connection, credentials, callback*/) {\n    throw new Error('_authenticateSingleConnection must be overridden');\n  }\n\n  /**\n   * Adds credentials to store only if it does not exist\n   * @param {MongoCredentials} credentials credentials to add to store\n   */\n  addCredentials(credentials) {\n    const found = this.authStore.some(cred => cred.equals(credentials));\n\n    if (!found) {\n      this.authStore.push(credentials);\n    }\n  }\n\n  /**\n   * Re authenticate pool\n   * @method\n   * @param {SendAuthCommand} sendAuthCommand Writes an auth command directly to a specific connection\n   * @param {Connection[]} connections Connections to authenticate using this authenticator\n   * @param {authResultCallback} callback The callback to return the result from the authentication\n   */\n  reauthenticate(sendAuthCommand, connections, callback) {\n    const authStore = this.authStore.slice(0);\n    let count = authStore.length;\n    if (count === 0) {\n      return callback(null, null);\n    }\n\n    for (let i = 0; i < authStore.length; i++) {\n      this.auth(sendAuthCommand, connections, authStore[i], function(err) {\n        count = count - 1;\n        if (count === 0) {\n          callback(err, null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Remove credentials that have been previously stored in the auth provider\n   * @method\n   * @param {string} source Name of database we are removing authStore details about\n   * @return {object}\n   */\n  logout(source) {\n    this.authStore = this.authStore.filter(credentials => credentials.source !== source);\n  }\n}\n\n/**\n * A function that writes authentication commands to a specific connection\n * @callback SendAuthCommand\n * @param {Connection} connection The connection to write to\n * @param {Command} command A command with a toBin method that can be written to a connection\n * @param {AuthWriteCallback} callback Callback called when command response is received\n */\n\n/**\n * A callback for a specific auth command\n * @callback AuthWriteCallback\n * @param {Error} err If command failed, an error from the server\n * @param {object} r The response from the server\n */\n\n/**\n * This is a result from an authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = { AuthProvider };\n"},"lineCount":160}},"error":null,"hash":"7bb873881148c450f0cba72659b313ec","cacheData":{"env":{}}}