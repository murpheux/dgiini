{"id":"../node_modules/logform/dist/format.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/logform/package.json","includedInParent":true,"mtime":1561510407437},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/logform/.babelrc","includedInParent":true,"mtime":1561510407437}],"generated":{"js":"'use strict';\n/*\n * Displays a helpful message and the source of\n * the format when it is invalid.\n */\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar InvalidFormatError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(InvalidFormatError, _Error);\n\n  function InvalidFormatError(formatFn) {\n    var _this;\n\n    _classCallCheck(this, InvalidFormatError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InvalidFormatError).call(this, \"Format functions must be synchronous taking a two arguments: (info, opts)\\nFound: \".concat(formatFn.toString().split('\\n')[0], \"\\n\")));\n    Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this)), InvalidFormatError);\n    return _this;\n  }\n\n  return InvalidFormatError;\n}(_wrapNativeSuper(Error));\n/*\n * function format (formatFn)\n * Returns a create function for the `formatFn`.\n */\n\n\nmodule.exports = function (formatFn) {\n  if (formatFn.length > 2) {\n    throw new InvalidFormatError(formatFn);\n  }\n  /*\n   * function Format (options)\n   * Base prototype which calls a `_format`\n   * function and pushes the result.\n   */\n\n\n  function Format() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.options = options;\n  }\n\n  Format.prototype.transform = formatFn; //\n  // Create a function which returns new instances of\n  // FormatWrap for simple syntax like:\n  //\n  // require('winston').formats.json();\n  //\n\n  function createFormatWrap(opts) {\n    return new Format(opts);\n  } //\n  // Expose the FormatWrap through the create function\n  // for testability.\n  //\n\n\n  createFormatWrap.Format = Format;\n  return createFormatWrap;\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/logform/dist/format.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/logform/dist/format.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"../node_modules/logform/dist/format.js":"'use strict';\n/*\n * Displays a helpful message and the source of\n * the format when it is invalid.\n */\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar InvalidFormatError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(InvalidFormatError, _Error);\n\n  function InvalidFormatError(formatFn) {\n    var _this;\n\n    _classCallCheck(this, InvalidFormatError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InvalidFormatError).call(this, \"Format functions must be synchronous taking a two arguments: (info, opts)\\nFound: \".concat(formatFn.toString().split('\\n')[0], \"\\n\")));\n    Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this)), InvalidFormatError);\n    return _this;\n  }\n\n  return InvalidFormatError;\n}(_wrapNativeSuper(Error));\n/*\n * function format (formatFn)\n * Returns a create function for the `formatFn`.\n */\n\n\nmodule.exports = function (formatFn) {\n  if (formatFn.length > 2) {\n    throw new InvalidFormatError(formatFn);\n  }\n  /*\n   * function Format (options)\n   * Base prototype which calls a `_format`\n   * function and pushes the result.\n   */\n\n\n  function Format() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.options = options;\n  }\n\n  Format.prototype.transform = formatFn; //\n  // Create a function which returns new instances of\n  // FormatWrap for simple syntax like:\n  //\n  // require('winston').formats.json();\n  //\n\n  function createFormatWrap(opts) {\n    return new Format(opts);\n  } //\n  // Expose the FormatWrap through the create function\n  // for testability.\n  //\n\n\n  createFormatWrap.Format = Format;\n  return createFormatWrap;\n};"},"lineCount":85}},"error":null,"hash":"05c5be2cdd2045fecd03b3f8ba729e78","cacheData":{"env":{}}}