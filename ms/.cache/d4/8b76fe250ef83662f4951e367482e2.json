{"id":"../node_modules/logform/dist/pad-levels.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/logform/package.json","includedInParent":true,"mtime":1561510407437},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/logform/.babelrc","includedInParent":true,"mtime":1561510407437},{"name":"triple-beam","loc":{"line":18,"column":23},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/logform/dist/pad-levels.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/triple-beam/index.js"}],"generated":{"js":"/* eslint no-unused-vars: 0 */\n'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('triple-beam'),\n    configs = _require.configs,\n    LEVEL = _require.LEVEL,\n    MESSAGE = _require.MESSAGE;\n\nvar Padder =\n/*#__PURE__*/\nfunction () {\n  function Padder() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      levels: configs.npm.levels\n    };\n\n    _classCallCheck(this, Padder);\n\n    this.paddings = Padder.paddingForLevels(opts.levels, opts.filler);\n    this.options = opts;\n  }\n  /**\n   * Returns the maximum length of keys in the specified `levels` Object.\n   * @param  {Object} levels Set of all levels to calculate longest level against.\n   * @returns {Number} Maximum length of the longest level string.\n   */\n\n\n  _createClass(Padder, [{\n    key: \"transform\",\n\n    /**\n     * Prepends the padding onto the `message` based on the `LEVEL` of\n     * the `info`. This is based on the behavior of `winston@2` which also\n     * prepended the level onto the message.\n     *\n     * See: https://github.com/winstonjs/winston/blob/2.x/lib/winston/logger.js#L198-L201\n     *\n     * @param  {Info} info Logform info object\n     * @param  {Object} opts Options passed along to this instance.\n     * @returns {Info} Modified logform info object.\n     */\n    value: function transform(info, opts) {\n      info.message = \"\".concat(this.paddings[info[LEVEL]]).concat(info.message);\n\n      if (info[MESSAGE]) {\n        info[MESSAGE] = \"\".concat(this.paddings[info[LEVEL]]).concat(info[MESSAGE]);\n      }\n\n      return info;\n    }\n  }], [{\n    key: \"getLongestLevel\",\n    value: function getLongestLevel(levels) {\n      var lvls = Object.keys(levels).map(function (level) {\n        return level.length;\n      });\n      return Math.max.apply(Math, _toConsumableArray(lvls));\n    }\n    /**\n     * Returns the padding for the specified `level` assuming that the\n     * maximum length of all levels it's associated with is `maxLength`.\n     * @param  {String} level Level to calculate padding for.\n     * @param  {String} filler Repeatable text to use for padding.\n     * @param  {Number} maxLength Length of the longest level\n     * @returns {String} Padding string for the `level`\n     */\n\n  }, {\n    key: \"paddingForLevel\",\n    value: function paddingForLevel(level, filler, maxLength) {\n      var targetLen = maxLength + 1 - level.length;\n      var rep = Math.floor(targetLen / filler.length);\n      var padding = \"\".concat(filler).concat(filler.repeat(rep));\n      return padding.slice(0, targetLen);\n    }\n    /**\n     * Returns an object with the string paddings for the given `levels`\n     * using the specified `filler`.\n     * @param  {Object} levels Set of all levels to calculate padding for.\n     * @param  {String} filler Repeatable text to use for padding.\n     * @returns {Object} Mapping of level to desired padding.\n     */\n\n  }, {\n    key: \"paddingForLevels\",\n    value: function paddingForLevels(levels) {\n      var filler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n      var maxLength = Padder.getLongestLevel(levels);\n      return Object.keys(levels).reduce(function (acc, level) {\n        acc[level] = Padder.paddingForLevel(level, filler, maxLength);\n        return acc;\n      }, {});\n    }\n  }]);\n\n  return Padder;\n}();\n/*\n * function padLevels (info)\n * Returns a new instance of the padLevels Format which pads\n * levels to be the same length. This was previously exposed as\n * { padLevels: true } to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = function (opts) {\n  return new Padder(opts);\n};\n\nmodule.exports.Padder = module.exports.Format = Padder;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/logform/dist/pad-levels.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}}],"sources":{"../node_modules/logform/dist/pad-levels.js":"/* eslint no-unused-vars: 0 */\n'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('triple-beam'),\n    configs = _require.configs,\n    LEVEL = _require.LEVEL,\n    MESSAGE = _require.MESSAGE;\n\nvar Padder =\n/*#__PURE__*/\nfunction () {\n  function Padder() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      levels: configs.npm.levels\n    };\n\n    _classCallCheck(this, Padder);\n\n    this.paddings = Padder.paddingForLevels(opts.levels, opts.filler);\n    this.options = opts;\n  }\n  /**\n   * Returns the maximum length of keys in the specified `levels` Object.\n   * @param  {Object} levels Set of all levels to calculate longest level against.\n   * @returns {Number} Maximum length of the longest level string.\n   */\n\n\n  _createClass(Padder, [{\n    key: \"transform\",\n\n    /**\n     * Prepends the padding onto the `message` based on the `LEVEL` of\n     * the `info`. This is based on the behavior of `winston@2` which also\n     * prepended the level onto the message.\n     *\n     * See: https://github.com/winstonjs/winston/blob/2.x/lib/winston/logger.js#L198-L201\n     *\n     * @param  {Info} info Logform info object\n     * @param  {Object} opts Options passed along to this instance.\n     * @returns {Info} Modified logform info object.\n     */\n    value: function transform(info, opts) {\n      info.message = \"\".concat(this.paddings[info[LEVEL]]).concat(info.message);\n\n      if (info[MESSAGE]) {\n        info[MESSAGE] = \"\".concat(this.paddings[info[LEVEL]]).concat(info[MESSAGE]);\n      }\n\n      return info;\n    }\n  }], [{\n    key: \"getLongestLevel\",\n    value: function getLongestLevel(levels) {\n      var lvls = Object.keys(levels).map(function (level) {\n        return level.length;\n      });\n      return Math.max.apply(Math, _toConsumableArray(lvls));\n    }\n    /**\n     * Returns the padding for the specified `level` assuming that the\n     * maximum length of all levels it's associated with is `maxLength`.\n     * @param  {String} level Level to calculate padding for.\n     * @param  {String} filler Repeatable text to use for padding.\n     * @param  {Number} maxLength Length of the longest level\n     * @returns {String} Padding string for the `level`\n     */\n\n  }, {\n    key: \"paddingForLevel\",\n    value: function paddingForLevel(level, filler, maxLength) {\n      var targetLen = maxLength + 1 - level.length;\n      var rep = Math.floor(targetLen / filler.length);\n      var padding = \"\".concat(filler).concat(filler.repeat(rep));\n      return padding.slice(0, targetLen);\n    }\n    /**\n     * Returns an object with the string paddings for the given `levels`\n     * using the specified `filler`.\n     * @param  {Object} levels Set of all levels to calculate padding for.\n     * @param  {String} filler Repeatable text to use for padding.\n     * @returns {Object} Mapping of level to desired padding.\n     */\n\n  }, {\n    key: \"paddingForLevels\",\n    value: function paddingForLevels(levels) {\n      var filler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n      var maxLength = Padder.getLongestLevel(levels);\n      return Object.keys(levels).reduce(function (acc, level) {\n        acc[level] = Padder.paddingForLevel(level, filler, maxLength);\n        return acc;\n      }, {});\n    }\n  }]);\n\n  return Padder;\n}();\n/*\n * function padLevels (info)\n * Returns a new instance of the padLevels Format which pads\n * levels to be the same length. This was previously exposed as\n * { padLevels: true } to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = function (opts) {\n  return new Padder(opts);\n};\n\nmodule.exports.Padder = module.exports.Format = Padder;"},"lineCount":125}},"error":null,"hash":"878146bdeab5bec933ab3ad0701f92fe","cacheData":{"env":{}}}