{"id":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","dependencies":[{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/package.json","includedInParent":true,"mtime":1563323962672},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/.babelrc","includedInParent":true,"mtime":1557029603000},{"name":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/package.json","includedInParent":true,"mtime":1561227911279},{"name":"../error","loc":{"line":3,"column":27},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/write_command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/error.js"},{"name":"./shared","loc":{"line":4,"column":36},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/write_command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/shared.js"},{"name":"./command","loc":{"line":5,"column":24},"parent":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/write_command.js","resolved":"/Users/murpheux/Workspace/projects/dgiini/microservices/node_modules/mongodb-core/lib/wireprotocol/command.js"}],"generated":{"js":"'use strict';\n\nconst MongoError = require('../error').MongoError;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst command = require('./command');\n\nfunction writeCommand(server, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError(`${type} must contain at least one document`);\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const writeConcern = options.writeConcern;\n\n  const writeCommand = {};\n  writeCommand[type] = collectionNamespace(ns);\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  if (options.collation) {\n    for (let i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  const commandOptions = Object.assign(\n    {\n      checkKeys: type === 'insert',\n      numberToReturn: 1\n    },\n    options\n  );\n\n  command(server, ns, writeCommand, commandOptions, callback);\n}\n\nmodule.exports = writeCommand;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/mongodb-core/lib/wireprotocol/write_command.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"../node_modules/mongodb-core/lib/wireprotocol/write_command.js":"'use strict';\n\nconst MongoError = require('../error').MongoError;\nconst collectionNamespace = require('./shared').collectionNamespace;\nconst command = require('./command');\n\nfunction writeCommand(server, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError(`${type} must contain at least one document`);\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const writeConcern = options.writeConcern;\n\n  const writeCommand = {};\n  writeCommand[type] = collectionNamespace(ns);\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  if (options.collation) {\n    for (let i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  const commandOptions = Object.assign(\n    {\n      checkKeys: type === 'insert',\n      numberToReturn: 1\n    },\n    options\n  );\n\n  command(server, ns, writeCommand, commandOptions, callback);\n}\n\nmodule.exports = writeCommand;\n"},"lineCount":51}},"error":null,"hash":"91c6d8b757354a881ae07abcbf7f0144","cacheData":{"env":{}}}