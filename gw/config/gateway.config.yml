https:
  port: 7000
  tls:
    "default":
        key: cert/dgiini.key.pem
        cert: cert/dgiini.cert.pem
admin:
  port: 9876

apiEndpoints:
  authApiDefault:
    paths: '/api/auth/v1/'
    methods: GET
  authApi:
    paths: '/api/auth/v1/*'

  taskApiDefault:
    paths: '/api/task/v1/'
    methods: GET
  taskApi:
    paths: '/api/task/v1/*'

  msgApiDefault:
    paths: '/api/msg/v1/'
    methods: GET
  msgApi:
    paths: '/api/msg/v1/*'

  notifyApiDefault:
    paths: '/api/notify/v1/'
    methods: GET
  notifyApi:
    paths: '/api/notify/v1/*'
    
  billApiDefault:
    paths: '/api/bill/v1/'
    methods: GET
  billApi:
    paths: '/api/bill/v1/*'

serviceEndpoints:
  authService:
    url: 'http://localhost:8000'
  taskService:
    url: 'http://localhost:8002'
  msgService:
    url: 'http://localhost:8004'
  notifyService:
    url: 'http://localhost:8006'
  billService:
    url: 'http://localhost:8008'

policies:
  - basic-auth
  - cors
  - jwt
  - log
  - proxy

pipelines:
  authDefaultPipeline:
    apiEndpoints:
      - authApiDefault
    policies:
      - log: &log
        - action:    # array of condition/actions objects
            message: ${req.ip} - ${req.method} ${req.originalUrl} ${JSON.stringify(req.body)} # parameter for log action
      - 
        cors: &cors
        - 
          action:
            origin: '*'
            methods: 'HEAD,PUT,PATCH,POST,DELETE,OPTIONS'
            allowedHeaders: 'Origin,X-Requested-With,contentType,Content-Type,Accept,Authorization'
            preflightContinue: true
            optionsSuccessStatus: 204
            credentials: true
            maxAge: 600
      - proxy: &as
        - action:
            serviceEndpoint: authService
            changeOrigin: true  
  authPipeline:
    apiEndpoints:
      - authApi
    policies:
      - log: *log
      - cors: *cors
      - jwt: &jwt
        - action:
            secretOrPublicKeyFile: ./cert/murpheux.pem
            checkCredentialExistence: false
      - proxy: *as

  taskDefaultPipeline:
    apiEndpoints:
      - taskApiDefault
    policies:
      - log: *log
      - cors: *cors
      - proxy: &ts
        - action:
            serviceEndpoint: taskService
            changeOrigin: true
  taskPipeline:
    apiEndpoints:
      - taskApi
    policies:
      - log: *log
      - cors: *cors
      - jwt: *jwt
      - proxy: *ts
  
  msgDefaultPipeline:
    apiEndpoints:
      - msgApiDefault
    policies:
      - log: *log
      - cors: *cors
      - proxy: &ms
        - action:
            serviceEndpoint: msgService
            changeOrigin: true
  msgPipeline:
    apiEndpoints:
      - msgApi
    policies:
      - log: *log
      - cors: *cors
      - jwt: *jwt
      - proxy: *ms

  notifyDefaultPipeline:
    apiEndpoints:
      - notifyApiDefault
    policies:
      - log: *log
      - cors: *cors
      - proxy: &ns
        - action:
            serviceEndpoint: notifyService
            changeOrigin: true
  notifyPipeline:
    apiEndpoints:
      - notifyApi
    policies:
      - log: *log
      - cors: *cors
      - jwt: *jwt
      - proxy: *ns

  billDefaultPipeline:
    apiEndpoints:
      - billApiDefault
    policies:
      - log: *log
      - cors: *cors
      - proxy: &bs
        - action:
            serviceEndpoint: billService
            changeOrigin: true
  billPipeline:
    apiEndpoints:
      - billApi
    policies:
      - log: *log
      - cors: *cors
      - jwt: *jwt
      - proxy: *bs
